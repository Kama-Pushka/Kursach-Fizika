### Добавление партии в коалицию:
# set_temp_variable = { ideology = token:[IDEOLOGY] } 	## IDEOLOGY -- название идеологии (democratic, communism, fascism, neutrality...)
# NW_add_to_coalition = yes
NW_add_to_coalition = {
	log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): add_to_array NW_coalition_array = [?ideology.GetTokenKey] (NW_add_to_coalition)"
	
	NW_convert_ideology_token_to_idx = yes
	if = {
		limit = { NOT = { is_in_array = { NW_coalition_array = ideology } } }
		add_to_array = { NW_coalition_array = ideology }
	}
}

### Исключение партии из коалиции:
# set_temp_variable = { ideology = token:[IDEOLOGY] } 	## IDEOLOGY -- название идеологии (democratic, communism, fascism, neutrality...)
# NW_remove_from_coalition = yes
NW_remove_from_coalition = {
	log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove_from_array NW_coalition_array = [?ideology.GetTokenKey] (NW_remove_from_coalition)"
	
	NW_convert_ideology_token_to_idx = yes
	remove_from_array = { NW_coalition_array = ideology }
}

### Роспуск коалиции:
# (optional) set_temp_variable = { no_rulling_party = 1 }	## правящая партия не будет учитываться в подсчете легитимности
# NW_end_coalition = yes
NW_end_coalition = {
	clear_array = NW_coalition_array
	log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): clear NW_coalition_array (NW_end_coalition)"
	if = {
		limit = { NOT = { check_variable = { no_rulling_party = 1 } } }
		NW_startup_create_coalition_array = yes
	}
}

# ниже вам делать нечего

NW_startup_create_coalition_array = {
	set_temp_variable = { ideology = current_party_ideology_group }
	NW_convert_ideology_token_to_idx = yes
	add_to_array = { NW_coalition_array = ideology }
	log = "[GetDateText]: [THIS.GetName] ([THIS.GetTag]): add_to_array NW_coalition_array = [?current_party_ideology_group.GetTokenKey] (NW_startup_create_coalition_array)"
}

NW_convert_ideology_token_to_idx = {
	for_each_loop = {
		array = global.ideology_groups
		if = {
			limit = { check_variable = { ideology = v } }
			set_temp_variable = { ideology = i }
			set_temp_variable = { break = 1 }
		}
	}
}

NW_legitimacy_update = {
	set_temp_variable = { v = 0 }
	for_each_loop = {
		array = NW_coalition_array
		value = ideology_num
		
		set_temp_variable = { party = global.ideology_groups^ideology_num }
		add_to_temp_variable = { v = party_popularity@var:party }
	}
	add_to_temp_variable = { v = stability }
	divide_temp_variable = { v = 2 }
	
	if = {
		limit = { NOT = { check_variable = { v = NW_current_legitimacy_var } } }
		NW_legitimacy_idea_update = yes
	}
}

NW_legitimacy_idea_update = {
	if = {
		limit = {
			check_variable = { v > 0.849 }
			NOT = {
				check_variable = { NW_current_legitimacy_idea = token:very_good_legitimacy } ## опасно хранить токены в переменных (например при запуске сейва с другого компа токен может иметь другое значение, а в переменной останется прежнее), но в данном случае это допустимо?
				has_government = anarchism
			}
			
			NW_can_set_very_good_legitimacy = yes ## country specific
		}
		# Very Good Legitimacy 85% #
		set_temp_variable = { _new_legitimacy_idea = token:very_good_legitimacy }
		set_temp_variable = { _GUI_new_legitimacy_idea = 1 }
		if = {
			limit = { NOT = { check_variable = { NW_current_legitimacy_idea = 0 } } }
			NW_swap_legitimacy_idea = yes
		}
		else = {
			NW_startup_set_legitimacy_idea = yes
		}
	}
	
	else_if = {
		limit = {
			check_variable = { v > 0.649 }
			check_variable = { v < 0.85 }
			NOT = {
				check_variable = { NW_current_legitimacy_idea = token:good_legitimacy }
				has_government = anarchism
			}
			
			NW_can_set_good_legitimacy = yes ## country specific
		}
		# Good Legitimacy 65 - 84.9% #
		set_temp_variable = { _new_legitimacy_idea = token:good_legitimacy }
		set_temp_variable = { _GUI_new_legitimacy_idea = 2 }
		if = {
			limit = { NOT = { check_variable = { NW_current_legitimacy_idea = 0 } } }
			NW_swap_legitimacy_idea = yes
		}
		else = {
			NW_startup_set_legitimacy_idea = yes
		}
	}
	
	else_if = {
		limit = {
			check_variable = { v > 0.499 }
			check_variable = { v < 0.65 }
			NOT = { 
				check_variable = { NW_current_legitimacy_idea = token:normal_legitimacy } 
			}
			
			NW_can_set_normal_legitimacy = yes ## country specific
		}
		# Normal Legitimacy 50 - 64.9% #
		set_temp_variable = { _new_legitimacy_idea = token:normal_legitimacy }
		set_temp_variable = { _GUI_new_legitimacy_idea = 3 }
		if = {
			limit = { NOT = { check_variable = { NW_current_legitimacy_idea = 0 } } }
			NW_swap_legitimacy_idea = yes
		}
		else = {
			NW_startup_set_legitimacy_idea = yes
		}
	}
	
	else_if = {
		limit = {
			check_variable = { v > 0.299 }
			check_variable = { v < 0.5 }
			NOT = {
				check_variable = { NW_current_legitimacy_idea = token:low_legitimacy }
			}
			
			NW_can_set_low_legitimacy = yes ## country specific
		}
		# Low Legitimacy 30 - 49.9% #
		set_temp_variable = { _new_legitimacy_idea = token:low_legitimacy }
		set_temp_variable = { _GUI_new_legitimacy_idea = 4 }
		if = {
			limit = { NOT = { check_variable = { NW_current_legitimacy_idea = 0 } } }
			NW_swap_legitimacy_idea = yes
		}
		else = {
			NW_startup_set_legitimacy_idea = yes
		}
	}
	
	else_if = {
		limit = {
			check_variable = { v > 0.099 }
			check_variable = { v < 0.3 }
			NOT = {
				check_variable = { NW_current_legitimacy_idea = token:very_low_legitimacy }
			}
			
			NW_can_set_very_low_legitimacy = yes ## country specific
		}
		# Very Low Legitimacy 10 - 29.9% #
		set_temp_variable = { _new_legitimacy_idea = token:very_low_legitimacy }
		set_temp_variable = { _GUI_new_legitimacy_idea = 5 }
		if = {
			limit = { NOT = { check_variable = { NW_current_legitimacy_idea = 0 } } }
			NW_swap_legitimacy_idea = yes
		}
		else = {
			NW_startup_set_legitimacy_idea = yes
		}
	}
	
	else_if = {
		limit = {
			check_variable = { v < 0.099 }
			NOT = {
				check_variable = { NW_current_legitimacy_idea = token:disaster_legitimacy }
			}
			
			NW_can_set_disaster_legitimacy = yes ## country specific
		}
		# Disaster Legitimacy 9.9% #
		set_temp_variable = { _new_legitimacy_idea = token:disaster_legitimacy }
		set_temp_variable = { _GUI_new_legitimacy_idea = 6 }
		if = {
			limit = { NOT = { check_variable = { NW_current_legitimacy_idea = 0 } } }
			NW_swap_legitimacy_idea = yes
		}
		else = {
			NW_startup_set_legitimacy_idea = yes
		}
	}
	
	set_variable = { NW_current_legitimacy_var = v }
	NW_legitimacy_default_effects_update = yes
	
	# if = {
		# limit = { has_country_flag = spain_block_legitimacy_flag }
		# log = "[GetDateText]: [THIS.GetName] ([THIS.GetTag]): NW_legitimacy_check: итог - spain_block_legitimacy_flag"
	# }
	# else = {
		# log = "[GetDateText]: [THIS.GetName] ([THIS.GetTag]): NW_legitimacy_check: итог - legitimacy_[?current_legitimacy_idea_var.GetTokenKey]"
	# }
}

NW_legitimacy_default_effects_update = {
	set_variable = { NW_l_political_power_gain = NW_current_legitimacy_var }
	divide_variable = { NW_l_political_power_gain = 2 }
	# force_update_dynamic_modifier = yes
}

NW_startup_set_legitimacy_idea = {
	add_ideas = var:_new_legitimacy_idea
	set_variable = { NW_current_legitimacy_idea = _new_legitimacy_idea }
	set_variable = { GUI_current_legitimacy_idea_NUM = _GUI_new_legitimacy_idea } #GUI
	
	if = {
		limit = { NOT = { has_dynamic_modifier = { modifier = NW_legitimacy_default_effects } } }
		add_dynamic_modifier = { modifier = NW_legitimacy_default_effects }
	}
	# log = "[GetDateText]: [THIS.GetName] ([THIS.GetTag]): idea [?_new_legitimacy_idea.GetTokenKey]" 
}

NW_swap_legitimacy_idea = {
	NW_set_legitimacy_alert = yes
	
	swap_ideas = {
		remove_idea = var:NW_current_legitimacy_idea
		add_idea = var:_new_legitimacy_idea
	}

	# log = "[GetDateText]: [THIS.GetName] ([THIS.GetTag]): NW_legitimacy_check: current idea legitimacy_[?THIS.current_legitimacy_idea_var.GetTokenKey] | new idea legitimacy_[?THIS.new_legitimacy_idea_var.GetTokenKey]" 
	set_variable = { NW_current_legitimacy_idea = _new_legitimacy_idea }
}

NW_set_legitimacy_alert = { ### ДЛЯ ГУИ
	set_variable = { GUI_current_legitimacy_idea = NW_current_legitimacy_idea }
	set_variable = { GUI_new_legitimacy_idea = _new_legitimacy_idea }
	
	if = {
		limit = { check_variable = { _GUI_new_legitimacy_idea > GUI_current_legitimacy_idea_NUM } }
		set_variable = { GUI_up_or_down_status_var = 1 }	# Понижение
	}
	else = {
		set_variable = { GUI_up_or_down_status_var = 2 }	# Повышение
	}
	
	set_variable = { GUI_current_legitimacy_idea_NUM = _GUI_new_legitimacy_idea }
	
	if = { 
		limit = { has_game_rule = { rule = swap_legitimacy_alert option = DEFAULT } }
		clr_country_flag = change_migration_level_flag
		set_country_flag = { flag = change_legitimacy_flag days = 4 value = 1 } #alert
	} 
	else_if = {
		limit = { has_game_rule = { rule = swap_legitimacy_alert option = SWAP_TO_EVENT } }
		meta_effect = { 		# TODO лучше без этого
			text = { country_event = TRlegitimacy.[NUM] }
			NUM = "[?_GUI_new_legitimacy_idea]"
		}
	}
}
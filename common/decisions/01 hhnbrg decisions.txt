HHNBRG_opposition_in_habsburg_empire_category = {

	HHNBRG_opposition_in_habsburg_empire_dec = {
		icon = generic_civil_support
		available = {
			always = no
		}
		allowed = {
			always = no
		}
		activation = {
			always = no #Triggered from effect
		}
		cancel_trigger = {
			NOT = { has_war_with = event_target:NW_hhnbrg_scope }
		}
		
		#is_good = yes
		days_mission_timeout = 30
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): timeout decision HHNBRG_opposition_in_habsburg_empire_dec"
			random_list = {
				33 = {
					random_owned_state = {
						limit = {
							is_fully_controlled_by = ROOT
							arms_factory > 0
						}
						damage_building = {
							type = arms_factory
							damage = 0.25
						}
					}
				}
				33 = {
					random_owned_state = {
						limit = {
							is_fully_controlled_by = ROOT
							industrial_complex > 0
						}
						damage_building = {
							type = industrial_complex
							damage = 0.25
						}
					}
				}
				33 = {
					random_owned_state = {
						limit = {
							is_fully_controlled_by = ROOT
							infrastructure > 0
						}
						damage_building = {
							type = infrastructure
							damage = 1
						}
					}
				}
				1 = { }
			}
			hidden_effect = {
				if = {
					limit = { has_war_with = event_target:NW_hhnbrg_scope }
					activate_mission = HHNBRG_opposition_in_habsburg_empire_dec
				}
			}
		}
	}
}

HHNBRG_swiss_fortress_category = {

	HHNBRG_emergency_transfer_capital = {
		icon = eng_install_government
		available = {
			has_war = yes
			3 = { is_owned_and_controlled_by = ROOT }
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
		}
		cost = 50
		days_remove = 10
		fire_only_once = yes
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_emergency_transfer_capital"
			set_capital = { state =  3 }
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	HHNBRG_north_border = {
		icon = eng_trade_unions_demand
		available = {
			any_owned_state = {
				is_core_of = SWI
				is_fully_controlled_by = ROOT
				any_neighbor_state = { 
					is_fully_controlled_by = GER
				}
			}
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
		}
		cost = 25
		days_remove = 12
		fire_only_once = yes
		modifier = {
			production_speed_bunker_factor = 1.0
			production_speed_coastal_bunker_factor = 1.0
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_north_border"
			every_owned_state = {
				limit = {
					is_core_of = SWI
					any_neighbor_state = { 
						is_fully_controlled_by = GER
					}
				}
				add_building_construction = {
					type = bunker
					level = 2
					instant_build = yes
					province = {
						limit_to_border = yes
					}
				}
			}
			set_country_flag = HHNBRG_north_border_flag
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 50
				has_war_with = GER
			}
		}
	}
	
	HHNBRG_strengthening_north_border = {
		icon = eng_trade_unions_demand
		available = {
			any_owned_state = {
				is_core_of = SWI
				is_fully_controlled_by = ROOT
				any_neighbor_state = { 
					is_fully_controlled_by = GER
				}
			}
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
			has_country_flag = HHNBRG_north_border_flag
		}
		cost = 25
		days_remove = 12
		fire_only_once = yes
		modifier = {
			production_speed_bunker_factor = 1.0
			production_speed_coastal_bunker_factor = 1.0
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_strengthening_north_border"
			every_owned_state = {
				limit = {
					is_core_of = SWI
					any_neighbor_state = { 
						is_fully_controlled_by = GER
					}
				}
				add_building_construction = {
					type = bunker
					level = 2
					instant_build = yes
					province = {
						limit_to_border = yes
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 50
				has_war_with = GER
			}
		}
	}
	
	
	HHNBRG_western_border = {
		icon = eng_trade_unions_demand
		available = {
			any_owned_state = {
				is_core_of = SWI
				is_fully_controlled_by = ROOT
				any_neighbor_state = { 
					is_fully_controlled_by = event_target:NW_france_scope
				}
			}
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
		}
		cost = 25
		days_remove = 20
		fire_only_once = yes
		modifier = {
			production_speed_bunker_factor = 1.0
			production_speed_coastal_bunker_factor = 1.0
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_western_border"
			every_owned_state = {
				limit = {
					is_core_of = SWI
					any_neighbor_state = { 
						is_fully_controlled_by = event_target:NW_france_scope
					}
				}
				add_building_construction = {
					type = bunker
					level = 2
					instant_build = yes
					province = {
						limit_to_border = yes
					}
				}
			}
			set_country_flag = HHNBRG_western_border_flag
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 50
				has_war_with = event_target:NW_france_scope
			}
		}
	}
	
	HHNBRG_strengthening_western_border = {
		icon = eng_trade_unions_demand
		available = {
			any_owned_state = {
				is_core_of = SWI
				is_fully_controlled_by = ROOT
				any_neighbor_state = { 
					is_fully_controlled_by = event_target:NW_france_scope
				}
			}
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
			has_country_flag = HHNBRG_western_border_flag
		}
		cost = 25
		days_remove = 20
		fire_only_once = yes
		modifier = {
			production_speed_bunker_factor = 1.0
			production_speed_coastal_bunker_factor = 1.0
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_strengthening_western_border"
			every_owned_state = {
				limit = {
					is_core_of = SWI
					any_neighbor_state = { 
						is_fully_controlled_by = event_target:NW_france_scope
					}
				}
				add_building_construction = {
					type = bunker
					level = 2
					instant_build = yes
					province = {
						limit_to_border = yes
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 50
				has_war_with = event_target:NW_france_scope
			}
		}
	}
	
	
	HHNBRG_southern_border = {
		icon = eng_trade_unions_demand
		available = {
			any_owned_state = {
				is_core_of = SWI
				is_fully_controlled_by = ROOT
				any_neighbor_state = { 
					is_fully_controlled_by = ITA
				}
			}
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
		}
		cost = 25
		days_remove = 28
		fire_only_once = yes
		modifier = {
			production_speed_bunker_factor = 1.0
			production_speed_coastal_bunker_factor = 1.0
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_southern_border"
			every_owned_state = {
				limit = {
					is_core_of = SWI
					any_neighbor_state = { 
						is_fully_controlled_by = ITA
					}
				}
				add_building_construction = {
					type = bunker
					level = 2
					instant_build = yes
					province = {
						limit_to_border = yes
					}
				}
			}
			set_country_flag = HHNBRG_southern_border_flag
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 50
				has_war_with = ITA
			}
		}
	}
	
	HHNBRG_strengthening_southern_border = {
		icon = eng_trade_unions_demand
		available = {
			any_owned_state = {
				is_core_of = SWI
				is_fully_controlled_by = ROOT
				any_neighbor_state = { 
					is_fully_controlled_by = ITA
				}
			}
		}
		visible = {
			has_completed_focus = HHNBRG_swiss_fortress
			has_country_flag = HHNBRG_southern_border_flag
		}
		cost = 25
		days_remove = 28
		fire_only_once = yes
		modifier = {
			production_speed_bunker_factor = 1.0
			production_speed_coastal_bunker_factor = 1.0
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_strengthening_southern_border"
			every_owned_state = {
				limit = {
					is_core_of = SWI
					any_neighbor_state = { 
						is_fully_controlled_by = ITA
					}
				}
				add_building_construction = {
					type = bunker
					level = 2
					instant_build = yes
					province = {
						limit_to_border = yes
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 50
				has_war_with = ITA
			}
		}
	}
}

HHNBRG_polish_category = {

	HHNBRG_set_friendly_regime_in_poland = {
		icon = generic_civil_support
		available = {
			POL = { anarchism > 0.25 }
		}
		visible = {
			NOT = {
				has_war_with = POL
				has_wargoal_against = POL
			}
		}
		cost = 75
		days_remove = 10
		fire_only_once = yes
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_set_friendly_regime_in_poland"
			create_wargoal = {
				type = puppet_wargoal_focus
				target = POL
			}
			add_ai_strategy = {
				type = antagonize
				id = "POL"
				value = 200
			}
			add_ai_strategy = {
				type = conquer
				id = "POL"
				value = 100
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.1
				strength_ratio = {
					tag = POL
					ratio < 1
				}
			}
			modifier = {
				factor = 5
				strength_ratio = {
					tag = POL
					ratio > 1.25
				}
			}
			modifier = {
				factor = 10
				strength_ratio = {
					tag = POL
					ratio > 2
				}
			}
		}
	}
	
	HHNBRG_call_polish_anarchists = {
		icon = eng_blackshirt_march
		available = {
			has_war_with = POL
			POL = {
				anarchism > 0.025
				any_owned_state = {
					any_neighbor_state = {
					
						owner = {
							OR = {
								tag = ROOT
								is_subject_of = ROOT
								is_in_faction_with = ROOT
							}
						}
					}
				}
			}
			NOT = { has_country_flag = { flag = HHNBRG_call_polish_anarchists_flag value > 0 } }
		}
		visible = {
		}
		custom_cost_trigger = {
			has_political_power > 25.01
			command_power > 25.01
		}
		custom_cost_text = call_polish_anarchists_cost
		days_remove = 10
		days_re_enable = 30
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_call_polish_anarchists"
			POL = { add_popularity = { ideology = anarchism popularity = -0.025 } }
			hidden_effect = {
				if = {
					limit = { NOT = { has_template = "Polish volunteers" } }
					division_template = {
						name = "Polish volunteers"
						is_locked = yes
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
							infantry = { x = 0 y = 3 }
						}
						support = {
							engineer = { x = 0 y = 0 }
						}
					}
				}
			}
			random_state = {
				limit = {
					any_neighbor_state = {
						is_owned_by = POL
					}
					owner = {
						OR = {
							tag = ROOT
							is_subject_of = ROOT
							is_in_faction_with = ROOT
						}
					}
				}
				create_unit = {
					division = "name = \"Polish volunteers\" division_template = \"Polish volunteers\" start_experience_factor = 0.6" 
					owner = ROOT
					count = 5
					allow_spawning_on_enemy_provs = yes
				}
			}
			custom_effect_tooltip = HHNBRG_call_polish_anarchists_tt
			hidden_effect = { POL = { country_event = { id = NWhohenberg.20 } } }
		}
		
		complete_effect = {
			set_country_flag = { flag = HHNBRG_call_polish_anarchists_flag days = 30 value = 1 }
			hidden_effect = {
				add_political_power = -25
				add_command_power = -25
			}
		}
		
		ai_will_do = {
			factor = 5
		}
	}
	
	HHNBRG_premature_attack = {
		icon = generic_ignite_civil_war
		available = {
			is_subject = no
			POL = { is_subject = no }
			any_of_scopes = {
				array = global.majors
				tooltip = is_major_tt
				has_war_with = POL
			}
		}
		visible = {
			country_exists = POL
			NOT = {
				has_war_with = POL
				has_wargoal_against = POL
			}
		}
		days_remove = 10
		fire_only_once = yes
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_premature_attack"
			create_wargoal = {
				type = puppet_wargoal_focus
				target = POL
			}
			add_ai_strategy = {
				type = antagonize
				id = "POL"
				value = 200
			}
			add_ai_strategy = {
				type = conquer
				id = "POL"
				value = 100
			}
		}
		ai_will_do = {
			factor = 0
			modifier = {
				add = 100
				has_war = no
			}
			modifier = {
				add = 5
				strength_ratio = {
					tag = POL
					ratio > 1
				}
			}
			modifier = {
				add = 10
				strength_ratio = {
					tag = POL
					ratio > 2
				}
			}
		}
	}
}

HHNBRG_intervention_of_trade_unions_category = {

	HHNBRG_optimal_configuration_machines = {
		icon = generic_industry
		available = {
		}
		visible = {
			has_completed_focus = HHNBRG_intervention_of_trade_unions
		}
		cost = 100
		days_remove = 10
		days_re_enable = 365
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_optimal_configuration_machines"
			add_timed_idea = { idea = HHNBRG_optimal_configuration_machines days = 365 }
		}
		ai_will_do = {
			factor = 5
		}
	}
	
	HHNBRG_regular_maintenance_shipyards = {
		icon = generic_construction
		available = {
			any_owned_state = {
				dockyard > 0
			}
		}
		visible = {
			has_completed_focus = HHNBRG_intervention_of_trade_unions
		}
		cost = 100
		days_remove = 10
		days_re_enable = 365
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_regular_maintenance_shipyards"
			add_timed_idea = { idea = HHNBRG_regular_maintenance_shipyards days = 365 }
		}
		ai_will_do = {
			factor = 5
		}
	}
	
	HHNBRG_development_farm_settlements = {
		icon = hol_attract_foreign_investors
		available = {
		}
		visible = {
			has_completed_focus = HHNBRG_intervention_of_trade_unions
		}
		cost = 100
		days_remove = 10
		days_re_enable = 365
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_development_farm_settlements"
			add_timed_idea = { idea = HHNBRG_development_farm_settlements days = 365 }
		}
		ai_will_do = {
			factor = 2.5
		}
	}
	
	HHNBRG_urban_growth = {
		icon = eng_install_government
		available = {
		}
		visible = {
			has_completed_focus = HHNBRG_intervention_of_trade_unions
		}
		cost = 100
		days_remove = 10
		days_re_enable = 365
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_urban_growth"
			random_owned_controlled_state = {
				add_manpower = 50000
				add_extra_state_shared_building_slots = 1
			}
		}
		ai_will_do = {
			factor = 5
		}
	}
}

HHNBRG_creation_primary_peoples_congress_category = {

	HHNBRG_creation_primary_peoples_congress = {
		icon = eng_trade_unions_support
		cost = 15
		days_remove = 30
		fire_only_once = yes
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_creation_primary_peoples_congress"
			set_country_flag = primary_peoples_congress_is_created
			custom_effect_tooltip = HHNBRG_creation_primary_peoples_congress_tt
		}
		ai_will_do = {
			factor = 300
		}
	}
}

HHNBRG_national_peoples_congresses_category = {
	
	HHNBRG_expansion_power_congress = {
		icon = generic_civil_support
		available = {
			custom_trigger_tooltip = {
				tooltip = HHNBRG_expansion_power_congress_trigger_tt		
				set_temp_variable = { custom_cost = 10 }
				subtract_from_temp_variable = { custom_cost = custom_cost_minus }
				set_temp_variable = { cost_multiply = 5 }
				set_temp_variable = { total_num_of_congresses_var = num_of_congresses_var }
				add_to_temp_variable = { total_num_of_congresses_var = compensatory_value }
				subtract_from_temp_variable = { total_num_of_congresses_var = num_of_congresses_no_check_var }
				multiply_temp_variable = { cost_multiply = total_num_of_congresses_var }
				add_to_temp_variable = { custom_cost = cost_multiply }
				check_variable = { custom_cost > 39 }
			}
		}
		custom_cost_trigger = {
			set_temp_variable = { stability_cost = 0.05 }
			set_temp_variable = { stability_total = stability }
			subtract_from_temp_variable = { stability_total = modifier@stability_factor }
			check_variable = { stability_total > stability_cost }
		}
		custom_cost_text = stability_cost
		days_remove = 10
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_expansion_power_congress"
			add_to_variable = { custom_cost_minus = 30 }
			custom_effect_tooltip = HHNBRG_expansion_power_congress_effect_tt
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision HHNBRG_expansion_power_congress"
			hidden_effect = {
				add_stability = -0.05
				hidden_effect = { country_event = { id = NWhohenberg.902 } }
			}
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 0
				has_stability < 0.1
			}
			modifier = {
				factor = 0.5
				has_stability < 0.2
			}
		}
	}
	
	#### РЕШЕНИЯ НА СТЕЙТЫ ####
	
	HHNBRG_creation_peoples_congress = {
		icon = eng_trade_unions_support
		on_map_mode = map_only
		state_target = yes
		available = {
			FROM = {
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				if = {
					limit = {
						OR = {
							is_in_home_area = yes
							any_neighbor_state = { is_core_of = ROOT }
						}
					}
					any_neighbor_state = { is_core_of = ROOT }
				}
				else = { is_coastal = yes }
			}
			set_temp_variable = { anarchism_unity_trigger_var = 5 }
			custom_trigger_tooltip = {
				check_variable = { anarchism_unity_var > anarchism_unity_trigger_var }
				tooltip = anarchism_unity_trigger_more
			}
		}
		visible = {
			FROM = {
				impassable = no
				NOT = { has_state_flag = has_peoples_congresses_flag }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
				if = {
					limit = {
						OR = {
							is_in_home_area = yes
							any_neighbor_state = { is_core_of = ROOT }
						}
					}
					any_neighbor_state = { is_core_of = ROOT }
				}
				else = { is_coastal = yes }
			}
		}
		target_trigger = {
			FROM = {
				impassable = no
				NOT = { has_state_flag = has_peoples_congresses_flag }
				is_owned_by = ROOT
				is_fully_controlled_by = ROOT
				if = {
					limit = {
						OR = {
							is_in_home_area = yes
							any_neighbor_state = { is_core_of = ROOT }
						}
					}
					any_neighbor_state = { is_core_of = ROOT }
				}
				else = { is_coastal = yes }
			}
		}
		target_array = owned_controlled_states
		custom_cost_trigger = {
			set_temp_variable = { custom_cost = 10 }
			subtract_from_temp_variable = { custom_cost = custom_cost_minus }
			set_temp_variable = { cost_multiply = 5 }
			set_temp_variable = { total_num_of_congresses_var = num_of_congresses_var }
			add_to_temp_variable = { total_num_of_congresses_var = compensatory_value }
			subtract_from_temp_variable = { total_num_of_congresses_var = num_of_congresses_no_check_var }
			multiply_temp_variable = { cost_multiply = total_num_of_congresses_var }
			add_to_temp_variable = { custom_cost = cost_multiply }
			has_political_power > custom_cost
		}
		custom_cost_text = creation_peoples_congress_cost
		days_remove = 30
		cancel_trigger = {
			hidden_trigger = {
				NOT = { has_full_control_of_state = FROM }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): remove decision HHNBRG_creation_peoples_congress"
			subtract_from_variable = { compensatory_value = 1 }
			add_to_variable = { num_of_congresses_var = 1 }
			custom_effect_tooltip = HHNBRG_creation_peoples_congress_tt
			FROM = {
				set_state_flag = has_peoples_congresses_flag
				add_to_array = { global.peoples_congresses_state = This.id }
				if = {
					limit = { NOT = { is_core_of = ROOT } }
					add_core_of = ROOT
				}
			}
			hidden_effect = { country_event = { id = NWhohenberg.899 } }
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): complete decision HHNBRG_creation_peoples_congress"
			add_to_variable = { anarchism_unity_var = -5 tooltip = anarchism_unity_add_effect }
			hidden_effect = {
				set_temp_variable = { custom_cost = 10 }
				subtract_from_temp_variable = { custom_cost = custom_cost_minus }
				set_temp_variable = { cost_multiply = 5 }
				set_temp_variable = { total_num_of_congresses_var = num_of_congresses_var }
				add_to_temp_variable = { total_num_of_congresses_var = compensatory_value }
				subtract_from_temp_variable = { total_num_of_congresses_var = num_of_congresses_no_check_var }
				multiply_temp_variable = { cost_multiply = total_num_of_congresses_var }
				add_to_temp_variable = { custom_cost = cost_multiply }

				set_temp_variable = { custom_cost_temp = 0 }
				subtract_from_temp_variable = { custom_cost_temp = custom_cost }
				add_political_power = custom_cost_temp
				country_event = { id = NWhohenberg.902 }
			}
			add_to_variable = { compensatory_value = 1 }
		}
		ai_will_do = {
			factor = 1
			modifier = {
				add = 30
				set_temp_variable = { congress_influence = num_of_congresses_var }
				divide_temp_variable = { congress_influence = num_owned_states }
				check_variable = { congress_influence < 0.250 }
			}
			modifier = {
				add = 20
				set_temp_variable = { congress_influence = num_of_congresses_var }
				divide_temp_variable = { congress_influence = num_owned_states }
				check_variable = { congress_influence > 0.249 }
				check_variable = { congress_influence < 0.50 }
			}
			modifier = {
				add = 15
				set_temp_variable = { congress_influence = num_of_congresses_var }
				divide_temp_variable = { congress_influence = num_owned_states }
				check_variable = { congress_influence > 0.499 }
				check_variable = { congress_influence < 0.750 }
			}
			modifier = {
				add = 10
				set_temp_variable = { congress_influence = num_of_congresses_var }
				divide_temp_variable = { congress_influence = num_owned_states }
				check_variable = { congress_influence > 0.749 }
				check_variable = { congress_influence < 1 }
			}
			modifier = {
				factor = 0.1
				set_temp_variable = { congress_influence = num_of_congresses_var }
				divide_temp_variable = { congress_influence = num_owned_states }
				check_variable = { congress_influence > 0.999 }
			}
			modifier = { factor = 0.2 FROM = { distance_to = { value < 900 target = capital } } }
			modifier = { factor = 0.3 FROM = { distance_to = { value < 800 target = capital } } }
			modifier = { factor = 0.4 FROM = { distance_to = { value < 700 target = capital } } }
			modifier = { factor = 0.5 FROM = { distance_to = { value < 600 target = capital } } }
			modifier = { factor = 0.6 FROM = { distance_to = { value < 500 target = capital } } }
			modifier = { factor = 0.7 FROM = { distance_to = { value < 400 target = capital } } }
			modifier = { factor = 0.8 FROM = { distance_to = { value < 300 target = capital } } }
			modifier = { factor = 0.9 FROM = { distance_to = { value < 200 target = capital } } }
			modifier = { factor = 1 FROM = { distance_to = { value < 100 target = capital } } }
		}
	}
}

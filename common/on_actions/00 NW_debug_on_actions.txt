on_actions = {
	on_startup = {
		effect = { 
			log = "[GetDateText]: Start new game"
			
			if = { ### historical 
				limit = { is_historical_focus_on = yes }
				log = "[GetDateText]: IS HISTORICAL FOCUS ON - YES"
			}
			else = { 
				log = "[GetDateText]: IS HISTORICAL FOCUS ON - NO"
			}
			
#			if = { ### CAN
#				limit = { has_game_rule = { rule = CAN_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: CAN_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CAN_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: CAN_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CAN_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: CAN_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CAN_ai_behavior option = DEMOCRATIC_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: CAN_ai_behavior - DEMOCRATIC_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CAN_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: CAN_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CAN_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: CAN_ai_behavior - RANDOM"
#			}
#			
#			if = { ### MEX
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = SECULAR_REPUBLIC } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - SECULAR_REPUBLIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = SOCIAL_CATHOLICISM } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - SOCIAL_CATHOLICISM"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = FASCIST_DICTATORSHIP } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - FASCIST_DICTATORSHIP"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = THEOCRATIC_ORDER } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - THEOCRATIC_ORDER"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = SOVIET_REPUBLIC } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - SOVIET_REPUBLIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = CARDENISMO } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - CARDENISMO"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = TROZKISM } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - TROZKISM"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MEX_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: MEX_ai_behavior - RANDOM"
#			}
#			
			if = { ### USA
				limit = { has_game_rule = { rule = USA_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: USA_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = USA_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: USA_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = USA_ai_behavior option = DEMOCRATIC_HISTORICAL } }
				log = "[GetDateText]: GAME RULE: USA_ai_behavior - DEMOCRATIC_HISTORICAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = USA_ai_behavior option = DEMOCRATIC_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: USA_ai_behavior - DEMOCRATIC_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = USA_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: USA_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = USA_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: USA_ai_behavior - RANDOM"
			}
			
			if = { ### DOM
				limit = { has_game_rule = { rule = DOM_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: DOM_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = DOM_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: DOM_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = DOM_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: DOM_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = DOM_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: DOM_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = DOM_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: DOM_ai_behavior - RANDOM"
			}
			
#			if = { ### BRA
#				limit = { has_game_rule = { rule = BRA_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: BRA_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BRA_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: BRA_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BRA_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: BRA_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BRA_ai_behavior option = NEUTRAL } }
#				log = "[GetDateText]: GAME RULE: BRA_ai_behavior - NEUTRAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BRA_ai_behavior option = DEMOCRATIC } }
#				log = "[GetDateText]: GAME RULE: BRA_ai_behavior - DEMOCRATIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BRA_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: BRA_ai_behavior - RANDOM"
#			}
#			
#			if = { ### BOL
#				limit = { has_game_rule = { rule = BOL_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: BOL_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BOL_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: BOL_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BOL_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: BOL_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BOL_ai_behavior option = MONARCHY } }
#				log = "[GetDateText]: GAME RULE: BOL_ai_behavior - MONARCHY"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BOL_ai_behavior option = TROZKIST } }
#				log = "[GetDateText]: GAME RULE: BOL_ai_behavior - TROZKIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = BOL_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: BOL_ai_behavior - RANDOM"
#			}
			
			if = { ### GER
				limit = { has_game_rule = { rule = GER_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: GER_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = GER_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: GER_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = GER_ai_behavior option = OPPOSE_HITLER } }
				log = "[GetDateText]: GAME RULE: GER_ai_behavior - OPPOSE_HITLER"
			}
			else_if = {
				limit = { has_game_rule = { rule = GER_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: GER_ai_behavior - RANDOM"
			}
			
			if = { ### GWR
				limit = { has_game_rule = { rule = GWR_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: GWR_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = GWR_ai_behavior option = WEHRSTAAT } }
				log = "[GetDateText]: GAME RULE: GWR_ai_behavior - WEHRSTAAT"
			}
			else_if = {
				limit = { has_game_rule = { rule = GWR_ai_behavior option = KAISER } }
				log = "[GetDateText]: GAME RULE: GWR_ai_behavior - KAISER"
			}
			else_if = {
				limit = { has_game_rule = { rule = GWR_ai_behavior option = IMPERIAL_CONSTITUTION } }
				log = "[GetDateText]: GAME RULE: GWR_ai_behavior - IMPERIAL_CONSTITUTION"
			}
			else_if = {
				limit = { has_game_rule = { rule = GWR_ai_behavior option = POWER_TO_REFORMERS } }
				log = "[GetDateText]: GAME RULE: GWR_ai_behavior - POWER_TO_REFORMERS"
			}
			else_if = {
				limit = { has_game_rule = { rule = GWR_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: GWR_ai_behavior - RANDOM"
			}
			
			if = { ### GBF
				limit = { has_game_rule = { rule = GBF_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: GBF_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = GBF_ai_behavior option = NAZBOL } }
				log = "[GetDateText]: GAME RULE: GBF_ai_behavior - NAZBOL"
			}
			else_if = {
				limit = { has_game_rule = { rule = GBF_ai_behavior option = STRASSER } }
				log = "[GetDateText]: GAME RULE: GBF_ai_behavior - STRASSER"
			}
			else_if = {
				limit = { has_game_rule = { rule = GBF_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: GBF_ai_behavior - RANDOM"
			}
			
			if = { ### SOV		TODO
				limit = { has_game_rule = { rule = SOV_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: SOV_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = SOV_ai_behavior option = HISTORICAL } }
				log = "[GetDateText]: GAME RULE: SOV_ai_behavior - HISTORICAL"
			}
			# else_if = {
				# limit = { has_game_rule = { rule = SOV_ai_behavior option = ALTERNATE } }
				# log = "[GetDateText]: GAME RULE: SOV_ai_behavior - ALTERNATE"
			# }
			else_if = {
				limit = { has_game_rule = { rule = SOV_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: SOV_ai_behavior - RANDOM"
			}
			
			if = { ### ITA
				limit = { has_game_rule = { rule = ITA_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ITA_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ITA_ai_behavior option = FASCIST_HISTORICAL } }
				log = "[GetDateText]: GAME RULE: ITA_ai_behavior - FASCIST_HISTORICAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = ITA_ai_behavior option = FASCIST_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: ITA_ai_behavior - FASCIST_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = ITA_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: ITA_ai_behavior - RANDOM"
			}
			
			if = { ### FRA
				limit = { has_game_rule = { rule = FRA_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = DEMOCRATIC_HISTORICAL } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - DEMOCRATIC_HISTORICAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = DEMOCRATIC_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - DEMOCRATIC_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = FASCIST_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - FASCIST_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRA_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: FRA_ai_behavior - RANDOM"
			}
			
			if = { ### FRC
				limit = { has_game_rule = { rule = FRC_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: FRC_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRC_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: FRC_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRC_ai_behavior option = TROZKIST } }
				log = "[GetDateText]: GAME RULE: FRC_ai_behavior - TROZKIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRC_ai_behavior option = ANARCHIST } }
				log = "[GetDateText]: GAME RULE: FRC_ai_behavior - ANARCHIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRC_ai_behavior option = ANARCHIST_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: FRC_ai_behavior - ANARCHIST_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = FRC_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: FRC_ai_behavior - RANDOM"
			}
			
#			if = { ### POL
#				limit = { has_game_rule = { rule = POL_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: POL_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = POL_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: POL_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = POL_ai_behavior option = HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: POL_ai_behavior - HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = POL_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: POL_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = POL_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: POL_ai_behavior - RANDOM"
#			}
			
			if = { ### HUN
				limit = { has_game_rule = { rule = HUN_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - DEFAULT"
			}
#			else_if = {
#				limit = { has_game_rule = { rule = HUN_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - COMMUNIST"
#			}
			else_if = {
				limit = { has_game_rule = { rule = HUN_ai_behavior option = AUSTRIA_HUNGARY } }
				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - AUSTRIA_HUNGARY"
			}
#			else_if = {
#				limit = { has_game_rule = { rule = HUN_ai_behavior option = DEMOCRATIC } }
#				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - DEMOCRATIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HUN_ai_behavior option = FASCIST_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - FASCIST_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HUN_ai_behavior option = FASCIST_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - FASCIST_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HUN_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: HUN_ai_behavior - RANDOM"
#			}
			
			if = { ### HBBRG
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = AUSTRIA_HUNGARY } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - AUSTRIA_HUNGARY"
			}
			else_if = {
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = DEMOCRATIC_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - DEMOCRATIC_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = ANARCHIST } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - ANARCHIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = HBBRG_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: HBBRG_ai_behavior - RANDOM"
			}
			
#			if = { ### ROM
#				limit = { has_game_rule = { rule = ROM_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: ROM_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ROM_ai_behavior option = BALKAN_DOMINANCE } }
#				log = "[GetDateText]: GAME RULE: ROM_ai_behavior - BALKAN_DOMINANCE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ROM_ai_behavior option = DEMOCRATIC } }
#				log = "[GetDateText]: GAME RULE: ROM_ai_behavior - DEMOCRATIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ROM_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: ROM_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ROM_ai_behavior option = FASCIST_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: ROM_ai_behavior - FASCIST_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ROM_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: ROM_ai_behavior - RANDOM"
#			}
#			
#			if = { ### YUG
#				limit = { has_game_rule = { rule = YUG_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: YUG_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = YUG_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: YUG_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = YUG_ai_behavior option = DEMOCRATIC } }
#				log = "[GetDateText]: GAME RULE: YUG_ai_behavior - DEMOCRATIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = YUG_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: YUG_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = YUG_ai_behavior option = HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: YUG_ai_behavior - HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = YUG_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: YUG_ai_behavior - RANDOM"
#			}
#			
#			if = { ### CZE
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = DEMOCRATIC } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - DEMOCRATIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = DEMOCRATIC_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - DEMOCRATIC_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CZE_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: CZE_ai_behavior - RANDOM"
#			}
#			
#			if = { ### ENG
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = DEMOCRATIC_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - DEMOCRATIC_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = NEUTRALITY } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - NEUTRALITY"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ENG_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: ENG_ai_behavior - RANDOM"
#			}
#			
#			if = { ### HOL
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = DEMOCRATIC_ALTERNATE_1 } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - DEMOCRATIC_ALTERNATE_1"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = DEMOCRATIC_ALTERNATE_2 } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - DEMOCRATIC_ALTERNATE_2"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = DEMOCRATIC_ALTERNATE_3 } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - DEMOCRATIC_ALTERNATE_3"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = NEUTRALITY } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - NEUTRALITY"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = HOL_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: HOL_ai_behavior - RANDOM"
#			}
			
			if = { ### BUL
				limit = { has_game_rule = { rule = BUL_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: BUL_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = BUL_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: BUL_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = BUL_ai_behavior option = FASCIST_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: BUL_ai_behavior - FASCIST_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = BUL_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: BUL_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = BUL_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: BUL_ai_behavior - RANDOM"
			}
			
			if = { ### GRE
				limit = { has_game_rule = { rule = GRE_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: GRE_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = GRE_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: GRE_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = GRE_ai_behavior option = NEUTRALITY } }
				log = "[GetDateText]: GAME RULE: GRE_ai_behavior - NEUTRALITY"
			}
			else_if = {
				limit = { has_game_rule = { rule = GRE_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: GRE_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = GRE_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: GRE_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = GRE_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: GRE_ai_behavior - RANDOM"
			}
			
			if = { ### BEL
				limit = { has_game_rule = { rule = BEL_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: BEL_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = BEL_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: BEL_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = BEL_ai_behavior option = DEMOCRATIC_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: BEL_ai_behavior - DEMOCRATIC_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = BEL_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: BEL_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = BEL_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: BEL_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = BEL_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: BEL_ai_behavior - RANDOM"
			}
			
			if = { ### LUX
				limit = { has_game_rule = { rule = LUX_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: LUX_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = LUX_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: LUX_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = LUX_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: LUX_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = LUX_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: LUX_ai_behavior - RANDOM"
			}
			
			if = { ### POR
				limit = { has_game_rule = { rule = POR_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = ANARCHIST } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - ANARCHIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = POR_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: POR_ai_behavior - RANDOM"
			}
			
			if = { ### SPR
				limit = { has_game_rule = { rule = SPR_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPR_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPR_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPR_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPR_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPR_ai_behavior option = MONARCHY_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - MONARCHY_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPR_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: SPR_ai_behavior - RANDOM"
			}
			
			if = { ### SPA
				limit = { has_game_rule = { rule = SPA_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: SPA_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPA_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: SPA_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPA_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: SPA_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPA_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: SPA_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPA_ai_behavior option = FASCIST_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: SPA_ai_behavior - FASCIST_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = SPA_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: SPA_ai_behavior - RANDOM"
			}
			
#			if = { ### JAP
#				limit = { has_game_rule = { rule = JAP_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: JAP_ai_behavior - DEFAULT"
#			}
#			#else_if = {
#			#	limit = { has_game_rule = { rule = JAP_ai_behavior option = COMMUNIST } }
#			#	log = "[GetDateText]: GAME RULE: JAP_ai_behavior - COMMUNIST"
#			#}
#			else_if = {
#				limit = { has_game_rule = { rule = JAP_ai_behavior option = NEUTRALITY } }
#				log = "[GetDateText]: GAME RULE: JAP_ai_behavior - NEUTRALITY"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = JAP_ai_behavior option = DEMOCRATIC } }
#				log = "[GetDateText]: GAME RULE: JAP_ai_behavior - DEMOCRATIC"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = JAP_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: JAP_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = JAP_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: JAP_ai_behavior - RANDOM"
#			}
#			
#			if = { ### CHI
#				limit = { has_game_rule = { rule = CHI_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: CHI_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CHI_ai_behavior option = HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: CHI_ai_behavior - HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CHI_ai_behavior option = ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: CHI_ai_behavior - ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = CHI_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: CHI_ai_behavior - RANDOM"
#			}
#			
#			if = { ### PRC
#				limit = { has_game_rule = { rule = PRC_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: PRC_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = PRC_ai_behavior option = HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: PRC_ai_behavior - HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = PRC_ai_behavior option = ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: PRC_ai_behavior - ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = PRC_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: PRC_ai_behavior - RANDOM"
#			}
#			
#			if = { ### MAN
#				limit = { has_game_rule = { rule = MAN_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: MAN_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MAN_ai_behavior option = OBEDIENCE } }
#				log = "[GetDateText]: GAME RULE: MAN_ai_behavior - OBEDIENCE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MAN_ai_behavior option = INDEPENDENCE } }
#				log = "[GetDateText]: GAME RULE: MAN_ai_behavior - INDEPENDENCE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = MAN_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: MAN_ai_behavior - RANDOM"
#			}
#			
#			if = { ### RAJ
#				limit = { has_game_rule = { rule = RAJ_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: RAJ_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = RAJ_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: RAJ_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = RAJ_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: RAJ_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = RAJ_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: RAJ_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = RAJ_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: RAJ_ai_behavior - RANDOM"
#			}
			
			if = { ### SRL
				limit = { has_game_rule = { rule = SRL_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = TROZKIST } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - TROZKIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = SRL_YOU_PASS } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - SRL_YOU_PASS"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = SRL_JAPAN } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - SRL_JAPAN"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = SRL_KNEE } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - SRL_KNEE"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = SRL_GB_CROWN } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - SRL_GB_CROWN"
			}
			else_if = {
				limit = { has_game_rule = { rule = SRL_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: SRL_ai_behavior - RANDOM"
			}
			
			if = { ### SKM
				limit = { has_game_rule = { rule = SKM_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: SKM_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = SKM_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: SKM_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = SKM_ai_behavior option = MONARCHY_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: SKM_ai_behavior - MONARCHY_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = SKM_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: SKM_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = SKM_ai_behavior option = TROZKISM } }
				log = "[GetDateText]: GAME RULE: SKM_ai_behavior - TROZKISM"
			}
			else_if = {
				limit = { has_game_rule = { rule = SKM_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: SKM_ai_behavior - RANDOM"
			}
			
			if = { ### BHU
				limit = { has_game_rule = { rule = BHU_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: BHU_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = BHU_ai_behavior option = SAVE_ISOLATION } }
				log = "[GetDateText]: GAME RULE: BHU_ai_behavior - SAVE_ISOLATION"
			}
			else_if = {
				limit = { has_game_rule = { rule = BHU_ai_behavior option = BREAKING_OUT_OF_ISOLATION } }
				log = "[GetDateText]: GAME RULE: BHU_ai_behavior - BREAKING_OUT_OF_ISOLATION"
			}
			
			if = { ### NEP
				limit = { has_game_rule = { rule = NEP_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: NEP_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = NEP_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: NEP_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = NEP_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: NEP_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = NEP_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: NEP_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = NEP_ai_behavior option = NEUTRALITY } }
				log = "[GetDateText]: GAME RULE: NEP_ai_behavior - NEUTRALITY"
			}
			else_if = {
				limit = { has_game_rule = { rule = NEP_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: NEP_ai_behavior - RANDOM"
			}
			
			if = { ### TIB
				limit = { has_game_rule = { rule = TIB_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = BET_ON_THE_LHASA_ARISTOCRACY } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - BET_ON_THE_LHASA_ARISTOCRACY"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = NEW_REGENCY } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - NEW_REGENCY"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = SAVE_REGENCY } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - SAVE_REGENCY"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = TROZKISM } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - TROZKISM"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = PRO_CHINA } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - PRO_CHINA"
			}
			else_if = {
				limit = { has_game_rule = { rule = TIB_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: TIB_ai_behavior - RANDOM"
			}
			
			if = { ### TUR
				limit = { has_game_rule = { rule = TUR_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = NEUTRAL_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - NEUTRAL_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = TROZKIST } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - TROZKIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = TUR_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: TUR_ai_behavior - RANDOM"
			}
			
			if = { ### AFG
				limit = { has_game_rule = { rule = AFG_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: AFG_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = AFG_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: AFG_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = AFG_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: AFG_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = AFG_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: AFG_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = AFG_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: AFG_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = AFG_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: AFG_ai_behavior - RANDOM"
			}
			
			if = { ### PER
				limit = { has_game_rule = { rule = PER_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = PER_PRO_SOVIET_GOVERNMENT } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - PER_PRO_SOVIET_GOVERNMENT"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = PER_CONCESSIONS_TO_GERMANOPHILES } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - PER_CONCESSIONS_TO_GERMANOPHILES"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = PER_ISLAMIC_REVOLUTION } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - PER_ISLAMIC_REVOLUTION"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = TROZKIST } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - TROZKIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = TECHNOCRAT } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - TECHNOCRAT"
			}
			else_if = {
				limit = { has_game_rule = { rule = PER_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: PER_ai_behavior - RANDOM"
			}
			
			if = { ### IRQ
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = COMMUNIST } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - COMMUNIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = TROZKIST } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - TROZKIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = CABINET_OF_JAMIL_AL_MIDFA } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - CABINET_OF_JAMIL_AL_MIDFA"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = CABINET_OF_RASHID_ALI_AL_GAILANIS } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - CABINET_OF_RASHID_ALI_AL_GAILANIS"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = OFFICE_OF_HIKMAT_SULEIMAN } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - OFFICE_OF_HIKMAT_SULEIMAN"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = MAKE_CONCESSIONS } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - MAKE_CONCESSIONS"
			}
			else_if = {
				limit = { has_game_rule = { rule = IRQ_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: IRQ_ai_behavior - RANDOM"
			}
			
			if = { ### YEM
				limit = { has_game_rule = { rule = YEM_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: YEM_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = YEM_ai_behavior option = YEM_MONARCHY_IMAM } }
				log = "[GetDateText]: GAME RULE: YEM_ai_behavior - YEM_MONARCHY_IMAM"
			}
			else_if = {
				limit = { has_game_rule = { rule = YEM_ai_behavior option = DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: YEM_ai_behavior - DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = YEM_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: YEM_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = YEM_ai_behavior option = INDEPENDENT } }
				log = "[GetDateText]: GAME RULE: YEM_ai_behavior - INDEPENDENT"
			}
			else_if = {
				limit = { has_game_rule = { rule = YEM_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: YEM_ai_behavior - RANDOM"
			}
			
			if = { ### BPL
				limit = { has_game_rule = { rule = BPL_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = COMMUNIST_JEWS } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - COMMUNIST_JEWS"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = ANARCHIST_JEWS } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - ANARCHIST_JEWS"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = DEMOCRATIC_JEWS } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - DEMOCRATIC_JEWS"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = FASCIST_JEWS } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - FASCIST_JEWS"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = NEUTRALITY } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - NEUTRALITY"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = COMMUNIST_ARAB } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - COMMUNIST_ARAB"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = FASCIST_ARAB } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - FASCIST_ARAB"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = DEMOCRATIC_ARAB } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - DEMOCRATIC_ARAB"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = MONARCHY_ARAB } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - MONARCHY_ARAB"
			}
			else_if = {
				limit = { has_game_rule = { rule = BPL_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: BPL_ai_behavior - RANDOM"
			}
			
			if = { ### EGY
				limit = { has_game_rule = { rule = EGY_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_ISLAM_COUNTRY_AND_KING } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_ISLAM_COUNTRY_AND_KING"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_MUSULMAN_BROTHERS } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_MUSULMAN_BROTHERS"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_LAMPSON_SHOOT } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_LAMPSON_SHOOT"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_FARUK_DECLINE } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_FARUK_DECLINE"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_TAKE_ULTIMATUM } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_TAKE_ULTIMATUM"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_NAHRAS_POWER } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_NAHRAS_POWER"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_FEMINISM_ALLY } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_FEMINISM_ALLY"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_KOMMI } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_KOMMI"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = EGY_ART_AND_FREEDOM } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - EGY_ART_AND_FREEDOM"
			}
			else_if = {
				limit = { has_game_rule = { rule = EGY_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: EGY_ai_behavior - RANDOM"
			}
			
			if = { ### ETH
				limit = { has_game_rule = { rule = ETH_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ETH_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ETH_ai_behavior option = MONARCHY } }
				log = "[GetDateText]: GAME RULE: ETH_ai_behavior - MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = ETH_ai_behavior option = ANARCHIST } }
				log = "[GetDateText]: GAME RULE: ETH_ai_behavior - ANARCHIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = ETH_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: ETH_ai_behavior - RANDOM"
			}
			
			if = { ### LIB
				limit = { has_game_rule = { rule = LIB_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = LIB_CONTINUE_CURSE } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - LIB_CONTINUE_CURSE"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = LIB_AMERICANO_LIBERIAN_MIGHTY } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - LIB_AMERICANO_LIBERIAN_MIGHTY"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = LIB_CALL_TRIBES } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - LIB_CALL_TRIBES"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = LIB_RESOLUTION_OF_LEAGUE_OF_NATIONS } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - LIB_RESOLUTION_OF_LEAGUE_OF_NATIONS"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = LIB_CONSULAR_COUP } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - LIB_CONSULAR_COUP"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = LIB_DISCLOSURE_TRUE_VIGG_PARTY } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - LIB_DISCLOSURE_TRUE_VIGG_PARTY"
			}
			else_if = {
				limit = { has_game_rule = { rule = LIB_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: LIB_ai_behavior - RANDOM"
			}
			
#			if = { ### SAF
#				limit = { has_game_rule = { rule = SAF_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: SAF_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = SAF_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: SAF_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = SAF_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: SAF_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = SAF_ai_behavior option = DEMOCRATIC_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: SAF_ai_behavior - DEMOCRATIC_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = SAF_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: SAF_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = SAF_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: SAF_ai_behavior - RANDOM"
#			}
			
			if = { ### COG
				limit = { has_game_rule = { rule = COG_ai_behavior option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: COG_ai_behavior - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = COG_ai_behavior option = NEUTRAL } }
				log = "[GetDateText]: GAME RULE: COG_ai_behavior - NEUTRAL"
			}
			else_if = {
				limit = { has_game_rule = { rule = COG_ai_behavior option = NEUTRAL_ALTERNATE } }
				log = "[GetDateText]: GAME RULE: COG_ai_behavior - NEUTRAL_ALTERNATE"
			}
			else_if = {
				limit = { has_game_rule = { rule = COG_ai_behavior option = FASCIST } }
				log = "[GetDateText]: GAME RULE: COG_ai_behavior - FASCIST"
			}
			else_if = {
				limit = { has_game_rule = { rule = COG_ai_behavior option = RANDOM } }
				log = "[GetDateText]: GAME RULE: COG_ai_behavior - RANDOM"
			}
			
#			if = { ### AST
#				limit = { has_game_rule = { rule = AST_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: AST_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = AST_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: AST_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = AST_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: AST_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = AST_ai_behavior option = DEMOCRATIC_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: AST_ai_behavior - DEMOCRATIC_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = AST_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: AST_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = AST_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: AST_ai_behavior - RANDOM"
#			}
#			
#			if = { ### NZL
#				limit = { has_game_rule = { rule = NZL_ai_behavior option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: NZL_ai_behavior - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = NZL_ai_behavior option = COMMUNIST } }
#				log = "[GetDateText]: GAME RULE: NZL_ai_behavior - COMMUNIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = NZL_ai_behavior option = DEMOCRATIC_HISTORICAL } }
#				log = "[GetDateText]: GAME RULE: NZL_ai_behavior - DEMOCRATIC_HISTORICAL"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = NZL_ai_behavior option = DEMOCRATIC_ALTERNATE } }
#				log = "[GetDateText]: GAME RULE: NZL_ai_behavior - DEMOCRATIC_ALTERNATE"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = NZL_ai_behavior option = FASCIST } }
#				log = "[GetDateText]: GAME RULE: NZL_ai_behavior - FASCIST"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = NZL_ai_behavior option = RANDOM } }
#				log = "[GetDateText]: GAME RULE: NZL_ai_behavior - RANDOM"
#			}
			
			if = { ### allow wargoals
				limit = { has_game_rule = { rule = allow_wargoals option = ALWAYS_FREE } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - ALWAYS_FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_wargoals option = LIMITED } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - LIMITED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_wargoals option = FREE_25 } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - FREE_25"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_wargoals option = FREE_50 } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - FREE_50"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_wargoals option = FREE_75 } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - FREE_75"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_wargoals option = FREE_100 } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - FREE_100"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_wargoals option = FOCUSES_ONLY } }
				log = "[GetDateText]: GAME RULE: allow_wargoals - FOCUSES_ONLY"
			}
			
			if = { ### allow_access
				limit = { has_game_rule = { rule = allow_access option = FREE } }
				log = "[GetDateText]: GAME RULE: allow_access - FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_access option = SAME_IDEOLOGY } }
				log = "[GetDateText]: GAME RULE: allow_access - SAME_IDEOLOGY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_access option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_access - BLOCKED"
			}
			
			if = { ### allow_release_nations
				limit = { has_game_rule = { rule = allow_release_nations option = FREE } }
				log = "[GetDateText]: GAME RULE: allow_release_nations - FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_release_nations option = PEACE_ONLY } }
				log = "[GetDateText]: GAME RULE: allow_release_nations - PEACE_ONLY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_release_nations option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_release_nations - BLOCKED"
			}
			
			if = { ### allow_licensing
				limit = { has_game_rule = { rule = allow_licensing option = FREE } }
				log = "[GetDateText]: GAME RULE: allow_licensing - FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_licensing option = SAME_IDEOLOGY } }
				log = "[GetDateText]: GAME RULE: allow_licensing - SAME_IDEOLOGY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_licensing option = SAME_FACTION } }
				log = "[GetDateText]: GAME RULE: allow_licensing - SAME_FACTION"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_licensing option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_licensing - BLOCKED"
			}
			
			if = { ### allow_lend_lease
				limit = { has_game_rule = { rule = allow_lend_lease option = FREE } }
				log = "[GetDateText]: GAME RULE: allow_lend_lease - FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_lend_lease option = LIMITED } }
				log = "[GetDateText]: GAME RULE: allow_lend_lease - LIMITED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_lend_lease option = SAME_IDEOLOGY } }
				log = "[GetDateText]: GAME RULE: allow_lend_lease - SAME_IDEOLOGY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_lend_lease option = SAME_FACTION } }
				log = "[GetDateText]: GAME RULE: allow_lend_lease - SAME_FACTION"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_lend_lease option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_lend_lease - BLOCKED"
			}
			
			if = { ### allow_volunteers
				limit = { has_game_rule = { rule = allow_volunteers option = ALWAYS_FREE } }
				log = "[GetDateText]: GAME RULE: allow_volunteers - ALWAYS_FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_volunteers option = LIMITED } }
				log = "[GetDateText]: GAME RULE: allow_volunteers - LIMITED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_volunteers option = SAME_IDEOLOGY } }
				log = "[GetDateText]: GAME RULE: allow_volunteers - SAME_IDEOLOGY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_volunteers option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_volunteers - BLOCKED"
			}
			
			if = { ### allow_guarantees
				limit = { has_game_rule = { rule = allow_guarantees option = ALWAYS_FREE } }
				log = "[GetDateText]: GAME RULE: allow_guarantees - ALWAYS_FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_guarantees option = LIMITED } }
				log = "[GetDateText]: GAME RULE: allow_guarantees - LIMITED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_guarantees option = SAME_IDEOLOGY } }
				log = "[GetDateText]: GAME RULE: allow_guarantees - SAME_IDEOLOGY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_guarantees option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_guarantees - BLOCKED"
			}
			
			if = { ### allow_revoke_guarantees
				limit = { has_game_rule = { rule = allow_revoke_guarantees option = ALLOWED } }
				log = "[GetDateText]: GAME RULE: allow_revoke_guarantees - ALLOWED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_revoke_guarantees option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_revoke_guarantees - BLOCKED"
			}
			
			if = { ### allow_leave_faction
				limit = { has_game_rule = { rule = allow_leave_faction option = ALLOWED } }
				log = "[GetDateText]: GAME RULE: allow_leave_faction - ALLOWED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_leave_faction option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_leave_faction - BLOCKED"
			}
			
			if = { ### allow_kick_faction
				limit = { has_game_rule = { rule = allow_kick_faction option = ALLOWED } }
				log = "[GetDateText]: GAME RULE: allow_kick_faction - ALLOWED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_kick_faction option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_kick_faction - BLOCKED"
			}
			
			if = { ### allow_take_over_faction
				limit = { has_game_rule = { rule = allow_take_over_faction option = ALLOWED } }
				log = "[GetDateText]: GAME RULE: allow_take_over_faction - ALLOWED"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_take_over_faction option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_take_over_faction - BLOCKED"
			}
			
			if = { ### allow_coups
				limit = { has_game_rule = { rule = allow_coups option = FREE } }
				log = "[GetDateText]: GAME RULE: allow_coups - FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_coups option = AI_ONLY } }
				log = "[GetDateText]: GAME RULE: allow_coups - AI_ONLY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_coups option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_coups - BLOCKED"
			}
			
			if = { ### allow_party_boosting
				limit = { has_game_rule = { rule = allow_party_boosting option = FREE } }
				log = "[GetDateText]: GAME RULE: allow_party_boosting - FREE"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_party_boosting option = AI_ONLY } }
				log = "[GetDateText]: GAME RULE: allow_party_boosting - AI_ONLY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_party_boosting option = PLAYER_ONLY } }
				log = "[GetDateText]: GAME RULE: allow_party_boosting - PLAYER_ONLY"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_party_boosting option = BLOCKED } }
				log = "[GetDateText]: GAME RULE: allow_party_boosting - BLOCKED"
			}
			
			if = { ### allow_paratroopers
				limit = { has_game_rule = { rule = allow_paratroopers option = yes } }
				log = "[GetDateText]: GAME RULE: allow_paratroopers - yes"
			}
			else_if = {
				limit = { has_game_rule = { rule = allow_paratroopers option = no } }
				log = "[GetDateText]: GAME RULE: allow_paratroopers - no"
			}
			
#			if = { ### borders
#				limit = { has_game_rule = { rule = historical_border_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: historical_border_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = historical_border_status option = POSTWAR_BORDER } }
#				log = "[GetDateText]: GAME RULE: historical_border_status - POSTWAR_BORDER"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = historical_border_status option = POSTWAR_POLITIC_BORDER } }
#				log = "[GetDateText]: GAME RULE: historical_border_status - POSTWAR_POLITIC_BORDER"
#			}
#			
#			if = { ### americas_colonization_status
#				limit = { has_game_rule = { rule = americas_colonization_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: americas_colonization_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = americas_colonization_status option = AMERICAS_DECOLONIZED } }
#				log = "[GetDateText]: GAME RULE: americas_colonization_status - AMERICAS_DECOLONIZED"
#			}
#			
#			if = { ### africa_colonization_status
#				limit = { has_game_rule = { rule = africa_colonization_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: africa_colonization_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = africa_colonization_status option = AFRICA_DECOLONIZED } }
#				log = "[GetDateText]: GAME RULE: africa_colonization_status - AFRICA_DECOLONIZED"
#			}
#			
#			if = { ### asia_colonization_status
#				limit = { has_game_rule = { rule = asia_colonization_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: asia_colonization_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = asia_colonization_status option = ASIA_DECOLONIZED } }
#				log = "[GetDateText]: GAME RULE: asia_colonization_status - ASIA_DECOLONIZED"
#			}
#			
#			if = { ### eng_fragmentation_status
#				limit = { has_game_rule = { rule = eng_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: eng_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = eng_fragmentation_status option = ENG_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: eng_fragmentation_status - ENG_FRAGMENTED"
#			}
#			
#			if = { ### yug_fragmentation_status
#				limit = { has_game_rule = { rule = yug_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: yug_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = yug_fragmentation_status option = YUG_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: yug_fragmentation_status - YUG_FRAGMENTED"
#			}
#			
#			if = { ### cze_fragmentation_status
#				limit = { has_game_rule = { rule = cze_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: cze_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = cze_fragmentation_status option = CZE_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: cze_fragmentation_status - CZE_FRAGMENTED"
#			}
#			
#			if = { ### sov_fragmentation_status
#				limit = { has_game_rule = { rule = sov_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: sov_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = sov_fragmentation_status option = SOV_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: sov_fragmentation_status - SOV_FRAGMENTED"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = sov_fragmentation_status option = SOV_FULLY_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: sov_fragmentation_status - SOV_FULLY_FRAGMENTED"
#			}
#			
#			if = { ### raj_fragmentation_status
#				limit = { has_game_rule = { rule = raj_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: raj_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = raj_fragmentation_status option = RAJ_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: raj_fragmentation_status - RAJ_FRAGMENTED"
#			}
#			
#			if = { ### pol_fragmentation_status
#				limit = { has_game_rule = { rule = pol_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: pol_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = pol_fragmentation_status option = POL_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: pol_fragmentation_status - POL_FRAGMENTED"
#			}
#			
#			if = { ### ita_fragmentation_status
#				limit = { has_game_rule = { rule = ita_fragmentation_status option = DEFAULT } }
#				log = "[GetDateText]: GAME RULE: ita_fragmentation_status - DEFAULT"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = ita_fragmentation_status option = ITA_FRAGMENTED } }
#				log = "[GetDateText]: GAME RULE: ita_fragmentation_status - ITA_FRAGMENTED"
#			}
			
			if = { ### generic_tree_all_allowed
				limit = { has_game_rule = { rule = generic_tree_all_allowed option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_allowed - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_allowed option = GENERIC_ALLOWED_ALL } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_allowed - GENERIC_ALLOWED_ALL"
			}
			
			if = { ### generic_tree_all_set_ideology
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_DEMOCRATIC } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_DEMOCRATIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_COMMUNISM } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_COMMUNISM"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_FASCISM } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_FASCISM"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_NEUTRALITY } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_NEUTRALITY"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_TECHNOCRACY } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_TECHNOCRACY"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_TROZKISM } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_TROZKISM"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_MONARCHY } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_MONARCHY"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_tree_all_set_ideology option = GENERIC_ALL_SET_ANARCHISM } }
				log = "[GetDateText]: GAME RULE: generic_tree_all_set_ideology - GENERIC_ALL_SET_ANARCHISM"
			}
			
			if = { ### generic_spawn_anarchists
				limit = { has_game_rule = { rule = generic_spawn_anarchists option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: generic_spawn_anarchists - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_spawn_anarchists option = GENERIC_SPAWN_ANARCHISTS_ONE } }
				log = "[GetDateText]: GAME RULE: generic_spawn_anarchists - GENERIC_SPAWN_ANARCHISTS_ONE"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_spawn_anarchists option = GENERIC_SPAWN_ANARCHISTS_TWO } }
				log = "[GetDateText]: GAME RULE: generic_spawn_anarchists - GENERIC_SPAWN_ANARCHISTS_TWO"
			}
			else_if = {
				limit = { has_game_rule = { rule = generic_spawn_anarchists option = GENERIC_SPAWN_ANARCHISTS_THREE } }
				log = "[GetDateText]: GAME RULE: generic_spawn_anarchists - GENERIC_SPAWN_ANARCHISTS_THREE"
			}
			
			if = { ### miracles_status
				limit = { has_game_rule = { rule = miracles_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: miracles_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = miracles_status option = MIRACLES } }
				log = "[GetDateText]: GAME RULE: miracles_status - MIRACLES"
			}
			else_if = {
				limit = { has_game_rule = { rule = miracles_status option = MIRACLES_AND_MOAI } }
				log = "[GetDateText]: GAME RULE: miracles_status - MIRACLES_AND_MOAI"
			}
			
			#if = { ### rebels_setup
			#	limit = { has_game_rule = { rule = rebels_setup option = DEFAULT } }
			#	log = "[GetDateText]: GAME RULE: rebels_setup - DEFAULT"
			#}
			#else_if = {
			#	limit = { has_game_rule = { rule = rebels_setup option = REBELS_NONE } }
			#	log = "[GetDateText]: GAME RULE: rebels_setup - REBELS_NONE"
			#}
			
			#if = { ### kill_general
			#	limit = { has_game_rule = { rule = kill_general option = DEFAULT } }
			#	log = "[GetDateText]: GAME RULE: kill_general - DEFAULT"
			#}
			#else_if = {
			#	limit = { has_game_rule = { rule = kill_general option = FORBIDDEN_TO_KILL } }
			#	log = "[GetDateText]: GAME RULE: kill_general - FORBIDDEN_TO_KILL"
			#}
			
			if = { ### ai_faction_status
				limit = { has_game_rule = { rule = ai_faction_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ai_faction_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_faction_status option = AI_FACTION_LOWER } }
				log = "[GetDateText]: GAME RULE: ai_faction_status - AI_FACTION_LOWER"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_faction_status option = AI_FACTION_ONE_CONTINENT } }
				log = "[GetDateText]: GAME RULE: ai_faction_status - AI_FACTION_ONE_CONTINENT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_faction_status option = AI_FACTION_ONE_IDEOLOGY_HARD } }
				log = "[GetDateText]: GAME RULE: ai_faction_status - AI_FACTION_ONE_IDEOLOGY_HARD"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_faction_status option = AI_FACTION_ONE_IDEOLOGY_SOFT } }
				log = "[GetDateText]: GAME RULE: ai_faction_status - AI_FACTION_ONE_IDEOLOGY_SOFT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_faction_status option = AI_FACTION_NO } }
				log = "[GetDateText]: GAME RULE: ai_faction_status - AI_FACTION_NO"
			}
			
			if = { ### ai_aggression_status
				limit = { has_game_rule = { rule = ai_aggression_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ai_aggression_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_aggression_status option = AI_AGGRESSION_MORE } }
				log = "[GetDateText]: GAME RULE: ai_aggression_status - AI_AGGRESSION_MORE"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_aggression_status option = AI_AGGRESSION_ULTRA } }
				log = "[GetDateText]: GAME RULE: ai_aggression_status - AI_AGGRESSION_ULTRA"
			}
			
			if = { ### ai_division_limiter_status
				limit = { has_game_rule = { rule = ai_division_limiter_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ai_division_limiter_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_limiter_status option = AI_DIVISION_LIMITER_50 } }
				log = "[GetDateText]: GAME RULE: ai_division_limiter_status - AI_DIVISION_LIMITER_50"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_limiter_status option = AI_DIVISION_LIMITER_100 } }
				log = "[GetDateText]: GAME RULE: ai_division_limiter_status - AI_DIVISION_LIMITER_100"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_limiter_status option = AI_DIVISION_LIMITER_150 } }
				log = "[GetDateText]: GAME RULE: ai_division_limiter_status - AI_DIVISION_LIMITER_150"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_limiter_status option = AI_DIVISION_LIMITER_DYNAMIC } }
				log = "[GetDateText]: GAME RULE: ai_division_limiter_status - AI_DIVISION_LIMITER_DYNAMIC"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_limiter_status option = AI_DIVISION_LIMITER_INTELLECTUAL } }
				log = "[GetDateText]: GAME RULE: ai_division_limiter_status - AI_DIVISION_LIMITER_INTELLECTUAL"
			}
			
			if = { ### ai_division_total_limiter_status
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_1000 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_1000"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_1250 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_1250"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_1500 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_1500"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_1750 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_1750"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_2000 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_2000"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_2250 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_2250"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_2500 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_2500"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_2750 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_2750"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_3000 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_3000"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_3250 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_3250"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_division_total_limiter_status option = AI_DIVISION_TOTAL_LIMITER_3500 } }
				log = "[GetDateText]: GAME RULE: ai_division_total_limiter_status - AI_DIVISION_TOTAL_LIMITER_3500"
			}
			
			if = { ### ai_force_build_armies_status
				limit = { has_game_rule = { rule = ai_force_build_armies_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: ai_force_build_armies_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = ai_force_build_armies_status option = AI_FORCE_BUILD_ARMIES_UP } }
				log = "[GetDateText]: GAME RULE: ai_force_build_armies_status - AI_FORCE_BUILD_ARMIES_UP"
			}
			
			if = { ### nuclear_bomb_kill_army_status
				limit = { has_game_rule = { rule = nuclear_bomb_kill_army_status option = NUCLEAR_BOMB_KILL_ARMY_STATUS_ON } }
				log = "[GetDateText]: GAME RULE: nuclear_bomb_kill_army_status - NUCLEAR_BOMB_KILL_ARMY_STATUS_ON"
			}
			else_if = {
				limit = { has_game_rule = { rule = nuclear_bomb_kill_army_status option = NUCLEAR_BOMB_KILL_ARMY_STATUS_ON_HARD } }
				log = "[GetDateText]: GAME RULE: nuclear_bomb_kill_army_status - NUCLEAR_BOMB_KILL_ARMY_STATUS_ON_HARD"
			}
			else_if = {
				limit = { has_game_rule = { rule = nuclear_bomb_kill_army_status option = NUCLEAR_BOMB_KILL_ARMY_STATUS_OFF } }
				log = "[GetDateText]: GAME RULE: nuclear_bomb_kill_army_status - NUCLEAR_BOMB_KILL_ARMY_STATUS_OFF"
			}
			
			if = { ### num_of_operative_slot_status
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_0 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_0"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_5 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_5"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_10 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_10"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_15 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_15"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_20 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_20"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_30 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_30"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_operative_slot_status option = PER_50 } }
				log = "[GetDateText]: GAME RULE: num_of_operative_slot_status - PER_50"
			}
			
			if = { ### num_of_maximum_operative_status
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_5 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_5"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_10 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_10"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_15 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_15"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_20 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_20"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_25 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_25"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_30 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_30"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_50 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_50"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_75 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_75"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_100 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_100"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_150 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_150"
			}
			else_if = {
				limit = { has_game_rule = { rule = num_of_maximum_operative_status option = NUM_OF_MAXIMUM_OPERATIVE_200 } }
				log = "[GetDateText]: GAME RULE: num_of_maximum_operative_status - NUM_OF_MAXIMUM_OPERATIVE_200"
			}
			
#			if = { ### allow_ai_embargo
#				limit = { has_game_rule = { rule = allow_ai_embargo option = DONT_ALLOW_AI_EMBARGO } }
#				log = "[GetDateText]: GAME RULE: allow_ai_embargo - DONT_ALLOW_AI_EMBARGO"
#			}
#			else_if = {
#				limit = { has_game_rule = { rule = allow_ai_embargo option = ALLOW_AI_EMBARGO_YES } }
#				log = "[GetDateText]: GAME RULE: allow_ai_embargo - ALLOW_AI_EMBARGO_YES"
#			}
			
			if = { ### swap_legitimacy_alert
				limit = { has_game_rule = { rule = swap_legitimacy_alert option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: swap_legitimacy_alert - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = swap_legitimacy_alert option = SWAP_TO_EVENT } }
				log = "[GetDateText]: GAME RULE: swap_legitimacy_alert - SWAP_TO_EVENT"
			}
			
			if = { ### swap_migration_alert
				limit = { has_game_rule = { rule = swap_migration_alert option = DEFAULT } }
				log = "[GetDateText]: GAME RULE: swap_migration_alert - DEFAULT"
			}
			else_if = {
				limit = { has_game_rule = { rule = swap_migration_alert option = SWAP_TO_EVENT } }
				log = "[GetDateText]: GAME RULE: swap_migration_alert - SWAP_TO_EVENT"
			}
			
			log = "================================================================================="
		}
	}
	on_government_change = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_government_change } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): government change to [Root.GetRulingIdeology]"
			}
		} 
	}
	on_peaceconference_ended = { 
		effect = {
			if = {
				limit = { NOT = { has_global_flag = log_on_peaceconference_ended } }
				log = "[GetDateText]: Peaceconference ended. [Root.GetName] ([Root.GetTag]) - winner and [From.GetName] ([From.GetTag]) - loser"
			}
		} 
	}
	on_subject_annexed = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_subject_annexed } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) annexed to subject [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
	on_subject_free = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_subject_free } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) grants freedom to [Root.GetName] ([Root.GetTag])"
			}
		}
	}		
	on_subject_autonomy_level_change = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_subject_autonomy_level_change } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]): autonomy level of [Root.GetName] ([Root.GetTag]) changes"
			}
		}
	}
	on_justifying_wargoal_pulse = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_justifying_wargoal_pulse } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) wargoal under justification to [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_wargoal_expire = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_wargoal_expire } }
				log = "[GetDateText]: Wargoal [From.GetName] ([From.GetTag]) to [Root.GetName] ([Root.GetTag]) expire"
			}
		}
	} 
	on_declare_war = {
		effect = {
			if = {
				limit = { NOT = { has_global_flag = log_on_declare_war } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): declare war to [From.GetName] ([From.GetTag])"
			}
		}
	}
	on_nuke_drop = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_nuke_drop } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) nuclear bomb dropped"
			}
		} 
	}
	on_leave_faction = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_leave_faction } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) leave from faction"
			}
		} 
	}
	on_create_faction = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_create_faction } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) create new faction"
			}
		} 
	}
	on_join_faction = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_join_faction } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) invate to faction"
			}
		} 
	}
	on_capitulation = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_capitulation } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) capitulated"
			}
		} 
	}
	on_uncapitulation = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_uncapitulation } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) uncapitulated"
			}
		} 
	}
	on_civil_war_end = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_civil_war_end } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) won the civil war with [From.GetName]"
			}
		} 
	}
	on_puppet = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_puppet } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) puppeted [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
	on_release_as_puppet = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_release_as_puppet } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) release as puppet [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
	on_annex = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_annex } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) annexed [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_release_as_free = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_release_as_free } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) release as free [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
	on_state_control_changed = {
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_state_control_changed } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) took control of [From.From.GetName] ([From.From.GetID]), the country of [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_paradrop = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_paradrop } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) send paradrops in state of [This.GetName] (id: [This.GetID]) ([From.From.GetID]), the country of [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
	on_ruling_party_change = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_ruling_party_change } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ruling party change to [Root.GetRulingIdeology]"
			}
		} 
	}
	on_send_volunteers = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_send_volunteers } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) send volunteers to [From.GetName] ([From.GetTag])"
			}
		} 
	}

	on_operation_completed = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_operation_completed } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) completed operation [This.GetName] in [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_operative_detected_during_operation = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_operative_detected_during_operation } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) killed operating [This.GetName] from [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_operative_on_mission_spotted = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_operative_on_mission_spotted } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) on_operative_on_mission_spotted [This.GetName] in [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_operative_captured = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_operative_captured } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) captured operative [This.GetName] from [From.GetName] ([From.GetTag])"
			}
		} 
	}
	on_operative_death = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_operative_death } }
				log = "[GetDateText]: [Root.GetName] ([Root.GetTag]) in this country operative [This.GetName] from [From.GetName] ([From.GetTag]) died"
			}
		} 
	}
	on_fully_decrypted_cipher = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_fully_decrypted_cipher } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) fully decrypted cipher [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
	on_activated_active_decryption_bonuses = { 
		effect = { 
			if = {
				limit = { NOT = { has_global_flag = log_on_activated_active_decryption_bonuses } }
				log = "[GetDateText]: [From.GetName] ([From.GetTag]) active decryption bonuses against [Root.GetName] ([Root.GetTag])"
			}
		} 
	}
}

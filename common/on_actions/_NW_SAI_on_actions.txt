on_actions = {
	on_startup = {
		effect = {
			every_possible_country = {
				limit = {
					if = {
						limit = { has_start_date < 1936.1.2 }
						NOT = {		# здесь должны писаться только tag, а не original_tag
							tag = JAP
						}		
					}
				}
				activate_advisor = generic_political_advisor_blocked_1_political_advisor
				activate_advisor = generic_political_advisor_blocked_2_political_advisor
				
				set_country_flag = generic_political_advisor_blocked_1_political_advisor
				set_country_flag = generic_political_advisor_blocked_2_political_advisor
				
#				meta_effect = {
#					text = {
#						random_character = {
#							limit = { is_character = generic_political_advisor_blocked_1 }
#							set_variable = [TAG].generic_political_advisor_blocked_1
#						}
#						random_character = {
#							limit = { is_character = generic_political_advisor_blocked_2 }
#							set_variable = [TAG].generic_political_advisor_blocked_2
#						}
#					}
#					TAG = "[This.GetTag]"
#				}
			}
			
			SAI = {
				# Первомайская демонстрация пульсар
				if = {
					limit = { has_start_date < 1936.1.2 }				# 1 мая the_gathering_storm
					country_event = { id = NWgeneric.15 days = 120 }
				}
				else_if = {
					limit = {											# 1 мая blitzkrieg
						has_start_date > 1936.1.2
						has_start_date < 1939.8.15
					}
					country_event = { id = NWgeneric.15 days = 261 }
				}
				else_if = {
					limit = {											# 1 мая the_mother_of_order
						has_start_date > 1940.1.1
						has_start_date < 1940.1.3
					}
					country_event = { id = NWgeneric.15 days = 119 }
				}
				else_if = {
					limit = {											# 1 мая world_of_split_name
						has_start_date > 1941.12.4
						has_start_date < 1941.12.6
					}
					country_event = { id = NWgeneric.15 days = 147 }
				}
			}
		}
	}
	
	
	
	on_daily_SAI = {
		effect = {
		
### PER ###		# ФИКСАЦИЯ ВЛИЯНИЯ И ОТНОШЕНИЯ ДУХОВЕНСТВА PER
			every_country_with_original_tag = {
				original_tag_to_check = PER
				if = {
					limit = {
						has_completed_focus = PER_islamic_revolution
						has_government = fascism
					}
					set_variable = { opinion_with_clergy_var = 10 }
					set_variable = { influence_of_clergy_var = 10 }
				}
			}
		
### VOLUNTEER_ONLY
			every_country = {
				if = {
					limit = { has_idea = volunteer_only }
					if = {
						limit = { NOT = { has_dynamic_modifier = { modifier = volunteer_only_dyn } } }
						add_dynamic_modifier = { modifier = volunteer_only_dyn }
					}
					set_variable = { volunteer_only_var = party_popularity@ruling_party }
					multiply_variable = { volunteer_only_var = has_war_support }
					multiply_variable = { volunteer_only_var = 0.0045 }
					subtract_from_variable = { volunteer_only_var = 0.015 }
				}
### COMMUNICATION_WITH_BLACK_MARKET_FOCUS // GENERIC
				if = {
					limit = {
						has_idea = communication_with_black_market_focus
						check_variable = { anarchism_tendency_need_trade_var > 0 }
					}
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = anarchism_tendency_need_trade_var
					}
				}
### PEOPLES_POLICE // АНАРХИ
				if = {
					limit = {
						has_idea = peoples_police
					}
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = 2
					}
				}
### PEOPLES_MILITIA // АНАРХИ
				if = {
					limit = {
						has_idea = peoples_militia
					}
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = 3
					}
				}
### ОБЩЕМЕХАНЫ // АНАРХИ
				if = {
					limit = {
						has_government = anarchism
					}
					set_var_for_anarchism_tendency_sense_of_danger_dyn = yes
					set_var_for_anarchism_tendency_interest_industry_dyn = yes
					set_var_for_anarchism_tendency_need_trade_dyn = yes
					update_anarchism_tendency_pool = yes
### ANARCHISM UNITY					
					add_to_variable = { anarchism_unity_var = modifier@anarchist_unity_bonus }
					clamp_variable = { var = anarchism_unity_var min = 0 max = 100 }
				}
### ОБЩЕМЕХАНЫ // generic_building_organization
				if = {
					limit = {
						has_dlc = "Arms Against Tyranny"
					}
					if = {
						limit = { num_of_factories > 125 }
						set_temp_variable = { num_of_build_exp_temp = 0.15 }
					}
					else = {
						set_temp_variable = { num_of_build_exp_temp = 0.25 }
					}
					add_to_temp_variable = { num_of_build_exp_temp = generic_building_organization_add_money }
					multiply_temp_variable = { num_of_build_exp_temp = num_of_civilian_factories_available_for_projects }
					clamp_temp_variable = { var = num_of_build_exp_temp min = 0.0 max = 50.0 }
					set_variable = { ROOT.num_of_build_exp = num_of_build_exp_temp }
					every_military_industrial_organization = {	# mio:generic_building_organization
						limit = {
							is_mio_available = yes
							has_mio_equipment_type = mio_cat_eq_build
						}
						add_mio_funds = ROOT.num_of_build_exp
						set_variable = { num_of_build_exp = num_of_build_exp_temp }
					}
				}
			}
		}
	}
	
	
	
	on_weekly_SAI = {
		effect = {
### CHI ### #Удержание позиций // Миссия для is_literally_china
			if = {
				limit = {
					all_of_scopes = {
						array = global.is_literally_china
						all_core_state = { controller = { NOT = { tag = JAP is_subject_of = JAP is_in_faction_with = JAP } } }
					}
					KOR = { all_core_state = { controller = { NOT = { tag = JAP is_subject_of = JAP is_in_faction_with = JAP } } } }
				}
				random_scope_in_array = {
					array = global.is_literally_china
					limit = { exists = yes has_country_flag = china_declare_government_flag }
					if = {
						limit = { has_country_flag = JAP_offer_peace_to_Japan_flag }
						clr_country_flag = JAP_offer_peace_to_Japan_flag
					}
					activate_mission = JAP_holding_positions_mission
				}
			}
### BRM ### #Борьба коммунистов // Залупа BRM
			random_country_with_original_tag = {
				original_tag_to_check = BRM
				limit = {
					has_government = trozkism
					has_completed_focus = BRM_burmese_martyrs_day
					NOT = { has_country_flag = BRM_the_struggle_for_power_category_BLOCK_flag }
				}
				add_to_variable = { BRM_clear_party_var = modifier@BRM_clear_party_var_weekly_modifier }
				subtract_from_variable = { BRM_stable_party_var = modifier@BRM_clear_party_var_weekly_modifier }
				add_to_variable = { BRM_stable_party_var = modifier@BRM_stable_party_var_weekly_modifier }
				subtract_from_variable = { BRM_clear_party_var = modifier@BRM_stable_party_var_weekly_modifier }
				BRM_the_struggle_for_power_effect = yes
			}
### HOL ### #Пропаганда // Нацдух HOL
			HOL = {
				if = {
					limit = {
						NOT = { check_variable = { modifier@HOL_agitation_of_anarchists_modifier = 0 } }
					}
					set_temp_variable = { HOL_support_for_the_anarchism_party_var_temp = modifier@HOL_agitation_of_anarchists_modifier }
					add_to_variable = { HOL_support_for_the_anarchism_party_var = HOL_support_for_the_anarchism_party_var_temp }
					HOL_checking_vars_gui_effect = yes
				}
				if = {
					limit = {
						NOT = { check_variable = { modifier@HOL_agitation_of_ratcommi_modifier = 0 } }
					}
					set_temp_variable = { HOL_support_for_the_ratcommi_party_var_temp = modifier@HOL_agitation_of_ratcommi_modifier }
					add_to_variable = { HOL_support_for_the_ratcommi_party_var = HOL_support_for_the_ratcommi_party_var_temp }
					HOL_checking_vars_gui_effect = yes
				}
				if = {
					limit = {
						NOT = { check_variable = { modifier@HOL_agitation_of_commi_modifier = 0 } }
					}
					set_temp_variable = { HOL_support_for_the_communist_party_var_temp = modifier@HOL_agitation_of_commi_modifier }
					add_to_variable = { HOL_support_for_the_communist_party_var = HOL_support_for_the_communist_party_var_temp }
					HOL_checking_vars_gui_effect = yes
				}
				if = {
					limit = {
						NOT = { check_variable = { modifier@HOL_agitation_of_troz_modifier = 0 } }
					}
					set_temp_variable = { HOL_support_for_the_trozkism_party_var_temp = modifier@HOL_agitation_of_troz_modifier }
					add_to_variable = { HOL_support_for_the_trozkism_party_var = HOL_support_for_the_trozkism_party_var_temp }
					HOL_checking_vars_gui_effect = yes
				}
			}
### LIB ###	#Голод // Нацдух LIB
			every_country_with_original_tag = {
				original_tag_to_check = LIB
				if = {
					limit = {
						has_idea = LIB_hunger
					}
					every_owned_state = {
						limit = { is_core_of = PREV }
						add_manpower = -5000
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): минус 5000 менпавера"
				}
			}
			
			
### ETH ###
			every_country_with_original_tag = {
				original_tag_to_check = ETH
				
				#Голод // Нацдух ETH / LIB
				if = {
					limit = {
						has_idea = ETH_hunger
					}
					every_owned_state = {
						limit = { is_core_of = PREV }
						add_manpower = -5000
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): минус 5000 менпавера"
				}
				
				#ETH_ethiopism_trait_1500 // Еженедельный прирост населения: §R-1500§!
				if = {
					limit = {
						has_idea = ETH_ethiopism
					}
					random_owned_state = {
						add_manpower = -1500
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): минус 1500 менпавера"
				}
				#ETH_ethiopism_trait_1000 // Еженедельный прирост населения: §R-1000§!
				if = {
					limit = {
						OR = {
							has_idea = ETH_ethiopism_2
							has_idea = ETH_american_blacks_3
						}
					}
					random_owned_state = {
						add_manpower = -1000
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): минус 1000 менпавера"
				}
				#ETH_american_blacks_trait_1000 // Еженедельный прирост населения: §G1000§!
				if = {
					limit = {
						OR = {
							has_idea = ETH_ethiopism_3
							has_idea = ETH_american_blacks_2
						}
					}
					random_owned_state = {
						add_manpower = 1000
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): плус 1000 менпавера"
				}
				#ETH_american_blacks_trait_1500 // Еженедельный прирост населения: §G1500§!
				if = {
					limit = {
						has_idea = ETH_american_blacks
					}
					random_owned_state = {
						add_manpower = 1500
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): плус 1500 менпавера"
				}
			}
			
			
### AFG ###
			every_country_with_original_tag = {
				original_tag_to_check = AFG 
				set_variable = { var = AFG_number_of_divisions_to_be_created value = AFG_maximum_number_of_divisions_to_be_created }	#Число дивизий от максимального доступного числа дивизий#
				divide_variable = { has_war_support = 100 }																				#Поддержка войны в сотых долях#
				multiply_variable = { AFG_number_of_divisions_to_be_created = has_war_support }											#Число дивизий от поддержки войны#
				round_variable = AFG_number_of_divisions_to_be_created																	#Округление до целого#
			}
			
			
### PER ###		# PER_operative_slot_from_army_idea_dyn
			every_country_with_original_tag = {
				original_tag_to_check = PER
				if = {
					limit = {
						has_intelligence_agency = yes
						has_dynamic_modifier = { modifier = PER_operative_slot_from_army_idea_dyn }
					}
					set_variable = { PER_operative_slot_var = num_divisions }
					divide_variable = { PER_operative_slot_var = 10 }
					round_variable = PER_operative_slot_var
				}
			}
			
			
### TUR ###		# Государственный сектор экономики
			every_country_with_original_tag = {
				original_tag_to_check = TUR
				if = {
					limit = {
						has_dynamic_modifier = { modifier = private_state_dyn }
					}
					if = {
						limit = { num_of_factories < 31 }
						set_temp_variable = { temp1 = 0.05 }
						set_temp_variable = { temp2 = 0.03 }
						set_temp_variable = { temp3 = 0 }
					}
					else_if = {
						limit = {
							num_of_factories > 30
							num_of_factories < 61
						}
						set_temp_variable = { temp1 = 0.03 }
						set_temp_variable = { temp2 = -0.05 }
						set_temp_variable = { temp3 = temp2 }
					}
					else_if = {
						limit = { num_of_factories > 60 }
						set_temp_variable = { temp1 = 0.01 }
						set_temp_variable = { temp2 = -0.1 }
						set_temp_variable = { temp3 = temp2 }
					}
					set_variable = { var_tur_gr_buildings = temp1 }
					set_variable = { var_tur_gr_max_efficiency = temp2 }
					set_variable = { var_tur_gr_efficiency_gain = temp3 }
					force_update_dynamic_modifier = yes
				}
			}
			

### ITA ###		# Универсальные Фабрики
			every_country_with_original_tag = {
				original_tag_to_check = ITA
				start_conversion_universal_factory_mission = yes
			}

			
			every_country = {
			
### AI_DIVISION_LIMITER_DYNAMIC			
				if = {
					limit = {
						has_game_rule = { rule = ai_division_limiter_status option = AI_DIVISION_LIMITER_DYNAMIC }
					}
					set_variable = { ai_upper_limit = num_of_factories }
					multiply_variable = { ai_upper_limit = 1.15 }
					if = {
						limit = { is_major = yes }
						multiply_variable = { ai_upper_limit = 1.15 }
					}
					if = {
						limit = { has_war = yes }
						multiply_variable = { ai_upper_limit = 1.2 }
					}
					if = {
						limit = { threat > 0.74 }
						multiply_variable = { ai_upper_limit = 1.05 }
					}
					round_variable = ai_upper_limit
				}
	
### OPERATIVE_SLOT_IDEA_DYN
				if = {
					limit = {
						NOT = { has_game_rule = { rule = num_of_operative_slot_status option = PER_0 } }
						has_intelligence_agency = yes
					}
					if = {
						limit = { NOT = { has_dynamic_modifier = { modifier = operative_slot_idea_dyn } } }
						add_dynamic_modifier = { modifier = operative_slot_idea_dyn }
					}
					set_temp_variable = { operative_slot_temp = num_of_factories }
					divide_temp_variable = { operative_slot_temp = global.global_setup_operative }
					set_variable = { operative_slot_var = operative_slot_temp }
					round_variable = operative_slot_var
					if = {
						limit = {
							NOT = { has_game_rule = { rule = num_of_maximum_operative_status option = DEFAULT } }
							check_variable = { operative_slot_var > global.global_setup_maximum_operative }
						}
						set_variable = { operative_slot_var = global.global_setup_maximum_operative }
					}
				}
				
### АДМИНИСТРАТИВНАЯ ЭФФЕКТИВНОСТЬ // ANARCHISM
				if = {
					limit = {
						has_variable = administrative_efficiency_var_total
						has_country_flag = generic_attracting_public_attention_to_our_company_flag
					}
					add_to_variable = { administrative_efficiency_var_total = 0.015 }
				}
### CALL_FOR_INTERNATIONAL_COOPERATION // generic anarchism
				if = {
					limit = {
						has_country_flag = call_for_international_cooperation_flag_2
					}
					add_named_threat = { threat = -0.15 name = call_for_international_cooperation }
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): минус 0.15 напряги"
				}
### ОБЩЕМЕХАНЫ // АНАРХИ
				if = {
					limit = {
						has_government = anarchism
					}
					set_var_generic_anarchism_tendency = yes
				}
				
### НАЦ.ДУХ НА СЛОНОВ
				if = {
					limit = {
						OR = {
							has_idea = LIB_elephants
							has_idea = ETH_elephants
							has_idea = ETH_elephants_2
							has_idea = ETH_elephants_3
							has_idea = ETH_elephants_4
							has_idea = ETH_elephants_5
						}
					}
					set_temp_variable = { total_elephant_equipment = ETH_elephants_trait_var }
					set_temp_variable = { num_elephant_states = 0 }
					every_controlled_state = {
						limit = { has_state_flag = elephant_spawn_state_flag }
						add_to_temp_variable = { num_elephant_states = 1 }
					}
					multiply_temp_variable = { total_elephant_equipment = num_elephant_states }
					add_equipment_to_stockpile = {
						type = elephant_equipment
						amount = total_elephant_equipment
					}
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): плус [?total_elephant_equipment] слонов"
				}
				
### НАУЧНЫЕ ЯЧЕЙКИ // sync_research_slot
				if = {
					limit = {
						NOT = { check_variable = { total_add_research_slot = modifier@research_slot_modifier } }
					}
					sync_research_slot = yes
				}
				
### РЕШЕНИЯ НА КРИЗИСЫ
				if = {
					limit = {
						has_unsupported_economic_law = yes
						has_war = no
						NOT = { has_active_mission = demob_economic_mission }
					}
					activate_mission = demob_economic_mission
				}
				if = {
					limit = {
						has_unsupported_manpower_law = yes
						has_war = no
						NOT = { has_active_mission = demob_manpower_mission }
					}
					activate_mission = demob_manpower_mission
				}
### ШПИОНАЖ
				if = {
					limit = { 
						has_intelligence_agency = yes
						is_ai = yes
					}
					update_operation_ai = yes
				}
				
### СБРОС НА ГЕНЕРИК В БЕЗУМНЫХ СЦЕНАРИЯХ
				if = {
					limit = {
						OR = {
							has_global_flag = WORLD_OF_SPLIT_FLAG
							has_global_flag = THE_MOTHER_OF_ORDER_FLAG
						}
						NOT = {
							has_focus_tree = generic_focus
							has_focus_tree = generic_focus_zero
							has_focus_tree = generic_anarchism_focus
						}
					}
					load_focus_tree = { tree = generic_focus keep_completed = no }
				}
				
### ASYMMETRIC_WARFARE_DOCTRINE
				if = {
					limit = {
						has_tech = peoples_army_asy
						NOT = { has_dynamic_modifier = { modifier = asymmetric_warfare_doctrine_dyn } }
					}
					add_dynamic_modifier = { modifier = asymmetric_warfare_doctrine_dyn }
					if = {
						limit = { NOT = { has_variable = NW_awd_num_battalions_limit } }
						set_variable = { NW_awd_num_battalions_limit = 300 }
					}
				}
				if = {
					limit = {
						has_dynamic_modifier = { modifier = asymmetric_warfare_doctrine_dyn }
					}
					NW_asymmetric_warfare_doctrine_effect = yes
				}
			}
		}
	}
	
	
	
	on_monthly_SAI = {
		effect = {
			if = {
				limit = {
					NOT = { has_game_rule = { rule = ai_division_total_limiter_status option = DEFAULT } }
				}
				set_variable = { global.total_division = 0 }
				set_variable = { global.total_ships = 0 }
				set_variable = { global.total_avia = 0 }
				set_variable = { global.total_no_ai_player = 0 }
				every_country = {
					add_to_variable = { global.total_division = THIS.num_divisions }
					add_to_variable = { global.total_ships = THIS.num_ships }
					add_to_variable = { global.total_avia = THIS.num_deployed_planes }
					if = {
						limit = { is_ai = no }
						add_to_variable = { global.total_no_ai_player = 1 }
					}
				}
			}
			every_country_with_original_tag = {
				original_tag_to_check = BRM
				add_to_variable = { BRM_burmese_currency_var = modifier@BRM_burmese_currency_var_monthly_modifier }
				BRM_burmese_currency_effect = yes
			}
			
#			if = {
#				limit = {
#					has_game_rule = { rule = trade_weapons option = DEFAULT }
#					check_variable = { global.total_infantry_weapons > 0 }
#				}
#				#log = "[GetDateText]: [This.GetName] ([This.GetTag]): РАСЧЕТ ПЕХОТКИ ЧЕРНОГО РЫНКА: [?global.total_infantry_weapons]"
#				set_temp_variable = { inflation_rifles = global.total_infantry_weapons }
#				divide_temp_variable = { inflation_rifles = 10 }
#				subtract_from_variable = { global.total_infantry_weapons = inflation_rifles }
#				round_variable = global.total_infantry_weapons
#			}
			
			every_country = {
				if = {
					limit = {
						has_completed_focus = private_tribunals_focus
						NOT = { has_country_flag = { flag = fabricate_goal_against_process_flag value > 0 } }
					}
					clear_global_event_target = fabricate_goal_against_target_@ROOT
					random_neighbor_country = {
						limit = {
							NOT = {
								has_war_with = PREV
								PREV = { has_wargoal_against = PREV }
							}
						}
						save_global_event_target_as = fabricate_goal_against_target_@ROOT
						log = "[GetDateText]: [This.GetName] ([This.GetTag]): Новая цель судов [Root.GetName] ([Root.GetTag])"
					}
				}
### AGENCY UPGRADES
				if = {
					limit = { is_ai = yes }
					set_variable = { NW_max_agency_upgrades = global.num_days }
					subtract_from_variable = { NW_max_agency_upgrades = 706640 }
					divide_variable = { NW_max_agency_upgrades = 30.41 }
					if = {
						limit = { is_major = yes }
						divide_variable = { NW_max_agency_upgrades = 6 }
					}
					else = {
						divide_variable = { NW_max_agency_upgrades = 12 }
					}
					if = {
						limit = { has_capitulated = yes }
						multiply_variable = { NW_max_agency_upgrades = 5 }
					}
					set_temp_variable = { industry_factor = num_of_factories }
					divide_temp_variable = { industry_factor = 1000 }
					add_to_temp_variable = { industry_factor = 1 }
					multiply_variable = { NW_max_agency_upgrades = industry_factor }
				}
			}
		}
	}
	
	
	# FROM is war target	# ROOT is for the country who is declaring war
	on_declare_war = {
		effect = {
			if = {
				limit = {
					FROM = { original_tag = ROOT is_dynamic_tag = yes }
					ROOT = { is_dynamic_tag = no }
				}
				FROM = {
					if = {
						limit = { has_character = generic_political_advisor_blocked_1 }
						random_character = {
							limit = { is_character = generic_political_advisor_blocked_1 }
							set_nationality = ROOT
						}
					}
					if = {
						limit = { has_character = generic_political_advisor_blocked_2 }
						random_character = {
							limit = { is_character = generic_political_advisor_blocked_2 }
							set_nationality = ROOT
						}
					}
				}
				ROOT = {
					if = {
						limit = { has_country_flag = generic_political_advisor_blocked_1_political_advisor }
						activate_advisor = generic_political_advisor_blocked_1_political_advisor
					}
					if = {
						limit = { has_country_flag = generic_political_advisor_blocked_2_political_advisor }
						activate_advisor = generic_political_advisor_blocked_2_political_advisor
					}
				}
			}
			else_if = {
				limit = {
					ROOT = { original_tag = ROOT is_dynamic_tag = yes }
					FROM = { is_dynamic_tag = no }
				}
				ROOT = {
					if = {
						limit = { has_character = generic_political_advisor_blocked_1 }
						random_character = {
							limit = { is_character = generic_political_advisor_blocked_1 }
							set_nationality = FROM
						}
					}
					if = {
						limit = { has_character = generic_political_advisor_blocked_2 }
						random_character = {
							limit = { is_character = generic_political_advisor_blocked_2 }
							set_nationality = FROM
						}
					}
				}
				FROM = {
					if = {
						limit = { has_country_flag = generic_political_advisor_blocked_1_political_advisor }
						activate_advisor = generic_political_advisor_blocked_1_political_advisor
					}
					if = {
						limit = { has_country_flag = generic_political_advisor_blocked_2_political_advisor }
						activate_advisor = generic_political_advisor_blocked_2_political_advisor
					}
				}
			}
			
			
			
			every_possible_country = {
				limit = {
					if = {
						limit = { has_start_date < 1936.1.2 }
						NOT = {		# здесь должны писаться только tag, а не original_tag
							tag = JAP
						}		
					}
					has_any_generic_political_advisor_blocked = no
					NOT = {
						has_country_flag = generic_political_advisor_blocked_1_political_advisor
						has_country_flag = generic_political_advisor_blocked_2_political_advisor
					}
				}
				
				if = {
					limit = { is_dynamic_tag = yes }
					meta_effect = {
						text = {
							recruit_character = [TAG]_generic_political_advisor_blocked_1
							recruit_character = [TAG]_generic_political_advisor_blocked_2
							
							activate_advisor = [TAG]_generic_political_advisor_blocked_1_political_advisor
							activate_advisor = [TAG]_generic_political_advisor_blocked_2_political_advisor
						}
						TAG = "[This.GetTag]"
					}
				}
				else = {
					activate_advisor = generic_political_advisor_blocked_1_political_advisor
					activate_advisor = generic_political_advisor_blocked_2_political_advisor
				}
				set_country_flag = generic_political_advisor_blocked_1_political_advisor
				set_country_flag = generic_political_advisor_blocked_2_political_advisor
			}
		}
	}
	
	# THIS is country that has just gotten into a war.
	on_war = {
		effect = {
			every_possible_country = {
				limit = {
					if = {
						limit = { has_start_date < 1936.1.2 }
						NOT = {		# здесь должны писаться только tag, а не original_tag
							tag = JAP
						}		
					}
					has_any_generic_political_advisor_blocked = no
					NOT = {
						has_country_flag = generic_political_advisor_blocked_1_political_advisor
						has_country_flag = generic_political_advisor_blocked_2_political_advisor
					}
				}
				
				if = {
					limit = { is_dynamic_tag = yes }
					meta_effect = {
						text = {
							recruit_character = [TAG]_generic_political_advisor_blocked_1
							recruit_character = [TAG]_generic_political_advisor_blocked_2
							
							activate_advisor = [TAG]_generic_political_advisor_blocked_1
							activate_advisor = [TAG]_generic_political_advisor_blocked_2
						}
						TAG = "[This.GetTag]"
					}
				}
				else = {
					activate_advisor = generic_political_advisor_blocked_1_political_advisor
					activate_advisor = generic_political_advisor_blocked_2_political_advisor
				}
				set_country_flag = generic_political_advisor_blocked_1_political_advisor
				set_country_flag = generic_political_advisor_blocked_2_political_advisor
			}
		}
	}
	
	# ROOT is attacker, FROM is defender
	on_war_relation_added = {
		effect = {
			every_possible_country = {
				limit = {
					if = {
						limit = { has_start_date < 1936.1.2 }
						NOT = {		# здесь должны писаться только tag, а не original_tag
							tag = JAP
						}		
					}
					has_any_generic_political_advisor_blocked = no
					NOT = {
						has_country_flag = generic_political_advisor_blocked_1_political_advisor
						has_country_flag = generic_political_advisor_blocked_2_political_advisor
					}
				}
				
				if = {
					limit = { is_dynamic_tag = yes }
					meta_effect = {
						text = {
							recruit_character = [TAG]_generic_political_advisor_blocked_1
							recruit_character = [TAG]_generic_political_advisor_blocked_2
							
							activate_advisor = [TAG]_generic_political_advisor_blocked_1
							activate_advisor = [TAG]_generic_political_advisor_blocked_2
						}
						TAG = "[This.GetTag]"
					}
				}
				else = {
					activate_advisor = generic_political_advisor_blocked_1_political_advisor
					activate_advisor = generic_political_advisor_blocked_2_political_advisor
				}
				set_country_flag = generic_political_advisor_blocked_1_political_advisor
				set_country_flag = generic_political_advisor_blocked_2_political_advisor
			}
		}
	}
	
	on_government_change = {
		effect = {
			every_possible_country = {
				limit = {
					if = {
						limit = { has_start_date < 1936.1.2 }
						NOT = {		# здесь должны писаться только tag, а не original_tag
							tag = JAP
						}		
					}
					has_any_generic_political_advisor_blocked = no
					NOT = {
						has_country_flag = generic_political_advisor_blocked_1_political_advisor
						has_country_flag = generic_political_advisor_blocked_2_political_advisor
					}
				}
				
				if = {
					limit = { is_dynamic_tag = yes }
					meta_effect = {
						text = {
							recruit_character = [TAG]_generic_political_advisor_blocked_1
							recruit_character = [TAG]_generic_political_advisor_blocked_2
							
							activate_advisor = [TAG]_generic_political_advisor_blocked_1
							activate_advisor = [TAG]_generic_political_advisor_blocked_2
						}
						TAG = "[This.GetTag]"
					}
				}
				else = {
					activate_advisor = generic_political_advisor_blocked_1_political_advisor
					activate_advisor = generic_political_advisor_blocked_2_political_advisor
				}
				set_country_flag = generic_political_advisor_blocked_1_political_advisor
				set_country_flag = generic_political_advisor_blocked_2_political_advisor
			}
		}
		
### IDEOLOGY ARRAY BLOCK
		effect = {
			remove_from_all_ideology_arrays = yes
			add_to_ideology_array = yes
		}
	}
}
###########################
# Political Events
###########################

add_namespace = TRpolitical
add_namespace = TRstate

# TRpolitical.7 Trozkism >50%
country_event = {
	id = TRpolitical.7
	title = TRpolitical.7.t
	desc = TRpolitical.7.desc
	picture = GFX_report_event_worker_protests
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.7" }
	
	is_triggered_only = yes

	option = {
		name = TRpolitical.7.a

		set_politics = {
			ruling_party = trozkism
			elections_allowed = no
		}
		add_stability = -0.05
	}
}



# Trozkism Opposition Forming
country_event = {
	id = TRpolitical.700
	title = TRpolitical.700.t
	desc = TRpolitical.700.desc
	picture = GFX_report_event_journalists_speech
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.700" }
	
	trigger = {
		has_idea_with_trait = trozkist_revolutionary
		NOT = { has_government = trozkism }
		NOT = { has_country_flag = trozkism_opposition_formed }
		is_puppet = no
	}
	
	mean_time_to_happen = {
		days = 300
		modifier = {
			factor = 0.5
			has_country_flag = trozkism_popular_movement
		}
	}
	
	option = {
		name = TRpolitical.700.a
		add_popularity = {
			ideology = trozkism
			popularity = 0.05
		}
		add_stability = -0.05
		set_country_flag = trozkism_opposition_formed
	}
}

# Public Call for Elections
country_event = {
	id = TRpolitical.701
	title = TRpolitical.701.t
	desc = TRpolitical.701.desc
	picture = GFX_report_event_election_vote
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.701" }
	
	trigger = {
		has_idea_with_trait = trozkist_revolutionary
		NOT = { has_government = trozkism }
		has_country_flag = trozkism_opposition_formed
		NOT = { has_idea = trozkism_opposition_voicing_protests }
	}
	
	mean_time_to_happen = {
		days = 150
	}
	
	option = {
		name = TRpolitical.701.a
	}

	option = {
		name = TRpolitical.701.b
		add_political_power = -20
		add_ideas = trozkism_opposition_voicing_protests
	}
}


#весна
# political.4 trozkism
country_event = {
	id = TRpolitical.702
	title = TRpolitical.702.t
	desc = TRpolitical.702.desc
	picture = GFX_report_event_gathering_protest
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.702" }
	
	trigger = {
		trozkism > 0.7
		#has_idea = trozkism_revolutionaries
		NOT = { has_government = trozkism }
		has_civil_war = no
		#check_has_focus_tree_to_switch_to_neutrality = yes
		NOT = {
			AND = {
				original_tag = GER
				NOT = {
					has_global_flag = THE_MOTHER_OF_ORDER_FLAG
					has_global_flag = WORLD_OF_SPLIT_FLAG
				}
			}
		}
		OR = {
			has_focus_tree = generic_focus
			has_focus_tree = generic_anarchism_focus
		}
	}

	mean_time_to_happen = {
		days = 7
	}

	immediate = {
		hidden_effect = { remove_ideas = trozkism_revolutionaries }
	}

	option = {
		name = TRpolitical.702.a
		ai_chance = {
			factor = 0
		}
		start_civil_war = {
			ideology = trozkism
			size = 0.5
		}
	}

	option = {
		name = TRpolitical.702.b
		ai_chance = {
			factor = 0
		}
		if = {
			limit = {
				has_government = democratic
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = democratic
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = fascism
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = fascism
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = communism
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = communism
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = neutrality
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = neutrality
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = technocracy
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = technocracy
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = monarchy
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = monarchy
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = anarchism
			}
			start_civil_war = {
				ruling_party = trozkism
				ideology = anarchism
				size = 0.5
			}
		}
	}
	
	# We need a referendum
	option = {
		name = political.14.c
		trigger = {
			is_ai = yes
			OR = {
				has_focus_tree = generic_focus
				has_focus_tree = generic_anarchism_focus
			}
		}
		add_political_power = -100
		set_politics = {
			ruling_party = trozkism
			elections_allowed = yes
		}
	}
}

### Suppressed
# political.24 trozkism
country_event = {
	id = TRpolitical.703
	title = TRpolitical.703.t
	desc = TRpolitical.703.desc
	picture = GFX_report_event_europe_funeral
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.703" }
	
	trigger = {
		trozkism < 0.3
		has_idea = trozkism_revolutionaries
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		name = TRpolitical.703.a
		remove_ideas = trozkism_revolutionaries
	}
}



## Снабжение 4 интернационала // автономно
#country_event = {
#	id = TRpolitical.11
#	title = TRpolitical.11.t
#	desc = TRpolitical.11.d
#	picture = GFX_report_event_generic_factory
#	fire_only_once = yes
#	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.11" }
#	
#	trigger = {
#		NOT = { tag = KMX }
#		KMX = { has_completed_focus = four_inter_snab }
#		is_in_faction_with = KMX
#		has_global_flag = four_inter_flag
#		NOT = { has_country_flag = in_intern_snab }
#	}

#	option = {
#		name = TRpolitical.11.a
#		set_country_flag = in_intern_snab
#		add_political_power = 20
#		add_ideas = four_inter_member_snab_idea
#	}
#}



# Антисов_проп
country_event = {
	id = TRpolitical.13
	title = TRpolitical.13.t
	desc = TRpolitical.13.d
	picture = GFX_report_event_hitler_handshake
	is_triggered_only = yes
	fire_only_once = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.13" }
	
	option = {
		name = TRpolitical.13.a
	}
}




country_event = {
	id = TRpolitical.14
	title = TRpolitical.14.t
	desc = TRpolitical.14.d
	hidden = yes
	trigger = {
		has_government = trozkism
		NOT = { has_country_flag = c_trozkist }
	}
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.14" }
	
	mean_time_to_happen = { days = 14 }
	
	option = {
		name = TRpolitical.14.a
		hidden_effect = {
			every_country = {
				limit = {
					has_government = communism
				}
				country_event = { hours = 6 id = TRpolitical.15 }
			}
			every_country = {
				limit = {
					has_government = trozkism
				}
				country_event = { hours = 1 id = TRpolitical.17 }
			}
		}
	}
}

country_event = {
	id = TRpolitical.15
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.15" }
	
	immediate = {
		add_opinion_modifier = { target = FROM modifier = op_trozkist }
		FROM = { country_event = { hours = 1 id = TRpolitical.16 } }
	}
}

country_event = {
	id = TRpolitical.16
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.16" }
	
	immediate = {
		add_opinion_modifier = { target = FROM modifier = op_trozkist1 }
		set_country_flag = c_trozkist
	}
}

country_event = {
	id = TRpolitical.17
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.17" }
	
	immediate = {
		remove_opinion_modifier = { target = FROM modifier = op_trozkist1 }
		FROM = { country_event = { hours = 1 id = TRpolitical.18 } }
	}
}

country_event = {
	id = TRpolitical.18
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.18" }
	
	immediate = {
		remove_opinion_modifier = { target = FROM modifier = op_trozkist }
	}
}



country_event = {
	id = TRpolitical.19
	title = TRpolitical.19.t
	desc = TRpolitical.19.d
	hidden = yes
	trigger = {
		has_government = communism
		has_country_flag = c_trozkist
	}
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.19" }
	
	mean_time_to_happen = { days = 14 }
	
	option = {
		name = TRpolitical.19.a
		hidden_effect = {
			every_country = {
				limit = {
					has_government = communism
				}
				country_event = { hours = 6 id = TRpolitical.20 }
			}
			every_country = {
				limit = {
					has_government = trozkism
				}
				country_event = { hours = 1 id = TRpolitical.22 }
			}
		}
	}
}

country_event = {
	id = TRpolitical.20
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.20" }
	
	immediate = {
		remove_opinion_modifier = { target = FROM modifier = op_trozkist }
		FROM = { country_event = { hours = 1 id = TRpolitical.21 } }
	}
}

country_event = {
	id = TRpolitical.21
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.21" }
	
	immediate = {
		remove_opinion_modifier = { target = FROM modifier = op_trozkist1 }
		clr_country_flag = c_trozkist
	}
}

country_event = {
	id = TRpolitical.22
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.22" }
	
	immediate = {
		add_opinion_modifier = { target = FROM modifier = op_trozkist1 }
		FROM = { country_event = { hours = 1 id = TRpolitical.23 } }
	}
}

country_event = {
	id = TRpolitical.23
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.23" }
	
	immediate = {
		add_opinion_modifier = { target = FROM modifier = op_trozkist }
	}
}


##Фикс мнения СССР о конкуренте
#country_event = {
#	id = TRpolitical.24
#	title = TRpolitical.24.t
#	desc = TRpolitical.24.d
#	fire_only_once = yes
#	hidden = yes
#	
#	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.24" }
#	
#	trigger = {
#		tag = SOV
#		SOV = { has_government = trozkism }
#	}
#	
#	option = {
#		name = TRpolitical.24.a
#		hidden_effect = {
#			every_other_country = {
#				country_event = { hours = 1 id = TRpolitical.25 }
#			}
#		}
#	}
#}

#country_event = {
#	id = TRpolitical.25
#	title = TRpolitical.25.t
#	desc = TRpolitical.25.d
#	hidden = yes
#	is_triggered_only = yes
#	
#	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.25" }
#	
#	immediate = {
#		remove_opinion_modifier = { target = KMX modifier = polit_sopernik }
#		remove_opinion_modifier = { target = KMX modifier = posolstvo }
#		remove_opinion_modifier = { target = KMX modifier = anti_sov_ritor }
#		remove_opinion_modifier = { target = KMX modifier = anti_sov_prop }
#		KMX = { country_event = { hours = 2 id = TRpolitical.26 } }
#	}
#	
#	option = {
#		name = TRpolitical.25.a
#	}
#}

#country_event = {
#	id = TRpolitical.26
#	hidden = yes
#	is_triggered_only = yes
#	
#	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.26" }
#	
#	immediate = {
#		remove_opinion_modifier = { target = FROM modifier = polit_sopernik }
#		remove_opinion_modifier = { target = FROM modifier = posolstvo }
#		remove_opinion_modifier = { target = FROM modifier = anti_sov_ritor }
#		remove_opinion_modifier = { target = FROM modifier = anti_sov_prop }
#	}
#	
#	option = {
#		name = TRpolitical.26.a
#	}
#}


## -Снабжение 4 интернационала // автономно
#country_event = {
#	id = TRpolitical.28
#	title = TRpolitical.28.t
#	desc = TRpolitical.28.d
#	picture = GFX_report_event_generic_factory
#	fire_only_once = yes
#	hidden = yes

#	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.28" }
#	
#	trigger = {
#		NOT = { tag = KMX }
#		KMX = { has_completed_focus = four_inter_snab }
#		NOT = { is_in_faction_with = KMX }
#		has_global_flag = four_inter_flag
#		has_country_flag = in_intern_snab
#	}

#	option = {
#		name = TRpolitical.28.a
#		clr_country_flag = in_intern_snab
#		remove_ideas = four_inter_member_snab_idea
#		remove_ideas = four_inter_lider_snab_idea
#		if = {
#			limit = {
#				all_country = {
#					NOT = { has_idea = four_inter_lider_snab_idea }
#				}
#			}
#			KMX = {
#				remove_ideas = four_inter_member_snab_idea
#				remove_ideas = four_inter_lider_snab_idea
#				add_ideas = four_inter_lider_snab_idea
#			}
#		}
#	}
#}



#Монархизм

# TRpolitical.29 monarchy >50%
country_event = {
	id = TRpolitical.29
	title = TRpolitical.29.t
	desc = TRpolitical.29.desc
	picture = GFX_report_event_worker_protests
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.29" }
	
	option = {
		name = TRpolitical.29.a

		set_politics = {
			ruling_party = monarchy
			elections_allowed = no
		}
		add_stability = -0.05
	}
}



# Monarchy Opposition Forming
country_event = {
	id = TRpolitical.30
	title = TRpolitical.30.t
	desc = TRpolitical.30.desc
	picture = GFX_report_event_journalists_speech
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.30" }
	
	trigger = {
		has_idea_with_trait = monarchist_nobleman
		NOT = { has_government = monarchy }
		NOT = { has_country_flag = monarchy_opposition_formed }
		is_puppet = no
	}
	
	mean_time_to_happen = {
		days = 300
		modifier = {
			factor = 0.5
			has_country_flag = monarchy_popular_movement
		}
	}
	
	option = {
		name = TRpolitical.30.a
		add_popularity = {
			ideology = monarchy
			popularity = 0.05
		}
		add_stability = -0.05
		set_country_flag = monarchy_opposition_formed
	}
}

# Public Call for Elections
country_event = {
	id = TRpolitical.31
	title = TRpolitical.31.t
	desc = TRpolitical.31.desc
	picture = GFX_report_event_election_vote
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.31" }
	
	trigger = {
		has_idea_with_trait = monarchist_nobleman
		NOT = { has_government = monarchy }
		has_country_flag = monarchy_opposition_formed
		NOT = { has_idea = monarchy_opposition_voicing_protests }
	}
	
	mean_time_to_happen = {
		days = 150
	}
	
	option = {
		name = TRpolitical.31.a
	}

	option = {
		name = TRpolitical.31.b
		add_political_power = -20
		add_ideas = monarchy_opposition_voicing_protests
	}
}


#весна
# political.4 monarchy
country_event = {
	id = TRpolitical.32
	title = TRpolitical.32.t
	desc = TRpolitical.32.desc
	picture = GFX_report_event_gathering_protest
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.32" }
	
	trigger = {
		monarchy > 0.7
		#has_idea = monarchy_revolutionaries
		NOT = { has_government = monarchy }
		has_civil_war = no
		#check_has_focus_tree_to_switch_to_neutrality = yes
		NOT = {
			AND = {
				original_tag = GER
				NOT = {
					has_global_flag = THE_MOTHER_OF_ORDER_FLAG
					has_global_flag = WORLD_OF_SPLIT_FLAG
				}
			}
		}
		OR = {
			has_focus_tree = generic_focus
			has_focus_tree = generic_anarchism_focus
		}
	}

	mean_time_to_happen = {
		days = 7
	}

	immediate = {
		hidden_effect = { remove_ideas = monarchy_revolutionaries }
	}

	option = {
		name = TRpolitical.32.a
		ai_chance = {
			factor = 0
		}
		start_civil_war = {
			ideology = monarchy
			size = 0.5
		}
	}

	option = {
		name = TRpolitical.32.b
		ai_chance = {
			factor = 0
		}
		if = {
			limit = {
				has_government = democratic
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = democratic
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = fascism
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = fascism
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = communism
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = communism
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = neutrality
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = neutrality
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = technocracy
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = technocracy
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = trozkism
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = trozkism
				size = 0.5
			}
		}
		if = {
			limit = {
				has_government = anarchism
			}
			start_civil_war = {
				ruling_party = monarchy
				ideology = anarchism
				size = 0.5
			}
		}
	}
	
	# We need a referendum
	option = {
		name = political.14.c
		trigger = {
			is_ai = yes
		}
		add_political_power = -100
		set_politics = {
			ruling_party = monarchy
			elections_allowed = no
		}
	}
}

# political.33 monarchy
country_event = {
	id = TRpolitical.33
	title = TRpolitical.33.t
	desc = TRpolitical.33.desc
	picture = GFX_report_event_europe_funeral
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.33" }
	
	trigger = {
		monarchy < 0.3
		has_idea = monarchy_revolutionaries
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		name = TRpolitical.33.a
		remove_ideas = monarchy_revolutionaries
	}
}




### inflation rifles trade
country_event = {
	id = TRpolitical.35
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.35" }
	
	option = {
		name = TRpolitical.35.a
		if = {
			limit = {
				check_variable = { global.total_infantry_weapons > 0 }
			}
			set_temp_variable = { inflation_rifles = global.total_infantry_weapons }
			divide_temp_variable = { inflation_rifles = 10 }
			subtract_from_variable = { global.total_infantry_weapons = inflation_rifles }
			round_variable = global.total_infantry_weapons
			#Блок франции
			if = {
				limit = { FRF = { has_idea = FRF_use_global_market_idea } }
				set_temp_variable = { inflation_rifles_for_fra = inflation_rifles }
				divide_temp_variable = { inflation_rifles_for_fra = 10 }
				round_temp_variable = inflation_rifles_for_fra
				FRF = {
					add_equipment_to_stockpile = {
						type = infantry_equipment
						amount = inflation_rifles_for_fra
					}
				}
			}
		}
		#random_country = {
		#	country_event = { id = TRpolitical.35 days = 35 random_days = 5 }
		#}
	}
}


#Нейтралы

# TRpolitical.36 neutrality >50%
country_event = {
	id = TRpolitical.36
	title = TRpolitical.36.t
	desc = TRpolitical.36.desc
	picture = GFX_report_event_worker_protests
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.36" }
	
	option = {
		name = TRpolitical.36.c

		set_politics = {
			ruling_party = neutrality
			elections_allowed = no
		}
		add_stability = -0.05
	}
}

#Технократы

# TRpolitical.37 technocracy >50%
country_event = {
	id = TRpolitical.37
	title = TRpolitical.37.t
	desc = TRpolitical.37.desc
	picture = GFX_report_event_worker_protests
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.37" }
	
	option = {
		name = TRpolitical.37.c

		set_politics = {
			ruling_party = technocracy
			elections_allowed = yes
		}
		add_stability = -0.05
	}
}



#Чужое влияние от событий
#Переворот в Германии. Прирост монархии.
country_event = {
	id = TRpolitical.100
	title = TRpolitical.100.t
	desc = TRpolitical.100.desc
	picture = GFX_report_event_generic_riot
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.100" }
	
	option = {
		name = TRpolitical.100.a
		add_popularity = { ideology = monarchy popularity = 0.04 }
		
	}
}

#Реставрация монархии в Германии. Прирост монархии.
country_event = {
	id = TRpolitical.101
	title = TRpolitical.101.t
	desc = TRpolitical.101.desc
	picture = GFX_report_event_royal_visit
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.101" }
	
	option = {
		name = TRpolitical.101.a
		add_popularity = { ideology = monarchy popularity = 0.03 }
		
	}
}

#Конституционная монархия в Германии. Прирост демократии.
country_event = {
	id = TRpolitical.102
	title = TRpolitical.102.t
	desc = TRpolitical.102.desc
	picture = GFX_report_event_crowd_in_prague
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.102" }
	
	option = {
		name = TRpolitical.102.a
		add_popularity = { ideology = democratic popularity = 0.03 }
		
	}
}

#Коммунистическая революция в Германии. Прирост троцкизма.
country_event = {
	id = TRpolitical.103
	title = TRpolitical.103.t
	desc = TRpolitical.103.desc
	picture = GFX_report_event_communist_leader
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.103" }
	
	option = {
		name = TRpolitical.103.a
		add_popularity = { ideology = trozkism popularity = 0.03 }
		
	}
}

#Реставрация Империи Габсбургов. Прирост троцкизма.
country_event = {
	id = TRpolitical.104
	title = TRpolitical.104.t
	desc = TRpolitical.104.desc
	picture = GFX_report_event_royal_visit
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.104" }
	
	option = {
		name = TRpolitical.104.a
		add_popularity = { ideology = monarchy popularity = 0.03 }
		
	}
}

##Падение SOV и расформирование Киевского пакта
#country_event = {
#	id = TRpolitical.105
#	title = TRpolitical.105.t
#	desc = TRpolitical.105.desc
#	picture = GFX_report_event_gathering_protest
#	fire_only_once = yes
#	
#	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.105" }
#	
#	trigger = {
#		SOV = { exists = no }
#		tag = UKR
#		UKR = {
#			exists = yes
#			is_faction_leader = yes
#		}
#	}
#	
#	option = {
#		name = TRpolitical.105.a
#		ai_chance = {
#			factor = 10
#		}
#		if = {
#			limit = {
#				GER = {
#					exists = yes
#					has_government = fascism
#				}
#			}
#			every_country = {
#				limit = { is_in_faction_with = UKR }
#				add_ai_strategy = {
#					type = alliance
#					id = "GER"
#					value = 200
#				}
#			}
#		}
#		UKR = { dismantle_faction = yes }
#	}
#	option = {
#		ai_chance = {
#			factor = 0
#		}
#		name = TRpolitical.105.b
#	}
#}

#Релоад полит_фокусов
country_event = {
	id = TRpolitical.106
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.106" }
	immediate = {
		if = {
			limit = { has_focus_tree = generic_focus }
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): reload focus to [Root.GetRulingIdeology]"
		}
	}
	#immediate = { clr_country_flag = reboot_generic_tree }
	
	option = {
		name = TRpolitical.106.a
		if = {
			limit = {
				has_cosmetic_tag = BPL_technat_subject
				NOT = { is_subject_of = BPL }
			}
			drop_cosmetic_tag = yes
		}
		if = {
			limit = {
				has_cosmetic_tag = HRE_subject_cosmetic
				is_subject = no
			}
			drop_cosmetic_tag = yes
		}
		if = {
			limit = {
				OR = {
					has_cosmetic_tag = HBBRG_use_subject
					has_cosmetic_tag = ADR_HBBRG_use_subject
					has_cosmetic_tag = ALB_HBBRG_use_subject
					has_cosmetic_tag = ARA_HBBRG_use_subject
					has_cosmetic_tag = AUS_HBBRG_use_subject
					has_cosmetic_tag = BEL_HBBRG_use_subject
					has_cosmetic_tag = BLR_HBBRG_use_subject
					has_cosmetic_tag = BOS_HBBRG_use_subject
					has_cosmetic_tag = BUL_HBBRG_use_subject
					has_cosmetic_tag = CAT_HBBRG_use_subject
					has_cosmetic_tag = CRI_HBBRG_use_subject
					has_cosmetic_tag = CRO_HBBRG_use_subject
					has_cosmetic_tag = CZE_HBBRG_use_subject
					has_cosmetic_tag = DEN_HBBRG_use_subject
					has_cosmetic_tag = DNZ_HBBRG_use_subject
					has_cosmetic_tag = ENG_HBBRG_use_subject
					has_cosmetic_tag = EST_HBBRG_use_subject
					has_cosmetic_tag = FIN_HBBRG_use_subject
					has_cosmetic_tag = FIU_HBBRG_use_subject
					has_cosmetic_tag = FRA_HBBRG_use_subject
					has_cosmetic_tag = GER_HBBRG_use_subject
					has_cosmetic_tag = GRE_HBBRG_use_subject
					has_cosmetic_tag = HOL_HBBRG_use_subject
					has_cosmetic_tag = HRZ_HBBRG_use_subject
					has_cosmetic_tag = HUN_HBBRG_use_subject
					has_cosmetic_tag = IRE_HBBRG_use_subject
					has_cosmetic_tag = ITA_HBBRG_use_subject
					has_cosmetic_tag = KOS_HBBRG_use_subject
					has_cosmetic_tag = LAT_HBBRG_use_subject
					has_cosmetic_tag = LIE_HBBRG_use_subject
					has_cosmetic_tag = LIT_HBBRG_use_subject
					has_cosmetic_tag = LUX_HBBRG_use_subject
					has_cosmetic_tag = MAC_HBBRG_use_subject
					has_cosmetic_tag = MNC_HBBRG_use_subject
					has_cosmetic_tag = MNT_HBBRG_use_subject
					has_cosmetic_tag = NIR_HBBRG_use_subject
					has_cosmetic_tag = NOR_HBBRG_use_subject
					has_cosmetic_tag = POL_HBBRG_use_subject
					has_cosmetic_tag = POR_HBBRG_use_subject
					has_cosmetic_tag = PRE_HBBRG_use_subject
					has_cosmetic_tag = ROM_HBBRG_use_subject
					has_cosmetic_tag = SCO_HBBRG_use_subject
					has_cosmetic_tag = SER_HBBRG_use_subject
					has_cosmetic_tag = SLO_HBBRG_use_subject
					has_cosmetic_tag = SLV_HBBRG_use_subject
					has_cosmetic_tag = SMA_HBBRG_use_subject
					has_cosmetic_tag = SPR_HBBRG_use_subject
					has_cosmetic_tag = SWE_HBBRG_use_subject
					has_cosmetic_tag = SWI_HBBRG_use_subject
					has_cosmetic_tag = TRA_HBBRG_use_subject
					has_cosmetic_tag = TUR_HBBRG_use_subject
					has_cosmetic_tag = UKR_HBBRG_use_subject
					has_cosmetic_tag = VAT_HBBRG_use_subject
					has_cosmetic_tag = VLA_HBBRG_use_subject
					has_cosmetic_tag = VNC_HBBRG_use_subject
					has_cosmetic_tag = VOJ_HBBRG_use_subject
					has_cosmetic_tag = WLS_HBBRG_use_subject
					has_cosmetic_tag = YUG_HBBRG_use_subject
					has_cosmetic_tag = ASU_HBBRG_use_subject
					has_cosmetic_tag = BRI_HBBRG_use_subject
					has_cosmetic_tag = ESS_HBBRG_use_subject
					has_cosmetic_tag = ICE_HBBRG_use_subject
				}
				is_subject = no
			}
			drop_cosmetic_tag = yes
		}
		if = {
			limit = { NOT = { has_country_flag = DEFEND_ON_GOVERNMENT_CHANGE_FLAG } }
			if = {
				limit = {
					has_government = anarchism
					NOT = { has_completed_focus = anarchism_focus }
				}
				remove_all_generic_ideas = yes
				if = {
					limit = { NOT = { has_country_flag = block_set_anarchism_unity_var_flag } }
					set_variable = { anarchism_unity_var = 10 }
					set_variable = { anarchism_unity_daily_var = 0.1 }
				}
				if = {
					limit = {
						OR = {
							AND = {
								has_focus_tree = nw_palestine_focus
								has_completed_focus = BPL_proclaim_kibbutz_community
							}
							AND = {
								has_focus_tree = HOL_focus
								has_completed_focus = HOL_the_emancipation_of_the_workers_is_the_work_of_the_workers_themselves
							}
							AND = {
								has_focus_tree = nw_turkish_focus_new
								has_completed_focus = TUR_absolute_freedom
							}
							AND = {
								has_focus_tree = spain_focus
								has_completed_focus = SPR_anarchists_victory
							}
							AND = {
								has_focus_tree = catalonia_focus_democrat
								has_completed_focus = CAT_winning_iwa
							}
							AND = {
								has_focus_tree = ethiopia_focus
								has_completed_focus = ETH_end_of_solomons_dictatorship
							}
							AND = {
								has_focus_tree = nw_italian_antifash_capitulated_focus
								has_completed_focus = RSI_victory_of_syndicalism
							}
							AND = {
								has_focus_tree = andorra_focus
								has_completed_focus = ADR_FHASA
							}
							AND = {
								has_focus_tree = nw_comm_french_focus
								OR = {
									AND = {
										has_completed_focus = FRC_popular_uprising
										has_completed_focus = FRC_government_general_confederation_labour
									}
									NOT = { has_completed_focus = FRC_popular_uprising }
								}
							}
							AND = {
								has_focus_tree = nw_denmark_focus
								has_completed_focus = DEN_anarchist_revolution
							}
							AND = {
								has_focus_tree = nw_tuva_focus
								has_completed_focus = TAN_indepence
							}
							has_focus_tree = hohenberg_focus
							has_focus_tree = catalonia_focus_anarchist
							has_focus_tree = aragon_focus_anarchist
							has_focus_tree = generic_anarchism_focus
							has_focus_tree = nw_portugal_focus
							tag = IFA 	# italian
						}
					}
					#nothing
					else = {
						load_focus_tree = { tree = generic_anarchism_focus }
						if = {
							limit = { NOT = { has_country_leader_ideology = anarcho_banditry } }
							set_country_leader_ideology = anarchism_ideology
						}
						add_ideas = {
							collapse_of_state_apparatus
							legislative_anarchy
							economic_degradation
							generic_social_crisis
							closed_economy
						}
					}
				}
				set_var_generic_anarchism_tendency = yes
				set_anarchism_party_name = yes
			}
			if = {
				limit = { has_country_flag = block_set_anarchism_unity_var_flag }
				clr_country_flag = block_set_anarchism_unity_var_flag
			}
			if = {
				limit = {
					has_focus_tree = generic_focus
					OR = {
						AND = {
							has_government = fascism
							NOT = { focus_progress = { focus = nationalism_focus progress > 0 } }
							OR = {
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
						AND = {
							has_government = communism
							NOT = { focus_progress = { focus = internationalism_focus progress > 0 } }
							OR = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
						AND = {
							has_government = trozkism
							NOT = { focus_progress = { focus = revolution_focus progress > 0 } }
							OR = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
						AND = {
							has_government = democratic
							NOT = { focus_progress = { focus = democratic_focus progress > 0 } }
							OR = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
						AND = {
							has_government = technocracy
							NOT = { focus_progress = { focus = technocracy_focus progress > 0 } }
							OR = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
						AND = {
							has_government = neutrality
							NOT = { focus_progress = { focus = neutrality_focus progress > 0 } }
							OR = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
						AND = {
							has_government = monarchy
							NOT = { focus_progress = { focus = monarchism_focus progress > 0 } }
							OR = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
							}
						}
						AND = {
							OR = {
								has_government = democratic
								has_government = technocracy
								has_government = neutrality
								has_government = monarchy
							}
							focus_progress = { focus = collectivist_ethos progress > 0 }
							NOT = {
								focus_progress = { focus = nationalism_focus progress > 0 }
								focus_progress = { focus = internationalism_focus progress > 0 }
								focus_progress = { focus = revolution_focus progress > 0 }
							}
						}
						AND = {
							OR = {
								has_government = communism
								has_government = trozkism
								has_government = fascism
								has_government = neutrality
							}
							focus_progress = { focus = individual_ethos progress > 0 }
							NOT = {
								focus_progress = { focus = democratic_focus progress > 0 }
								focus_progress = { focus = technocracy_focus progress > 0 }
								focus_progress = { focus = neutrality_focus progress > 0 }
								focus_progress = { focus = monarchism_focus progress > 0 }
							}
						}
					}
				}
				remove_all_generic_ideas = yes
#				load_focus_tree = { tree = generic_focus_zero }
				uncomplete_national_focus = { focus = political_effort	uncomplete_children = yes }
				country_event = { id = TRpolitical.107 }
				set_country_flag = reset_focus_ideas_flag
				clear_gem_flag = yes
			}
			if = {
				limit = { NOT = { has_government = anarchism } }
				clear_anarchism_flag = yes
				country_lock_all_division_template = no
				if = {
					limit = {
						OR = {
							has_cosmetic_tag = working_federation_cosmetic
							has_cosmetic_tag = union_of_communes_cosmetic
							has_cosmetic_tag = union_of_communes_cosmetic_2
							has_cosmetic_tag = union_of_communes_cosmetic_3
							has_cosmetic_tag = federation_of_syndicates_cosmetic
							has_cosmetic_tag = federation_of_syndicates_cosmetic_2
							has_cosmetic_tag = synthetic_anarchism_focus_cosmetic
							has_cosmetic_tag = synthetic_anarchism_focus_cosmetic_2
							has_cosmetic_tag = synthetic_anarchism_focus_cosmetic_3
							has_cosmetic_tag = mutualism_cosmetic
							has_cosmetic_tag = mutualism_cosmetic_2
							has_cosmetic_tag = mutualism_cosmetic_3
							has_cosmetic_tag = anarcho_egoism_cosmetic
							has_cosmetic_tag = anarcho_egoism_cosmetic_2
							has_cosmetic_tag = anarcho_egoism_cosmetic_3
							has_cosmetic_tag = libertarian_cosmetic
							has_cosmetic_tag = libertarian_cosmetic_2
							has_cosmetic_tag = libertarian_cosmetic_3
							has_cosmetic_tag = agorism_cosmetic
							has_cosmetic_tag = agorism_cosmetic_2
							has_cosmetic_tag = agorism_cosmetic_3
						}
					}
					drop_cosmetic_tag = yes
				}
				if = {
					limit = {
						has_focus_tree = generic_anarchism_focus
					}
					load_focus_tree = { tree = generic_focus }
				}
			}
		}
		if = {
			limit = {
				NOT = { has_government = anarchism }
				has_country_flag = set_anarchism_party_name_flag
			}
			reset_anarchism_party_name = yes
		}
		if = {
			limit = {
				has_idea = irregular_army
			}
			country_lock_all_division_template = yes
		}
		if = {
			limit = {
				NOT = {
					has_tech = base_factory_tech
					has_tech = universal_factory_tech
				}
			}
			set_technology = {
				base_factory_tech = 1
				popup = no
			}
		}
		NW_legitimacy_check = yes
	}
}

country_event = {
	id = TRpolitical.107
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.107" }
	
	option = {
		name = TRpolitical.107.a
		load_focus_tree = { tree = generic_focus }
		clr_country_flag = reset_focus_ideas_flag
		clr_country_flag = autonomy_NWgeneric6_adopt
		unlock_national_focus = political_effort
	}
}


# Будущее Китая // from dec restore_unity_of_china
country_event = {
	id = TRpolitical.201
	title = TRpolitical.201.t
	desc = TRpolitical.201.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.201" }
	
	option = {
		name = TRpolitical.201.a
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = MAN is_subject_of = ROOT }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					is_core_of = MAN
					is_core_of = CHI
					is_core_of = PRC
					is_core_of = GXC
					is_core_of = YUN
					is_core_of = SHX
					is_core_of = XSM
					is_core_of = SIK
					is_core_of = SIH
					is_core_of = XIK
					is_core_of = SHA
					is_core_of = TNG
					is_core_of = NEA
					is_core_of = KAS
					is_core_of = DZH
					is_core_of = KUM
					is_core_of = NGX
					is_core_of = YUL
					is_core_of = HCP
				}
				owner = {
					NOT = { original_tag = MAN }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = MAN
					is_subject_of = ROOT
				}
				transfer_state = PREV
				set_cosmetic_tag = MAN_JAP_Qing_cosmetic
			}
		}
	}
	
	option = {
		name = TRpolitical.201.b
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = CHI is_subject_of = ROOT }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					is_core_of = MAN
					is_core_of = CHI
					is_core_of = PRC
					is_core_of = GXC
					is_core_of = YUN
					is_core_of = SHX
					is_core_of = XSM
					is_core_of = SIK
					is_core_of = SIH
					is_core_of = XIK
					is_core_of = SHA
					is_core_of = TNG
					is_core_of = NEA
					is_core_of = KAS
					is_core_of = DZH
					is_core_of = KUM
					is_core_of = NGX
					is_core_of = YUL
					is_core_of = HCP
				}
				owner = {
					NOT = { original_tag = CHI }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = CHI
					is_subject_of = ROOT
				}
				transfer_state = PREV
			}
		}
	}
	
	option = {
		name = TRpolitical.201.c
		trigger = {
			country_exists = PRC
			is_left_ideology = yes
		}
		ai_chance = {
			factor = 500
		}
		every_state = {
			limit = {
				OR = {
					is_core_of = MAN
					is_core_of = CHI
					is_core_of = PRC
					is_core_of = GXC
					is_core_of = YUN
					is_core_of = SHX
					is_core_of = XSM
					is_core_of = SIK
					is_core_of = SIH
					is_core_of = XIK
					is_core_of = SHA
					is_core_of = TNG
					is_core_of = NEA
					is_core_of = KAS
					is_core_of = DZH
					is_core_of = KUM
					is_core_of = NGX
					is_core_of = YUL
					is_core_of = HCP
				}
				owner = {
					NOT = { original_tag = PRC }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					tag = PRC
				}
				transfer_state = PREV
				if = {
					limit = {
						NOT = { has_government = ROOT }
						is_subject_of = ROOT
					}
					set_politics = {
						ruling_party = var:ROOT.current_party_ideology_group
					}
				}
				else = {
					add_popularity = { ideology = var:ROOT.current_party_ideology_group popularity = 0.33 }
				}
			}
		}
	}
	
	option = {
		name = TRpolitical.201.d
		ai_chance = {
			factor = 25
		}
		country_event = { id = TRpolitical.202 hours = 3 }
	}
	
	option = {
		name = TRpolitical.201.e
		ai_chance = {
			factor = 0
		}
	}
}

# Судьба мелких наций Китая
country_event = {
	id = TRpolitical.202
	title = TRpolitical.202.t
	desc = TRpolitical.202.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.202" }
	
	option = {
		name = TRpolitical.202.a
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = MAN is_subject_of = ROOT }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 328
					state = 714
					state = 715
					state = 716
					state = 717
					state = 761
				}
				owner = {
					NOT = { original_tag = MAN }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			if = {
				limit = {
					any_country_with_original_tag = { original_tag_to_check = MAN is_subject_of = ROOT }
				}
				random_country = {
					limit = {
						original_tag = MAN
						is_subject_of = ROOT
					}
					transfer_state = PREV
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
			else_if = {
				limit = { NOT = { country_exists = MAN } }
				MAN = {
					transfer_state = PREV
					ROOT = { puppet = PREV }
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
		}
		random_other_country = {
			limit = {
				original_tag = MAN
				is_subject_of = ROOT
			}
			set_cosmetic_tag = MAN_JAP_cosmetic
			if = {
				limit = { ROOT = { has_government = fascism } }
				create_country_leader = {
					name = MAN_aisin_gioro_puyi
					desc = "POLITICS_AISIN_GIORO_PUYI_DESC"
					picture = "gfx/leaders/MAN/Portrait_Manchuria_Henry_Pu_Yi.dds"
					expire = "1965.1.1"
					ideology = nationalism_ideology
					traits = {
						warrior_code
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = monarchy } }
				create_country_leader = {
					name = MAN_aisin_gioro_puyi
					desc = "POLITICS_AISIN_GIORO_PUYI_DESC"
					picture = "gfx/leaders/MAN/Portrait_Manchuria_Henry_Pu_Yi.dds"
					expire = "1965.1.1"
					ideology = dual_monarchy
					traits = {
						warrior_code
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = neutrality } }
				create_country_leader = {
					name = MAN_aisin_gioro_puyi
					desc = "POLITICS_AISIN_GIORO_PUYI_DESC"
					picture = "gfx/leaders/MAN/Portrait_Manchuria_Henry_Pu_Yi.dds"
					expire = "1965.1.1"
					ideology = despotism
					traits = {
						warrior_code
						projapanese
					}
				}
			}
		}
		country_event = { id = TRpolitical.203 hours = 3 }
	}
	
	option = {
		name = TRpolitical.202.b
		ai_chance = {
			factor = 50
		}
		every_state = {
			limit = {
				OR = {
					state = 328
					state = 714
					state = 715
					state = 716
					state = 717
					state = 761
				}
				owner = {
					NOT = { original_tag = MAN }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			if = {
				limit = {
					any_country_with_original_tag = { original_tag_to_check = MAN is_subject_of = ROOT }
				}
				random_country = {
					limit = {
						original_tag = MAN
						is_subject_of = ROOT
					}
					transfer_state = PREV
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
			else_if = {
				limit = { NOT = { country_exists = MAN } }
				MAN = {
					transfer_state = PREV
					ROOT = { puppet = PREV }
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
		}
		random_other_country = {
			limit = {
				original_tag = MAN
				is_subject_of = ROOT
			}
			set_cosmetic_tag = MAN_JAP_cosmetic
			if = {
				limit = { ROOT = { has_government = fascism } }
				create_country_leader = {
					name = "Aisin Gioro Xiqia"
					desc = "POLITICS_AISIN_GIORO_XIQIA_DESC"
					picture = "GFX_portrait_man_aisin_gioro_xiqia"
					expire = "1965.1.1"
					ideology = nationalism_ideology
					traits = {
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = monarchy } }
				create_country_leader = {
					name = "Aisin Gioro Xiqia"
					desc = "POLITICS_AISIN_GIORO_XIQIA_DESC"
					picture = "GFX_portrait_man_aisin_gioro_xiqia"
					expire = "1965.1.1"
					ideology = dual_monarchy
					traits = {
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = neutrality } }
				create_country_leader = {
					name = "Aisin Gioro Xiqia"
					desc = "POLITICS_AISIN_GIORO_XIQIA_DESC"
					picture = "GFX_portrait_man_aisin_gioro_xiqia"
					expire = "1965.1.1"
					ideology = despotism
					traits = {
						projapanese
					}
				}
			}
		}
		country_event = { id = TRpolitical.203 hours = 3 }
	}
	
	option = {
		name = TRpolitical.202.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		country_event = { id = TRpolitical.203 hours = 3 }
	}
}

# Статус монголов
country_event = {
	id = TRpolitical.203
	title = TRpolitical.203.t
	desc = TRpolitical.203.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.203" }
	
	option = {
		name = TRpolitical.203.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 611
					state = 612
					state = 616
					state = 746
					state = 621
					state = 1136
					state = 1161
					state = 1133
				}
				owner = {
					NOT = { original_tag = CSR }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			if = {
				limit = {
					any_country_with_original_tag = { original_tag_to_check = CSR is_subject_of = ROOT }
				}
				random_country = {
					limit = {
						original_tag = CSR
						is_subject_of = ROOT
					}
					transfer_state = PREV
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
			else_if = {
				limit = { NOT = { country_exists = CSR } }
				CSR = {
					transfer_state = PREV
					ROOT = { puppet = PREV }
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
		}
		random_other_country = {
			limit = {
				original_tag = CSR
				is_subject_of = ROOT
			}
			set_cosmetic_tag = CSR_JAP_cosmetic
			if = {
				limit = { ROOT = { has_government = fascism } }
				create_country_leader = {
					name = "Prince Demchugdongrub"
					desc = "POLITICS_DEMCHUGDONGRUB_DESC"
					picture = "GFX_portrait_men_demchugdongrub"
					expire = "1965.1.1"
					ideology = nationalism_ideology
					traits = { 
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = monarchy } }
				create_country_leader = {
					name = "Prince Demchugdongrub"
					desc = "POLITICS_DEMCHUGDONGRUB_DESC"
					picture = "GFX_portrait_men_demchugdongrub"
					expire = "1965.1.1"
					ideology = dual_monarchy
					traits = { 
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = neutrality } }
				create_country_leader = {
					name = "Prince Demchugdongrub"
					desc = "POLITICS_DEMCHUGDONGRUB_DESC"
					picture = "GFX_portrait_men_demchugdongrub"
					expire = "1965.1.1"
					ideology = despotism
					traits = { 
						projapanese
					}
				}
			}
		}
		country_event = { id = TRpolitical.204 hours = 3 }
	}
	
	option = {
		name = TRpolitical.203.b
		ai_chance = {
			factor = 50
		}
		country_event = { id = TRpolitical.204 hours = 3 }
	}
}

# Статус мусульман
country_event = {
	id = TRpolitical.204
	title = TRpolitical.204.t
	desc = TRpolitical.204.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.204" }
	
	option = {
		name = TRpolitical.204.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 283
					state = 754
					state = 755
					state = 756
					state = 1125
					state = 1126
					state = 1177
				}
				owner = {
					NOT = { original_tag = NGX }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			if = {
				limit = {
					any_country_with_original_tag = { original_tag_to_check = NGX is_subject_of = ROOT }
				}
				random_country = {
					limit = {
						original_tag = NGX
						is_subject_of = ROOT
					}
					transfer_state = PREV
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
			else_if = {
				limit = { NOT = { country_exists = NGX } }
				NGX = {
					transfer_state = PREV
					ROOT = { puppet = PREV }
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
		}
		random_other_country = {
			limit = {
				original_tag = NGX
				is_subject_of = ROOT
			}
			hidden_effect = {
				if = {
					limit = { NOT = { has_government = fascism } }
					set_politics = {
						ruling_party = fascism
						elections_allowed = no
					}
					add_popularity = {
						ideology = fascism
						popularity = 0.5
					}
				}
			}
			create_country_leader = {
				name = "Ma Hongkui"
				desc = "POLITICS_MA_HONGKUI_DESC"
				picture = "gfx/leaders/NGX/Portrait_Ma_Hongkui.dds"
				expire = "1965.1.1"
				ideology = nationalism_ideology
				traits = {
					projapanese
				}
			}
		}
		if = {
			limit = {
				OR = {
					any_owned_state = {
						OR = {
							state = 287
							state = 617
							state = 618
							state = 619
							state = 759
							state = 760
							state = 1046
							state = 1047
							state = 1120
							state = 1121
							state = 1122
						}
					}
					any_of_scopes = {
						array = ROOT.subjects
						any_owned_state = {
							OR = {
								state = 287
								state = 617
								state = 618
								state = 619
								state = 759
								state = 760
								state = 1046
								state = 1047
								state = 1120
								state = 1121
								state = 1122
							}
						}
					}
				}
			}
			country_event = { id = TRpolitical.205 hours = 3 }
		}
		else = { country_event = { id = TRpolitical.206 hours = 3 } }
	}
	
	option = {
		name = TRpolitical.204.b
		ai_chance = {
			factor = 50
		}
		if = {
			limit = {
				OR = {
					any_owned_state = {
						OR = {
							state = 287
							state = 617
							state = 618
							state = 619
							state = 759
							state = 760
							state = 1046
							state = 1047
							state = 1120
							state = 1121
							state = 1122
						}
					}
					any_of_scopes = {
						array = ROOT.subjects
						any_owned_state = {
							OR = {
								state = 287
								state = 617
								state = 618
								state = 619
								state = 759
								state = 760
								state = 1046
								state = 1047
								state = 1120
								state = 1121
								state = 1122
							}
						}
					}
				}
			}
			country_event = { id = TRpolitical.205 hours = 3 }
		}
		else = { country_event = { id = TRpolitical.206 hours = 3 } }
	}
}

# Статус уйгуров
country_event = {
	id = TRpolitical.205
	title = TRpolitical.205.t
	desc = TRpolitical.205.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.205" }
	
	option = {
		name = TRpolitical.205.a
		ai_chance = {
			factor = 50
		}
		custom_effect_tooltip = "-200 social points // It's meme"
		custom_effect_tooltip = nn_tt
		every_state = {
			limit = {
				OR = {
					state = 287
					state = 617
					state = 618
					state = 619
					state = 759
					state = 760
					state = 1046
					state = 1047
					state = 1120
					state = 1121
					state = 1122
				}
				owner = {
					NOT = { original_tag = KAS }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			if = {
				limit = {
					any_country_with_original_tag = { original_tag_to_check = KAS is_subject_of = ROOT }
				}
				random_country = {
					limit = {
						original_tag = KAS
						is_subject_of = ROOT
					}
					transfer_state = PREV
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
			else_if = {
				limit = { NOT = { country_exists = KAS } }
				KAS = {
					transfer_state = PREV
					ROOT = { puppet = PREV }
				}
				set_state_flag = restore_unity_of_china_state_flag
			}
		}
		random_other_country = {
			limit = {
				original_tag = KAS
				is_subject_of = ROOT
			}
			set_cosmetic_tag = KAS_JAP_cosmetic
			if = {
				limit = { ROOT = { has_government = fascism } }
				create_country_leader = {
					name = "Mahmud Muhiti"
					desc = "POLITICS_MAHMUD_MUHITI_DESC"
					picture = "gfx/leaders/Asia/Portrait_Asia_Generic_land_4.dds"
					expire = "1965.1.1"
					ideology = nationalism_ideology
					traits = { 
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = monarchy } }
				create_country_leader = {
					name = "Mahmud Muhiti"
					desc = "POLITICS_MAHMUD_MUHITI_DESC"
					picture = "gfx/leaders/Asia/Portrait_Asia_Generic_land_4.dds"
					expire = "1965.1.1"
					ideology = dual_monarchy
					traits = { 
						projapanese
					}
				}
			}
			else_if = {
				limit = { ROOT = { has_government = neutrality } }
				create_country_leader = {
					name = "Mahmud Muhiti"
					desc = "POLITICS_MAHMUD_MUHITI_DESC"
					picture = "gfx/leaders/Asia/Portrait_Asia_Generic_land_4.dds"
					expire = "1965.1.1"
					ideology = despotism
					traits = { 
						projapanese
					}
				}
			}
		}
		country_event = { id = TRpolitical.206 hours = 3 }
	}
	
	option = {
		name = TRpolitical.205.b
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = NGX is_subject_of = ROOT has_country_leader_with_trait = projapanese }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 287
					state = 617
					state = 618
					state = 619
					state = 759
					state = 760
					state = 1046
					state = 1047
					state = 1120
					state = 1121
					state = 1122
				}
				owner = {
					NOT = { original_tag = NGX }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = NGX
					is_subject_of = ROOT
				}
				transfer_state = PREV
			}
			set_state_flag = restore_unity_of_china_state_flag
		}
		country_event = { id = TRpolitical.206 hours = 3 }
	}
	
	option = {
		name = TRpolitical.205.c
		trigger = {
			NOT = { any_country_with_original_tag = { original_tag_to_check = NGX is_subject_of = ROOT has_country_leader_with_trait = projapanese } }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		country_event = { id = TRpolitical.206 hours = 3 }
	}
}

# Будущее Китая 2
country_event = {
	id = TRpolitical.206
	title = TRpolitical.201.t
	desc = TRpolitical.206.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.206" }
	
	option = {
		name = TRpolitical.206.a
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = MAN is_subject_of = ROOT }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				NOT = { has_state_flag = restore_unity_of_china_state_flag }
				OR = {
					is_core_of = MAN
					is_core_of = CHI
					is_core_of = PRC
					is_core_of = GXC
					is_core_of = YUN
					is_core_of = SHX
					is_core_of = XSM
					is_core_of = SIK
					is_core_of = SIH
					is_core_of = XIK
					is_core_of = SHA
					is_core_of = TNG
					is_core_of = NEA
					is_core_of = KAS
					is_core_of = DZH
					is_core_of = KUM
					is_core_of = NGX
					is_core_of = YUL
					is_core_of = HCP
				}
				owner = {
					NOT = { original_tag = MAN }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = MAN
					is_subject_of = ROOT
				}
				transfer_state = PREV
				set_cosmetic_tag = MAN_JAP_Qing_cosmetic
			}
		}
		hidden_effect = {
			every_state = {
				limit = { has_state_flag = restore_unity_of_china_state_flag }
				clr_state_flag = restore_unity_of_china_state_flag
			}
		}
		country_event = { id = TRpolitical.207 hours = 3 }
	}
	
	option = {
		name = TRpolitical.201.b
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = CHI is_subject_of = ROOT }
		}
		ai_chance = {
			factor = 50
		}
		every_state = {
			limit = {
				NOT = { has_state_flag = restore_unity_of_china_state_flag }
				OR = {
					is_core_of = MAN
					is_core_of = CHI
					is_core_of = PRC
					is_core_of = GXC
					is_core_of = YUN
					is_core_of = SHX
					is_core_of = XSM
					is_core_of = SIK
					is_core_of = SIH
					is_core_of = XIK
					is_core_of = SHA
					is_core_of = TNG
					is_core_of = NEA
					is_core_of = KAS
					is_core_of = DZH
					is_core_of = KUM
					is_core_of = NGX
					is_core_of = YUL
					is_core_of = HCP
				}
				owner = {
					NOT = { original_tag = CHI }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = CHI
					is_subject_of = ROOT
				}
				transfer_state = PREV
			}
		}
		hidden_effect = {
			every_state = {
				limit = { has_state_flag = restore_unity_of_china_state_flag }
				clr_state_flag = restore_unity_of_china_state_flag
			}
		}
		country_event = { id = TRpolitical.207 hours = 3 }
	}
}

# Статус прибрежных городов
country_event = {
	id = TRpolitical.207
	title = TRpolitical.207.t
	desc = TRpolitical.207.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.207" }
	
	option = {
		name = TRpolitical.207.a
		trigger = {
			any_country_with_original_tag = { original_tag_to_check = CHI is_subject_of = ROOT }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				is_historical_focus_on = yes
				tag = JAP
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 743
					state = 1129
					state = 1130
				}
				owner = {
					NOT = { original_tag = CHI }
					OR = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = CHI
					is_subject_of = ROOT
				}
				transfer_state = PREV
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 743
					state = 1129
					state = 1130
				}
				owner = {
					NOT = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			random_country = {
				limit = {
					original_tag = CHI
					is_subject_of = ROOT
				}
				add_state_claim = PREV
				ROOT = { add_state_claim = PREV }
			}
		}
	}
	
	option = {
		name = TRpolitical.207.b
		ai_chance = {
			factor = 50
		}
		every_state = {
			limit = {
				OR = {
					state = 743
					state = 1129
					state = 1130
				}
				owner = {
					is_subject_of = ROOT
				}
			}
			ROOT = { transfer_state = PREV }
		}
		every_state = {
			limit = {
				OR = {
					state = 743
					state = 1129
					state = 1130
				}
				owner = {
					NOT = {
						tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
			ROOT = { add_state_claim = PREV }
		}
	}
}



# Смена правительства у страны и предложение замириться
country_event = {
	id = TRpolitical.300
	title = TRpolitical.300.t
	desc = TRpolitical.300.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.300" }
	
	option = {
		name = TRpolitical.300.a
		ai_chance = {
			factor = 50
		}
		white_peace = FROM
		set_truce = { target = FROM days = 90 }
	}
	
	option = {
		name = TRpolitical.300.b
		trigger = { always = no }
		ai_chance = {
			factor = 50
		}
		FROM = { country_event = { id = TRpolitical.301 hours = 3 } }
	}
	
	option = {
		name = TRpolitical.300.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				has_government = fascism
			}
		}
		add_political_power = 10
	}
}

# Требование репараций
country_event = {
	id = TRpolitical.301
	title = TRpolitical.301.t
	desc = TRpolitical.301.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.301" }
	
	option = {
		name = TRpolitical.300.a
		ai_chance = {
			factor = 50
		}
		FROM = { country_event = { id = TRpolitical.302 hours = 3 } }
	}
	
	option = {
		name = TRpolitical.301.b
		ai_chance = {
			factor = 50
		}
		FROM = { country_event = { id = TRpolitical.303 hours = 3 } }
	}
}

# Согласие с условиями перемирия
country_event = {
	id = TRpolitical.302
	title = TRpolitical.302.t
	desc = TRpolitical.302.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.302" }
	
	option = {
		name = trworldnews.58.a
		
	}
}

# Отказ от условий перемирия
country_event = {
	id = TRpolitical.303
	title = TRpolitical.303.t
	desc = TRpolitical.303.desc
	picture = GFX_report_event_election_vote
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.303" }
	
	option = {
		name = TRpolitical.303.a
		
	}
}




country_event = {
	id = TRpolitical.999
	title = TRpolitical.999.t
	desc = TRpolitical.999.desc
	picture = GFX_report_event_royal_visit
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event TRpolitical.999" }
	
	option = {
		name = TRpolitical.999.a
		set_anarchism_party_name = yes
	}
	
	option = {
		name = TRpolitical.999.a
		reset_anarchism_party_name = yes
	}
}

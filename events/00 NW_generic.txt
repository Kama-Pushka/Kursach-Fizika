###########################
# NWgeneric
###########################

add_namespace = NWgeneric
add_namespace = NWgeneric_stories
add_namespace = NWland_cruiser

#irregular_army // partial_regular_army
country_event = {
	id = NWgeneric.0
	hidden = yes
	
	trigger = {
		OR = {
			original_tag = BHU
			original_tag = IOM
			original_tag = OMA
			original_tag = KTH
		}
		has_war = no
		has_country_flag = summon_peoples_militia_flag
	}
	
	mean_time_to_happen = { days = 7 }
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.0" }
	immediate = {
		clr_country_flag = summon_peoples_militia_flag
		clear_variable = num_of_militia_var
	}
}

#VAT_symbolum_nicaeum
country_event = {
	id = NWgeneric.9991
	hidden = yes
	
	trigger = {
		original_tag = VAT
		has_idea = VAT_symbolum_nicaeum
		any_allied_country = {
			NOT = {
				has_idea = VAT_in_necessariis_unitas_1
				has_idea = VAT_in_necessariis_unitas_2
			}
			OR = {
				OR = {
					original_tag = ITA
					original_tag = FRA
					original_tag = POR
					original_tag = BEL
					original_tag = GER
					original_tag = LUX
					original_tag = HOL
					original_tag = IRE
					original_tag = AUS
					original_tag = HUN
					original_tag = CRO
					original_tag = SLV
					original_tag = POL
					original_tag = EST
					original_tag = LIT
					original_tag = LAT
					original_tag = CZE
					original_tag = SLO
					is_literally_spain = yes
				}
				capital_scope = { is_on_continent = europe }
			}
		}
	}
	
	mean_time_to_happen = { days = 14 }
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.9991" }
	immediate = {
		every_other_country = {
			limit = {
				is_in_faction_with = VAT
				NOT = { has_idea = VAT_in_necessariis_unitas_1 }
				OR = {
					original_tag = ITA
					original_tag = FRA
					original_tag = POR
					original_tag = BEL
					original_tag = GER
					original_tag = LUX
					original_tag = HOL
					original_tag = IRE
					original_tag = AUS
					original_tag = HUN
					original_tag = CRO
					original_tag = SLV
					original_tag = POL
					original_tag = EST
					original_tag = LIT
					original_tag = LAT
					original_tag = CZE
					original_tag = SLO
					is_literally_spain = yes
				}
				is_left_ideology = no
			}
			add_ideas = VAT_in_necessariis_unitas_1
		}
		every_other_country = {
			limit = {
				is_in_faction_with = VAT
				NOT = { has_idea = VAT_in_necessariis_unitas_2 }
				capital_scope = { is_on_continent = europe }
				NOT = {
					original_tag = ITA
					original_tag = FRA
					original_tag = POR
					original_tag = BEL
					original_tag = GER
					original_tag = LUX
					original_tag = HOL
					original_tag = IRE
					original_tag = AUS
					original_tag = HUN
					original_tag = CRO
					original_tag = SLV
					original_tag = POL
					original_tag = EST
					original_tag = LIT
					original_tag = LAT
					original_tag = CZE
					original_tag = SLO
					is_literally_spain = yes
				}
				is_left_ideology = no
			}
			add_ideas = VAT_in_necessariis_unitas_2
		}
	}
}

#Экономические связи с метрополией // субъект
country_event = {
	id = NWgeneric.1
	title = NWgeneric.1.t
	desc = NWgeneric.1.desc
	picture = GFX_report_event_generic_factory
	
	trigger = {
		has_idea = industrial_base
		is_subject = yes
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.1" }
	
	mean_time_to_happen = { months = 6 }
	
	option = {
		name = NWgeneric.1.a
		effect_tooltip = {
			OVERLORD = {
				random_owned_controlled_state = {
					limit = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = yes
						}
					}
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
				}
			}
		}
		hidden_effect = {
			OVERLORD = { country_event = { id = NWgeneric.2 } }
		}
	}
}

#Экономические связи с метрополией // OVERLORD
country_event = {
	id = NWgeneric.2
	title = NWgeneric.2.t
	desc = NWgeneric.2.desc
	picture = GFX_report_event_generic_factory
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.2 (From [From.GetName] [From.GetTag])" }
	
	option = {
		name = NWgeneric.2.a
		random_owned_controlled_state = {
			limit = {
				free_building_slots = {
					building = industrial_complex
					size > 0
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
}

#Военные связи с метрополией // субъект
country_event = {
	id = NWgeneric.3
	title = NWgeneric.3.t
	desc = NWgeneric.3.desc
	picture = GFX_report_event_saf_soldiers_2
	
	trigger = {
		has_idea = military_affairs
		is_subject = yes
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.3" }
	
	mean_time_to_happen = { months = 6 }
	
	option = {
		name = NWgeneric.3.a
		effect_tooltip = {
			OVERLORD = {
				add_manpower = 10000
			}
		}
		hidden_effect = {
			OVERLORD = { country_event = { id = NWgeneric.4 } }
		}
	}
}

#Экономические связи с метрополией // OVERLORD
country_event = {
	id = NWgeneric.4
	title = NWgeneric.4.t
	desc = NWgeneric.4.desc
	picture = GFX_report_event_saf_soldiers_2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.4 (From [From.GetName] [From.GetTag])" }
	
	option = {
		name = NWgeneric.4.a
		add_manpower = 10000
	}
}

#Субъект проводит своевольную политику // OVERLORD
country_event = {
	id = NWgeneric.5
	title = NWgeneric.5.t
	desc = NWgeneric.5.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.5 (From [From.GetName] [From.GetTag])" }
	
	option = {
		name = NWgeneric.5.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				FROM = { NOT = { has_completed_focus = seek_support } }
			}
			modifier = {
				factor = 3
				FROM = { is_ai = no }
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.5.a"
		if = {
			limit = { FROM = { has_completed_focus = seek_support } }
			FROM = { set_country_flag = start_seek_support_flag }
		}
	}
	
	option = {
		name = NWgeneric.5.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				has_focus_tree = hbbrg_focus
			}
			modifier = {
				factor = 2
				has_government = monarchy
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.5.b"
		FROM = {
			country_event = { id = NWgeneric.6 days = 1 }
			set_country_flag = NWgeneric5b_flag
		}
		custom_effect_tooltip = NWgeneric5b_tt
	}
	
	option = {
		name = NWgeneric.5.c
		ai_chance = {
			factor = 50
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.5.c"
		FROM = {
			country_event = { id = NWgeneric.6 days = 1 }
			set_country_flag = NWgeneric5c_flag
		}
		custom_effect_tooltip = NWgeneric5c_tt
	}
}

#Требование прекратить своевольную политику // SUBJECT
country_event = {
	id = NWgeneric.6
	title = NWgeneric.6.t
	desc = NWgeneric.6.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.6" }
	
	option = {
		name = NWgeneric.6.a
		ai_chance = {
			factor = 50
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.6.a"
		if = {
			limit = { NOT = { has_completed_focus = seek_support } }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_free
				}
			}
			if = {
				limit = { is_in_faction = yes }
				leave_faction = yes
				add_ai_strategy = {
					type = alliance
					id = FROM		
					value = -1000
				}
				FROM = {
					add_ai_strategy = {
						type = alliance
						id = ROOT		
						value = -1000
					}
				}
			}
			if = {
				limit = { has_war = yes }
				custom_effect_tooltip = root_out_of_all_war_tt
				hidden_effect = {
					every_enemy_country = {
						limit = {
							is_subject = no
							OR = { is_faction_leader = yes is_in_faction = no }
							NOT = {
								any_of_scopes = {
									array = ROOT.owned_states
									OR = {
										is_claimed_by = PREV
										is_core_of = PREV
									}
								}
								any_of_scopes = {
									array = PREV.owned_states
									OR = {
										is_claimed_by = ROOT
										is_core_of = ROOT
									}
								}
							}
						}
						ROOT = { white_peace = PREV }
					}
				}
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
		else = { set_country_flag = start_seek_support_flag }
	}
	
	option = {
		name = NWgeneric.6.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_completed_focus = seek_support
			}
		}
		trigger = { has_country_flag = NWgeneric5b_flag }
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.6.b"
		clr_country_flag = NWgeneric5b_flag
		if = {
			limit = { has_autonomy_state = autonomy_colony }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_puppet
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_puppet }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_integrated_puppet
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_integrated_puppet }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_supervised_state
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_satellite }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_reichsprotectorate
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_reichsprotectorate }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_reichskommissariat
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_condominium }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_broresp
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_broresp }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_socprotect
				}
			}
		}
		else_if = {
			limit = { has_autonomy_state = autonomy_socprotect }
			OVERLORD = {
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_marionet
				}
			}
		}
		else_if = {
			limit = {
				OR = {
					has_autonomy_state = autonomy_reichskommissariat
					has_autonomy_state = autonomy_marionet
					has_autonomy_state = autonomy_supervised_state
				}
			}
			add_autonomy_score = {
				value = -100
			}
		}
	}
	
	option = {
		name = NWgeneric.6.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				has_completed_focus = seek_support
			}
		}
		trigger = { has_country_flag = NWgeneric5c_flag }
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.6.c"
		clr_country_flag = NWgeneric5c_flag
		OVERLORD = {
			set_autonomy = {
				target = ROOT
				autonomy_state = autonomy_dominion
			}
		}
		set_country_flag = autonomy_NWgeneric6_adopt
		custom_effect_tooltip = autonomy_NWgeneric6_adopt_tt
	}
}

#Субъект требует независимости // OVERLORD
country_event = {
	id = NWgeneric.7
	title = NWgeneric.7.t
	desc = NWgeneric.7.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.7 (From [From.GetName] [From.GetTag])" }
	
	option = {
		name = NWgeneric.7.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				FROM = { is_ai = no }
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.7.a"
		set_autonomy = {
			target = FROM
			autonomy_state = autonomy_free
		}
		FROM = {
			if = {
				limit = { is_in_faction = yes }
				leave_faction = yes
			}
			clear_gem_flag = yes
		}
		if = {
			limit = { FROM = { has_war = yes } }
			custom_effect_tooltip = from_out_of_all_war_tt
			hidden_effect = {
				FROM = {
					every_enemy_country = {
						limit = {
							is_subject = no
							OR = { is_faction_leader = yes is_in_faction = no }
							NOT = {
								any_of_scopes = {
									array = FROM.owned_states
									OR = {
										is_claimed_by = PREV
										is_core_of = PREV
									}
								}
								any_of_scopes = {
									array = PREV.owned_states
									OR = {
										is_claimed_by = FROM
										is_core_of = FROM
									}
								}
							}
						}
						FROM = { white_peace = PREV }
					}
				}
			}
		}
	}
	
	option = {
		name = NWgeneric.7.b
		ai_chance = {
			factor = 50
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.7.b"
		set_autonomy = {
			target = FROM
			autonomy_state = autonomy_free
		}
		FROM = {
			if = {
				limit = { is_in_faction = yes }
				leave_faction = yes
			}
			clear_gem_flag = yes
		}
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
		if = {
			limit = { FROM = { has_war = yes } }
			custom_effect_tooltip = from_out_of_all_war_tt
			hidden_effect = {
				FROM = {
					every_enemy_country = {
						limit = {
							is_subject = no
							OR = { is_faction_leader = yes is_in_faction = no }
							NOT = {
								any_of_scopes = {
									array = FROM.owned_states
									OR = {
										is_claimed_by = PREV
										is_core_of = PREV
									}
								}
								any_of_scopes = {
									array = PREV.owned_states
									OR = {
										is_claimed_by = FROM
										is_core_of = FROM
									}
								}
							}
						}
						FROM = { white_peace = PREV }
					}
				}
			}
		}
	}
}

#Другой субъект призывает к борьбе за независимость // SUBJECT
country_event = {
	id = NWgeneric.8
	title = NWgeneric.8.t
	desc = NWgeneric.8.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.8 (From [From.GetName] [From.GetTag])" }
	
	option = {
		name = NWgeneric.8.a
		ai_chance = {
			factor = 30
			modifier = {
				add = 40
				FROM = { is_ai = no }
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.8.a"
		set_country_flag = accept_call_to_fight_for_independence
		add_to_array = { FROM.country_array = this }
		custom_effect_tooltip = accept_call_to_fight_for_independence_tt
	}
	
	option = {
		name = NWgeneric.8.b
		ai_chance = {
			factor = 70
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.8.b"
		set_country_flag = declane_call_to_fight_for_independence
	}
}

#Ультиматум метрополии // OVERLORD
country_event = {
	id = NWgeneric.9
	title = NWgeneric.9.t
	desc = NWgeneric.9.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.9 (From [From.GetName] [From.GetTag])" }
	
	option = {
		name = NWgeneric.9.a
		ai_chance = {
			factor = 40
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.9.a"
		set_autonomy = {
			target = FROM
			autonomy_state = autonomy_free
		}
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -1000
		}
		FROM = {
			if = {
				limit = { is_in_faction = yes }
				leave_faction = yes
			}
			clear_gem_flag = yes
			add_ai_strategy = {
				type = alliance
				id = ROOT		
				value = -1000
			}
		}
		if = {
			limit = { FROM = { has_war = yes } }
			custom_effect_tooltip = from_out_of_all_war_tt
			hidden_effect = {
				FROM = {
					every_enemy_country = {
						limit = {
							is_subject = no
							OR = { is_faction_leader = yes is_in_faction = no }
							NOT = {
								any_of_scopes = {
									array = FROM.owned_states
									OR = {
										is_claimed_by = PREV
										is_core_of = PREV
									}
								}
								any_of_scopes = {
									array = PREV.owned_states
									OR = {
										is_claimed_by = FROM
										is_core_of = FROM
									}
								}
							}
						}
						FROM = { white_peace = PREV }
					}
				}
			}
		}
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
		hidden_effect = {
			every_other_country = {
				limit = {
					NOT = { tag = FROM }
					is_subject_of = ROOT
					has_country_flag = accept_call_to_fight_for_independence
				}
				OVERLORD = {
					PREV = {
						add_ai_strategy = {
							type = alliance
							id = ROOT		
							value = -1000
						}
					}
					add_ai_strategy = {
						type = alliance
						id = PREV		
						value = -1000
					}
					set_autonomy = {
						target = PREV
						autonomy_state = autonomy_free
					}
				}
				clear_gem_flag = yes
				if = {
					limit = { is_in_faction = yes }
					leave_faction = yes
				}
				if = {
					limit = { has_war = yes }
					every_enemy_country = {
						limit = {
							is_subject = no
							OR = { is_faction_leader = yes is_in_faction = no }
						}
						PREV = { white_peace = PREV }
					}
				}
				add_to_war = {
					targeted_alliance = FROM
					enemy = ROOT 
					hostility_reason = asked_to_join
				}
			}
			every_country = {
				limit = {
					is_subject_of = ROOT
				}
				clr_country_flag = declane_call_to_fight_for_independence
			}
		}
		FROM = {
			clear_array = country_array
			clr_country_flag = start_seek_support_flag
		}
	}
	
	option = {
		name = NWgeneric.9.b
		ai_chance = {
			factor = 60
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event choosen NWgeneric.9.b"
		set_autonomy = {
			target = FROM
			autonomy_state = autonomy_free
		}
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -200
		}
		FROM = {
			if = {
				limit = { is_in_faction = yes }
				leave_faction = yes
			}
			clear_gem_flag = yes
			diplomatic_relation = {
				country = ROOT
				relation = non_aggression_pact
				active = yes
			}
			add_ai_strategy = {
				type = alliance
				id = ROOT		
				value = -200
			}
		}
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
			active = yes
		}
		hidden_effect = {
			every_country = {
				limit = {
					is_subject_of = ROOT
				}
				clr_country_flag = accept_call_to_fight_for_independence
				clr_country_flag = declane_call_to_fight_for_independence
			}
		}
		if = {
			limit = { FROM = { has_war = yes } }
			custom_effect_tooltip = from_out_of_all_war_tt
			hidden_effect = {
				FROM = {
					every_enemy_country = {
						limit = {
							is_subject = no
							OR = { is_faction_leader = yes is_in_faction = no }
							NOT = {
								any_of_scopes = {
									array = FROM.owned_states
									OR = {
										is_claimed_by = PREV
										is_core_of = PREV
									}
								}
								any_of_scopes = {
									array = PREV.owned_states
									OR = {
										is_claimed_by = FROM
										is_core_of = FROM
									}
								}
							}
						}
						FROM = { white_peace = PREV }
					}
				}
			}
		}
		FROM = {
			clear_array = country_array
			clr_country_flag = start_seek_support_flag
		}
	}
}


#### РЕШЕНИЯ ####

#Правительство from организовало гражданскую войну
country_event = {
	id = NWgeneric.10
	title = {
		text = NWgeneric.10.t1
		trigger = { FROM = { NOT = { has_government = anarchism } } }
	}
	title = {
		text = NWgeneric.10.t2
		trigger = { FROM = { has_government = anarchism } }
	}
	desc = NWgeneric.10.desc
	picture = GFX_report_event_crowd_in_prague
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.10 from [From.GetName] ([From.GetTag])" }
	
	option = {
		name = NWgeneric.10.a
		add_opinion_modifier = { target = FROM modifier = generic_start_civil_war_op2 }
		FROM = { add_opinion_modifier = { target = ROOT modifier = generic_start_civil_war_op2 } }
	}
}

#Война кажется безнадёжной // осколок
country_event = {
	id = NWgeneric.11
	title = NWgeneric.11.t
	desc = NWgeneric.11.desc
	picture = GFX_report_event_chinese_soldiers_city_ruin
	
	trigger = {
		NOT = { has_country_flag = shard_call_to_help_flag }
		has_civil_war = yes
		any_of_scopes = {
			array = global.is_revolter
			has_country_flag = flag_is_revolter_of_shard_@ROOT
			NOT = {
				is_in_faction_with = ROOT
				has_war_with = ROOT
				has_war_together_with = ROOT
			}
		}
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.11" }
	immediate = {
		hidden_effect = {
			set_country_flag = shard_call_to_help_flag
			random_other_country = {
				limit = {
					has_country_flag = flag_is_revolter_of_shard_@ROOT
				}
				save_event_target_as = is_revolter_of_shard
				clr_country_flag = flag_is_revolter_of_shard_@ROOT
			}
		}
	}
	
	#mean_time_to_happen = { months = 3 }
	mean_time_to_happen = { days = 7 }
	
	option = {
		name = NWgeneric.11.a
		ai_chance = {
			factor = 90
		}
		event_target:is_revolter_of_shard = {
			country_event = { id = NWgeneric.12 days = 1 }
		}
	}
	
	option = {
		name = NWgeneric.11.b
		ai_chance = {
			factor = 0
		}
	}
}

#From запрашивает помощь // инициатор
country_event = {
	id = NWgeneric.12
	title = NWgeneric.12.t
	desc = NWgeneric.12.desc
	picture = GFX_report_event_bulgarian_soldiers
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.12 from [From.GetName] ([From.GetTag])" }

	option = {
		name = NWgeneric.12.a
		ai_chance = {
			factor = 90
		}
		#declare_war_on = {
		#	target = event_target:revolter_of_base
		#	type = annex_everything
		#}
		random_other_country = {
			limit = {
				original_tag = FROM
				NOT = { tag = FROM }
			}
			ROOT = {
				add_to_war = {
					targeted_alliance = FROM
					enemy = PREV
					hostility_reason = asked_to_join
				}
			}
		}
	}
	
	option = {
		name = NWgeneric.12.b
		ai_chance = {
			factor = 10
		}
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -100
		}
		add_ai_strategy = {
			type = protect
			id = FROM		
			value = -100
		}
		add_ai_strategy = {
			type = send_volunteers_desire
			id = FROM		
			value = -75
		}
		remove_opinion_modifier = { target = FROM modifier = generic_start_civil_war_op }
		FROM = {
			remove_opinion_modifier = { target = ROOT modifier = generic_start_civil_war_op }
			add_opinion_modifier = { target = ROOT modifier = generic_no_support_in_civil_war_op }
			add_ai_strategy = {
				type = befriend
				id = ROOT
				value = -150
			}
			add_ai_strategy = {
				type = alliance
				id = ROOT		
				value = -300
			}
		}
	}
}

#Государство должно заплатить за свои преступления // выжившая цель
country_event = {
	id = NWgeneric.13
	title = NWgeneric.13.t
	desc = NWgeneric.13.desc
	picture = GFX_report_event_communist_leader
	
	trigger = {
		has_civil_war = no
		any_of_scopes = {
			array = global.is_revolter
			has_country_flag = flag_is_revolter_of_base_@ROOT
			NOT = {
				is_in_faction_with = ROOT
				has_war_with = ROOT
			}
			ROOT = { has_country_flag = flag_revolter_of_base_is_@PREV }
		}
		NOT = { has_country_flag = has_chance_revenge_flag }
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.13" }
	immediate = {
		hidden_effect = {
			set_country_flag = has_chance_revenge_flag
			random_other_country = {
				limit = {
					has_country_flag = flag_is_revolter_of_base_@ROOT
				}
				save_event_target_as = target_to_revenge
			}
		}
	}
	
	mean_time_to_happen = { days = 10 }
	
	option = {
		name = NWgeneric.13.a
		ai_chance = {
			factor = 90
		}
		create_wargoal = {
			type = annex_everything
			target = event_target:target_to_revenge
		}
		add_ai_strategy = {
			type = antagonize
			id = event_target:target_to_revenge
			value = 100
		}
		add_ai_strategy = {
			type = conquer
			id = event_target:target_to_revenge
			value = 100
		}
	}
	
	option = {
		name = NWgeneric.13.b
		ai_chance = {
			factor = 10
		}
	}
}



#Анархист приглашает в альянс
country_event = {
	id = NWgeneric.14
	title = NWgeneric.14.t
	desc = NWgeneric.14.desc
	picture = GFX_report_event_generic_read_write
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.14" }
	
	option = {
		name = NWgeneric.14.a
		ai_chance = {
			factor = 50
			modifier = {
				add = 20
				FROM = { original_tag = ETH }
				is_neutrality_anarchist = yes
			}
			modifier = {
				factor = 10
				FROM = {
					NOT = { original_tag = ETH }
					is_neutrality_anarchist = yes
				}
				is_neutrality_anarchist = yes
			}
			modifier = {
				factor = 10
				FROM = {
					NOT = { original_tag = ETH }
					is_left_anarchist = yes
				}
				is_left_anarchist = yes
			}
			modifier = {
				factor = 10
				FROM = {
					NOT = { original_tag = ETH }
					is_right_anarchist = yes
				}
				is_right_anarchist = yes
			}
		}
		FROM = {
			add_to_faction = ROOT
			country_event = { id = generic.6 hours = 6 } 
		}
	}
	
	option = {
		name = NWgeneric.14.b
		ai_chance = {
			factor = 50
			modifier = {
				add = -20
				FROM = { original_tag = ETH }
				is_neutrality_anarchist = yes
			}
		}
		FROM = { country_event = { id = generic.7 hours = 6 } }
	}
}

# Первомайская демонстрация пульсар // SAI
country_event = {
	id = NWgeneric.15
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.15" }
	immediate = {
		country_event = { id = NWgeneric.15 days = 365 }
		every_other_country = {
			limit = {
				has_war = no
				OR = {
					has_government = communism
					has_government = trozkism
					has_government = anarchism
				}
			}
			country_event = NWgeneric.16
		}
	}
}

# Первомайская демонстрация / День борьбы пролетариата
country_event = {
	id = NWgeneric.16
	title = {
		text = NWgeneric.16.t1
		trigger = {
			NOT = { has_government = anarchism }
		}
	}
	title = {
		text = NWgeneric.16.t_anarchism				# for all anarchists
		trigger = {
			has_government = anarchism
		}
	}
	
	desc = {
		text = NWgeneric.16.desc1
		trigger = {
			NOT = {
				original_tag = POR
				has_government = anarchism
			}
		}
	}
	desc = {
		text = NWgeneric.16.desc_POR_anarchism		# for POR anarchists
		trigger = {
			original_tag = POR
			has_government = anarchism
		}
	}
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.16" }

	option = {
		name = NWgeneric.16.a
		trigger = {
			NOT = {
				AND = {
					original_tag = POR
					has_government = anarchism
				}
			}
		}
		ai_chance = {
			factor = 1
		}
		add_stability = 0.02
		if = {
			limit = { has_government = anarchism }
			add_to_variable = { anarchism_unity_var = 2 tooltip = anarchism_unity_add_effect }
		}
		add_popularity = {
			ideology = var:current_party_ideology_group
			popularity = 0.01
		}
	}
	
	option = {
		name = NWgeneric.16.b
		trigger = {
			NOT = {
				AND = {
					original_tag = POR
					has_government = anarchism
				}
			}
		}
		ai_chance = {
			factor = 99
			modifier = {
				factor = 0
				has_stability > 0.979
			}
		}
		add_stability = 0.04
		add_political_power = -15
		if = {
			limit = { has_government = anarchism }
			add_to_variable = { anarchism_unity_var = 3.5 tooltip = anarchism_unity_add_effect }
		}
		add_popularity = {
			ideology = var:current_party_ideology_group
			popularity = 0.025
		}
	}
	
	option = {
		name = NWgeneric.16.por
		trigger = {
			original_tag = POR
			has_government = anarchism
		}
		ai_chance = {
			factor = 1
		}
		add_war_support = 0.01
		add_to_variable = { anarchism_unity_var = 2 tooltip = anarchism_unity_add_effect }
		add_popularity = {
			ideology = var:current_party_ideology_group
			popularity = 0.01
		}
	}
}


#FROM – требование территорий // алли альянс
country_event = {
	id = NWgeneric.17
	title = NWgeneric.17.t
	desc = NWgeneric.17.desc
	picture = GFX_report_event_military_planning
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.17" }
	
	option = {
		name = NWgeneric.17.a
		ai_chance = {
			factor = 75
			modifier = {
				factor = 0
				has_government = communism
				FROM = {
					OR = {
						has_government = fascism
						has_government = monarchy
						has_government = trozkism
						has_government = anarchism
					}
				}
			}
			modifier = {
				factor = 0
				has_government = trozkism
				FROM = {
					OR = {
						has_government = fascism
						has_government = monarchy
						has_government = communism
						has_government = anarchism
					}
				}
			}
			modifier = {
				factor = 0
				has_government = fascism
				FROM = {
					NOT = {
						has_government = fascism
						has_government = monarchy
						has_government = neutrality
					}
				}
			}
			modifier = {
				factor = 0
				has_government = anarchism
				FROM = { NOT = { has_government = anarchism } }
			}
			modifier = {
				factor = 0
				original_tag = PER
				FROM = { original_tag = QAS }
			}
			modifier = {
				factor = 0
				any_owned_state = {
					has_state_flag = is_demand_territories_of_@FROM
					OR = {
						is_core_of = ROOT
						is_claimed_by = ROOT
						is_capital = yes
					}
				}
			}
			modifier = {
				factor = 0
				any_owned_state = {
					is_core_of = ROOT
					is_core_of = FROM
				}
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = JAP
					is_literally_china = yes
				}
				FROM = {
					OR = {
						original_tag = JAP
						is_literally_china = yes
					}
				}
			}
# ПОЧИНИТЬ ПОТОМ			
			modifier = {
				add = 500
				original_tag = JAP
#				has_completed_focus = JAP_asian_anti_communist_treaty
				is_in_faction_with = CHI
				FROM = {
					original_tag = CHI
				}
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = ITA
					original_tag = RSI
				}
			}
			modifier = {
				factor = 0
				original_tag = ENG
				FROM = { original_tag = CYP }
			}
			modifier = {
				factor = 0
				original_tag = CAN
				FROM = { original_tag = NFL }
			}
		}
		every_state = {
			limit = {
				has_state_flag = is_demand_territories_of_@FROM
			}
			remove_core_of = ROOT
			remove_claim_by = ROOT
			FROM = { transfer_state = PREV }
			clr_state_flag = is_demand_territories_of_@FROM
		}
		every_state = {
			limit = {
				is_claimed_by = ROOT
				OR = {
					is_core_of = FROM
					is_owned_by = FROM
				}
			}
			remove_claim_by = ROOT
			random_other_country = {
				limit = {
					PREV = { is_claimed_by = PREV }
				}
				remove_state_claim = PREV
			}
		}
	}
	
	option = {
		name = NWgeneric.17.b
		ai_chance = {
			factor = 25
			modifier = {
				factor = 0.1
				FROM = { has_government = ROOT }
			}
			modifier = {
				factor = 0.1
				FROM = { is_ai = no }
			}
		}
		FROM = { country_event = { id = NWgeneric.18 hours = 6 } }
		hidden_effect = {
			every_state = {
				limit = {
					has_state_flag = is_demand_territories_of_@FROM
				}
				clr_state_flag = is_demand_territories_of_@FROM
			}
		}
	}
}

#FROM – отказ возвращать наши территории // требователь
country_event = {
	id = NWgeneric.18
	title = NWgeneric.18.t
	desc = NWgeneric.18.desc
	picture = GFX_report_event_military_planning
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.18" }
	
	option = {
		name = NWgeneric.18.a
		ai_chance = {
			factor = 25
			modifier = {
				factor = 2
				has_government = communism
				FROM = {
					OR = {
						has_government = fascism
						has_government = monarchy
						has_government = trozkism
						has_government = anarchism
					}
				}
			}
			modifier = {
				factor = 2
				has_government = trozkism
				FROM = {
					OR = {
						has_government = fascism
						has_government = monarchy
						has_government = communism
						has_government = anarchism
					}
				}
			}
			modifier = {
				factor = 2
				has_government = fascism
				FROM = {
					NOT = {
						has_government = fascism
						has_government = monarchy
						has_government = neutrality
					}
				}
			}
			modifier = {
				factor = 2
				has_government = anarchism
				FROM = { NOT = { has_government = anarchism } }
			}
		}
		trigger = { is_faction_leader = yes }
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -1000
		}
		FROM = {
			leave_faction = yes
			add_ai_strategy = {
				type = alliance
				id = ROOT		
				value = -1000
			}
			set_country_flag = { flag = outcast_@ROOT days = 1 value = 1 }
		}
		custom_effect_tooltip = NWgeneric_18a_tt
		hidden_effect = {
			every_other_country = {
				limit = {
					is_in_faction_with = ROOT
				}
				country_event = { id = NWgeneric.19 hours = 6 }
			}
		}
	}
	
	option = {
		name = NWgeneric.18.b
		ai_chance = {
			factor = 25
		}
		trigger = {
			is_faction_leader = no
			FROM = { is_faction_leader = no }
		}
		hidden_effect = {
			FROM = {
				set_country_flag = { flag = call_canceler_@ROOT days = 1 value = 1 }
			}
		}
		random_other_country = {
			limit = {
				is_in_faction_with = ROOT
				is_faction_leader = yes
			}
			country_event = { id = NWgeneric.20 hours = 6 }
		}
	}
	
	option = {
		name = NWgeneric.18.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 10
				FROM = { has_government = ROOT }
			}
		}
	}
}

#FROM – исключение из альянса // Члены альянсов
country_event = {
	id = NWgeneric.19
	title = NWgeneric.19.t
	desc = NWgeneric.19.desc
	picture = GFX_report_event_military_planning
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.19" }
	immediate = {
		hidden_effect = {
			random_other_country = {
				limit = {
					has_country_flag = { flag = outcast_@FROM value > 0 }
				}
				save_event_target_as = is_outcast	#Держава
			}
		}
	}
	
	option = {
		name = NWgeneric.19.a
		ai_chance = {
			factor = 90
		}
	}
	
	option = {
		name = NWgeneric.19.b
		ai_chance = {
			factor = 10
		}
		leave_faction = yes
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -1000
		}
		ROOT = {
			add_ai_strategy = {
				type = alliance
				id = FROM		
				value = -1000
			}
		}
		add_opinion_modifier = { target = FROM modifier = diplomatic_protest_op }
		FROM = { add_opinion_modifier = { target = ROOT modifier = diplomatic_protest_op } }
		add_opinion_modifier = { target = event_target:is_outcast_by_@FROM modifier = diplomatic_protest_op2 }
		event_target:is_outcast_by_@FROM = { add_opinion_modifier = { target = ROOT modifier = diplomatic_protest_op2 } }
	}
}

#[Страна] и [Держава] – территориальный спор // лидер альянса
country_event = {
	id = NWgeneric.20
	title = NWgeneric.20.t
	desc = NWgeneric.20.desc
	picture = GFX_report_event_military_planning
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.20" }
	immediate = {
		hidden_effect = {
			random_other_country = {
				limit = {
					has_country_flag = { flag = call_canceler_@FROM value > 0 }
				}
				save_event_target_as = is_call_canceler	#Держава
			}
		}
	}
	
	option = {
		name = NWgeneric.20.a
		ai_chance = {
			factor = 50
		}
		FROM = { set_country_flag = { flag = demender_@ROOT days = 1 value = 1 } }
		FROM.FROM = { country_event = { id = NWgeneric.21 hours = 6 } }
	}
	
	option = {
		name = NWgeneric.20.b
		ai_chance = {
			factor = 50
		}
		FROM = { country_event = { id = NWgeneric.22 hours = 6 } }
	}
}

#[Лидер альянса] – требование вернуть [прилагательное Страны] территории // Держава
country_event = {
	id = NWgeneric.21
	title = NWgeneric.21.t
	desc = NWgeneric.21.desc
	picture = GFX_report_event_military_planning
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.21" }
	immediate = {
		hidden_effect = {
			random_other_country = {
				limit = {
					has_country_flag = { flag = demender_@FROM value > 0 }
				}
				save_event_target_as = is_demender	#Страна
			}
		}
	}
	
	option = {
		name = NWgeneric.21.a
		ai_chance = {
			factor = 10
		}
		leave_faction = yes
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -1000
		}
		ROOT = {
			add_ai_strategy = {
				type = alliance
				id = FROM
				value = -1000
			}
		}
		add_opinion_modifier = { target = FROM modifier = diplomatic_protest_op }
		FROM = { add_opinion_modifier = { target = ROOT modifier = diplomatic_protest_op } }
	}
	
	option = {
		name = NWgeneric.21.b
		ai_chance = {
			factor = 90
		}
		effect_tooltip = {
			every_state = {
				limit = {
					OR = {
						is_core_of = event_target:is_demender
						is_claimed_by = event_target:is_demender
					}
					owner = {
						OR = {
							tag = ROOT
							is_subject_of = ROOT
						}
					}
					OR = {
						any_neighbor_state = {
							owner = {
								OR = {
									tag = event_target:is_demender
									is_subject_of = event_target:is_demender
								}
							}
						}
						is_coastal = yes
					}
				}
				remove_core_of = ROOT
				remove_claim_by = ROOT
				event_target:is_demender = { transfer_state = PREV }
			}
		}
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = event_target:is_demender
						is_claimed_by = event_target:is_demender
					}
					owner = {
						OR = {
							tag = ROOT
							is_subject_of = ROOT
						}
					}
				}
				event_target:is_demender = {
					add_to_temp_variable = { temp0 = 1 }
					log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): NUM OF DEMAND STATES: [?temp0]"
				}
			}
			while_loop_effect = {
				limit = { check_variable = { temp0 > 0 } }
				add_to_temp_variable = { temp0 = -1 }
				random_state = {
					limit = {
						OR = {
							is_core_of = event_target:is_demender
							is_claimed_by = event_target:is_demender
						}
						owner = {
							OR = {
								tag = ROOT
								is_subject_of = ROOT
							}
						}
						OR = {
							any_neighbor_state = {
								owner = {
									OR = {
										tag = event_target:is_demender
										is_subject_of = event_target:is_demender
									}
								}
							}
							is_coastal = yes
						}
					}
					event_target:is_demender = { transfer_state = PREV }
				}
			}
		}
		every_state = {
			limit = {
				is_claimed_by = ROOT
				OR = {
					is_core_of = event_target:is_demender
					is_owned_by = event_target:is_demender
				}
			}
			remove_claim_by = ROOT
		}
	}
}

#[Лидер альянса] – отказ нас поддержать // Страна
country_event = {
	id = NWgeneric.22
	title = NWgeneric.22.t
	desc = NWgeneric.22.desc
	picture = GFX_report_event_military_planning
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.22" }
	
	option = {
		name = NWgeneric.22.a
		ai_chance = {
			factor = 10
		}
		leave_faction = yes
		add_ai_strategy = {
			type = alliance
			id = FROM		
			value = -1000
		}
		FROM = {
			add_ai_strategy = {
				type = alliance
				id = FROM		
				value = -1000
			}
		}
		add_opinion_modifier = { target = FROM modifier = diplomatic_protest_op }
		FROM = { add_opinion_modifier = { target = ROOT modifier = diplomatic_protest_op } }
	}
	
	option = {
		name = NWgeneric.22.b
		ai_chance = {
			factor = 90
		}
	}
}



#ПЕРЕКАТЫ ИДЕОЛОГИИ
#ФАШИЗМ
#Призыв к милитаризации общества
country_event = {
	id = NWgeneric.23
	title = NWgeneric.23.t
	desc = NWgeneric.23.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.23" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.24 days = 20 } } }
	
	option = {
		name = NWgeneric.23.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.23a"
		add_war_support = 0.025
		add_popularity = {
			ideology = fascism
			popularity = 0.025
		}
	}
	
	option = {
		name = NWgeneric.23.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				OR = {
					is_historical_focus_on = yes
					has_global_flag = generic_all_set_fascism_flag
				}
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.23b"
		add_stability = 0.025
		add_to_variable = { abort_reform = 1 }
	}
}

#Распространение корпоративизма
country_event = {
	id = NWgeneric.24
	title = NWgeneric.24.t
	desc = NWgeneric.24.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.24" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.25 days = 20 } } }
	
	option = {
		name = NWgeneric.24.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.24a"
		add_popularity = {
			ideology = fascism
			popularity = 0.025
		}
	}
	
	option = {
		name = NWgeneric.24.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.24b"
		add_political_power = 25
		add_to_variable = { abort_reform = 1 }
	}
}

#Поддержка старых традиций
country_event = {
	id = NWgeneric.25
	title = NWgeneric.25.t
	desc = NWgeneric.25.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.25" }
	
	option = {
		name = NWgeneric.25.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.25a"
		every_controlled_state = {
			limit = {
				has_resistance = yes
			}
			add_compliance = 10
		}
		add_popularity = {
			ideology = fascism
			popularity = 0.025
		}
		clear_variable = abort_reform
	}
	
	option = {
		name = NWgeneric.25.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.25b"
		add_stability = 0.025
		add_to_variable = { abort_reform = 1 }
		hidden_effect = {
			if = {
				limit = { check_variable = { abort_reform = 3 } }
				country_event = { id = NWgeneric.41 days = 10 }
			}
		}
		clear_variable = abort_reform
	}
}

#КОММУНИЗМ/ТРОЦКИЗМ
#Устранение социального неравенства
country_event = {
	id = NWgeneric.26
	title = NWgeneric.26.t
	desc = NWgeneric.26.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.26" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.27 days = 20 } } }
	
	option = {
		name = NWgeneric.26.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.26a"
		if = {
			limit = { focus_progress = { focus = internationalism_focus progress > 0 } }
			add_popularity = {
				ideology = communism
				popularity = 0.025
			}
		}
		else_if = {
			limit = { focus_progress = { focus = revolution_focus progress > 0 } }
			add_popularity = {
				ideology = trozkism
				popularity = 0.025
			}
		}
	}
	
	option = {
		name = NWgeneric.26.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				OR = {
					is_historical_focus_on = yes
					has_global_flag = generic_all_set_communism_flag
					has_global_flag = generic_all_set_trozkism_flag
				}
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.26b"
		add_stability = 0.025
		add_to_variable = { abort_reform = 1 }
	}
}

#Национализация промышленности
country_event = {
	id = NWgeneric.27
	title = NWgeneric.27.t
	desc = NWgeneric.27.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.27" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.28 days = 20 } } }
	
	option = {
		name = NWgeneric.26.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.27a"
		if = {
			limit = { focus_progress = { focus = internationalism_focus progress > 0 } }
			add_popularity = {
				ideology = communism
				popularity = 0.025
			}
		}
		else_if = {
			limit = { focus_progress = { focus = revolution_focus progress > 0 } }
			add_popularity = {
				ideology = trozkism
				popularity = 0.025
			}
		}
	}
	
	option = {
		name = NWgeneric.26.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.27b"
		add_political_power = 25
		add_to_variable = { abort_reform = 1 }
	}
}

#Устранение социального неравенства
country_event = {
	id = NWgeneric.28
	title = NWgeneric.28.t
	desc = NWgeneric.28.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.28" }
	
	option = {
		name = NWgeneric.26.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.28a"
		if = {
			limit = { focus_progress = { focus = internationalism_focus progress > 0 } }
			add_popularity = {
				ideology = communism
				popularity = 0.025
			}
		}
		else_if = {
			limit = { focus_progress = { focus = revolution_focus progress > 0 } }
			add_popularity = {
				ideology = trozkism
				popularity = 0.025
			}
		}
		add_stability = 0.025
		clear_variable = abort_reform
	}
	
	option = {
		name = NWgeneric.26.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.28b"
		add_political_power = 25
		add_to_variable = { abort_reform = 1 }
		hidden_effect = {
			if = {
				limit = { check_variable = { abort_reform = 3 } }
				country_event = { id = NWgeneric.41 days = 10 }
			}
		}
		clear_variable = abort_reform
	}
}


#ДЕМОКРАТИЯ
#Узаконить гражданские права
country_event = {
	id = NWgeneric.29
	title = NWgeneric.29.t
	desc = NWgeneric.29.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.29" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.30 days = 20 } } }
	
	option = {
		name = NWgeneric.29.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.29a"
		add_stability = 0.03
		add_popularity = {
			ideology = democratic
			popularity = 0.025
		}
	}
	
	option = {
		name = NWgeneric.29.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				OR = {
					is_historical_focus_on = yes
					has_global_flag = generic_all_set_democratic_flag
				}
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.29b"
		add_stability = -0.01
		add_popularity = {
			ideology = democratic
			popularity = -0.025
		}
		add_to_variable = { abort_reform = 1 }
	}
}

#Провозгласить свободу слова
country_event = {
	id = NWgeneric.30
	title = NWgeneric.30.t
	desc = NWgeneric.30.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.30" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.31 days = 20 } } }
	
	option = {
		name = NWgeneric.30.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.30a"
		add_popularity = {
			ideology = democratic
			popularity = 0.025
		}
	}
	
	option = {
		name = NWgeneric.30.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.30b"
		add_political_power = 25
		add_to_variable = { abort_reform = 1 }
	}
}

#Установление и реорганизация партийной системы
country_event = {
	id = NWgeneric.31
	title = NWgeneric.31.t
	desc = NWgeneric.31.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.31" }
	
	option = {
		name = NWgeneric.31.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.31a"
		add_political_power = 25
		add_popularity = {
			ideology = democratic
			popularity = 0.025
		}
		clear_variable = abort_reform
	}
	
	option = {
		name = NWgeneric.31.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.31b"
		add_stability = -0.025
		add_to_variable = { abort_reform = 1 }
		hidden_effect = {
			if = {
				limit = { check_variable = { abort_reform = 3 } }
				country_event = { id = NWgeneric.41 days = 10 }
			}
		}
		clear_variable = abort_reform
	}
}

#ТЕХНОКРАТИЯ
#Делегирования производственных процессов
country_event = {
	id = NWgeneric.32
	title = NWgeneric.32.t
	desc = NWgeneric.32.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.32" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.33 days = 20 } } }
	
	option = {
		name = NWgeneric.32.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.32a"
		random_owned_controlled_state = {
			limit = {
				free_building_slots = {
					building = industrial_complex
					size > 0
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	
	option = {
		name = NWgeneric.32.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				OR = {
					is_historical_focus_on = yes
					has_global_flag = generic_all_set_technocracy_flag
				}
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.32b"
		add_political_power = -10
		add_stability = -0.01
		add_to_variable = { abort_reform = 1 }
	}
}

#Построение автаркии
country_event = {
	id = NWgeneric.33
	title = NWgeneric.33.t
	desc = NWgeneric.33.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.33" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.34 days = 20 } } }
	
	option = {
		name = NWgeneric.33.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.33a"
		random_owned_controlled_state = {
			limit = {
				free_building_slots = {
					building = industrial_complex
					size > 1
					include_locked = yes
				}
			}
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = synthetic_refinery
				level = 1
				instant_build = yes
			}
			add_building_construction = {
				type = fuel_silo
				level = 1
				instant_build = yes
			}
		}
	}
	
	option = {
		name = NWgeneric.33.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.33b"
		add_political_power = -15
		add_to_variable = { abort_reform = 1 }
	}
}

#Поставить науку и образование во главу
country_event = {
	id = NWgeneric.34
	title = NWgeneric.34.t
	desc = NWgeneric.34.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.34" }
	
	option = {
		name = NWgeneric.34.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.34a"
		add_tech_bonus = {
			name = industrial_bonus
			bonus = 0.35
			uses = 1
			category = electronics
			category = industry
			category = infantry_weapons
		}
		clear_variable = abort_reform
	}
	
	option = {
		name = NWgeneric.34.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.34b"
		add_stability = -0.03
		add_to_variable = { abort_reform = 1 }
		hidden_effect = {
			if = {
				limit = { check_variable = { abort_reform = 3 } }
				country_event = { id = NWgeneric.41 days = 10 }
			}
		}
		clear_variable = abort_reform
	}
}


#НЕЙТРАЛЫ
#Усиление правоохранительных органов и спецслужб
country_event = {
	id = NWgeneric.35
	title = NWgeneric.35.t
	desc = NWgeneric.35.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.35" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.36 days = 20 } } }
	
	option = {
		name = NWgeneric.35.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.35a"
		add_popularity = {
			ideology = neutrality
			popularity = 0.025
		}
		add_stability = -0.015
	}
	
	option = {
		name = NWgeneric.35.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				OR = {
					is_historical_focus_on = yes
					has_global_flag = generic_all_set_neutrality_flag
				}
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.35b"
		add_popularity = {
			ideology = neutrality
			popularity = 0.025
		}
		add_stability = 0.015
		add_to_variable = { abort_reform = 1 }
	}
}

#Подтверждения права на власть
country_event = {
	id = NWgeneric.36
	title = NWgeneric.36.t
	desc = NWgeneric.36.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.36" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.37 days = 20 } } }
	
	option = {
		name = NWgeneric.36.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.36a"
		add_political_power = 25
		add_popularity = {
			ideology = neutrality
			popularity = 0.025
		}
	}
	
	option = {
		name = NWgeneric.36.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.36b"
		add_political_power = -15
		add_to_variable = { abort_reform = 1 }
	}
}

#Подконтрольное СМИ
country_event = {
	id = NWgeneric.37
	title = NWgeneric.37.t
	desc = NWgeneric.37.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.37" }
	
	option = {
		name = NWgeneric.37.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.37a"
		add_political_power = 15
		add_popularity = {
			ideology = neutrality
			popularity = 0.025
		}
		clear_variable = abort_reform
	}
	
	option = {
		name = NWgeneric.37.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.37b"
		add_stability = -0.05
		add_to_variable = { abort_reform = 1 }
		hidden_effect = {
			if = {
				limit = { check_variable = { abort_reform = 3 } }
				country_event = { id = NWgeneric.41 days = 10 }
			}
		}
		clear_variable = abort_reform
	}
}


#МОНАРХИЯ
#Призыв к богу
country_event = {
	id = NWgeneric.38
	title = NWgeneric.38.t
	desc = NWgeneric.38.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.38" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.39 days = 20 } } }
	
	option = {
		name = NWgeneric.38.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.38a"
		add_popularity = {
			ideology = monarchy
			popularity = 0.025
		}
		add_war_support = 0.015
	}
	
	option = {
		name = NWgeneric.38.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				OR = {
					is_historical_focus_on = yes
					has_global_flag = generic_all_set_monarchy_flag
				}
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.38b"
		add_popularity = {
			ideology = monarchy
			popularity = -0.025
		}
		add_stability = 0.015
		add_to_variable = { abort_reform = 1 }
	}
}

#Судьба монархии
country_event = {
	id = NWgeneric.39
	title = NWgeneric.39.t
	desc = NWgeneric.39.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.39" }
	immediate = { hidden_effect = { country_event = { id = NWgeneric.40 days = 20 } } }
	
	option = {
		name = NWgeneric.39.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.39a"
		add_popularity = {
			ideology = monarchy
			popularity = 0.025
		}
		add_political_power = 25
	}
	
	option = {
		name = NWgeneric.39.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.39b"
		add_popularity = {
			ideology = monarchy
			popularity = -0.025
		}
		add_stability = 0.015
		add_to_variable = { abort_reform = 1 }
	}
}

#Поддержка старых традиций
country_event = {
	id = NWgeneric.40
	title = NWgeneric.40.t
	desc = NWgeneric.40.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.40" }
	
	option = {
		name = NWgeneric.40.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.40a"
		add_popularity = {
			ideology = monarchy
			popularity = 0.025
		}
		add_stability = 0.015
		clear_variable = abort_reform
	}
	
	option = {
		name = NWgeneric.40.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				is_historical_focus_on = yes
			}
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): choosen NWgeneric.40b"
		add_popularity = {
			ideology = monarchy
			popularity = -0.025
		}
		add_stability = 0.015
		add_to_variable = { abort_reform = 1 }
		hidden_effect = {
			if = {
				limit = { check_variable = { abort_reform = 3 } }
				country_event = { id = NWgeneric.41 days = 10 }
			}
		}
		clear_variable = abort_reform
	}
}


#Недовольные вышли на улицы
country_event = {
	id = NWgeneric.41
	title = NWgeneric.41.t
	desc = NWgeneric.41.desc
	picture = GFX_report_event_crowd_in_prague
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.41" }
	
	option = {
		name = NWgeneric.41.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		add_political_power = -50
		add_stability = -0.05
	}
	
	option = {
		name = NWgeneric.41.b
		ai_chance = {
			factor = 50
			modifier = {
				add = 5000
				OR = {
					has_country_flag = generic_spawn_anarchists_flag
					has_global_flag = generic_all_set_anarchism_flag
				}
			}
		}
		add_political_power = -25
		hidden_effect = {
			random_list = {
				50 = {
					modifier = {
						factor = 1.1
						has_war_support > 0.5
						has_war_support < 0.6
					}
					modifier = {
						factor = 1.2
						has_war_support > 0.6
						has_war_support < 0.7
					}
					modifier = {
						factor = 1.3
						has_war_support > 0.7
						has_war_support < 0.8
					}
					modifier = {
						factor = 1.4
						has_war_support > 0.8
						has_war_support < 0.9
					}
					modifier = {
						factor = 1.5
						has_war_support > 0.9
					}
					modifier = {
						factor = 1.1
						has_stability < 0.5
						has_stability > 0.4
					}
					modifier = {
						factor = 1.2
						has_stability < 0.4
						has_stability > 0.3
					}
					modifier = {
						factor = 1.3
						has_stability < 0.3
						has_stability > 0.2
					}
					modifier = {
						factor = 1.4
						has_stability < 0.2
						has_stability > 0.1
					}
					modifier = {
						factor = 1.5
						has_stability < 0.1
					}
					###
					modifier = {
						factor = 0.9
						has_war_support < 0.5
						has_war_support > 0.4
					}
					modifier = {
						factor = 0.8
						has_war_support < 0.4
						has_war_support > 0.3
					}
					modifier = {
						factor = 0.7
						has_war_support < 0.3
						has_war_support > 0.2
					}
					modifier = {
						factor = 0.6
						has_war_support < 0.2
						has_war_support > 0.1
					}
					modifier = {
						factor = 0.5
						has_war_support < 0.1
					}
					modifier = {
						factor = 0.9
						has_stability > 0.5
						has_stability < 0.6
					}
					modifier = {
						factor = 0.8
						has_stability > 0.6
						has_stability < 0.7
					}
					modifier = {
						factor = 0.7
						has_stability > 0.7
						has_stability < 0.8
					}
					modifier = {
						factor = 0.6
						has_stability > 0.8
						has_stability < 0.9
					}
					modifier = {
						factor = 0.5
						has_stability > 0.9
					}
					###
					modifier = {
						factor = 0
						check_variable = { num_owned_states < 2 }
					}
					modifier = {
						factor = 0
						civil_war_is_available = no
					}
					country_event = { id = NWgeneric.43 days = 20 }		#Вооружённое восстание
				}
				50 = {
					modifier = {
						factor = 1.1
						has_war_support < 0.5
						has_war_support > 0.4
					}
					modifier = {
						factor = 1.2
						has_war_support < 0.4
						has_war_support > 0.3
					}
					modifier = {
						factor = 1.3
						has_war_support < 0.3
						has_war_support > 0.2
					}
					modifier = {
						factor = 1.4
						has_war_support < 0.2
						has_war_support > 0.1
					}
					modifier = {
						factor = 1.5
						has_war_support < 0.1
					}
					modifier = {
						factor = 1.1
						has_stability > 0.5
						has_stability < 0.6
					}
					modifier = {
						factor = 1.2
						has_stability > 0.6
						has_stability < 0.7
					}
					modifier = {
						factor = 1.3
						has_stability > 0.7
						has_stability < 0.8
					}
					modifier = {
						factor = 1.4
						has_stability > 0.8
						has_stability < 0.9
					}
					modifier = {
						factor = 1.5
						has_stability > 0.9
					}
					###
					modifier = {
						factor = 0.9
						has_war_support > 0.5
						has_war_support < 0.6
					}
					modifier = {
						factor = 0.8
						has_war_support > 0.6
						has_war_support < 0.7
					}
					modifier = {
						factor = 0.7
						has_war_support > 0.7
						has_war_support < 0.8
					}
					modifier = {
						factor = 0.6
						has_war_support > 0.8
						has_war_support < 0.9
					}
					modifier = {
						factor = 0.5
						has_war_support > 0.9
					}
					modifier = {
						factor = 0.9
						has_stability < 0.5
						has_stability > 0.4
					}
					modifier = {
						factor = 0.8
						has_stability < 0.4
						has_stability > 0.3
					}
					modifier = {
						factor = 0.7
						has_stability < 0.3
						has_stability > 0.2
					}
					modifier = {
						factor = 0.6
						has_stability < 0.2
						has_stability > 0.1
					}
					modifier = {
						factor = 0.5
						has_stability < 0.1
					}
					modifier = {
						add = 500
						civil_war_is_available = no
					}
					country_event = { id = NWgeneric.42 days = 20 }		#Свержение правительства
				}
			}
		}
	}
}

#Свержение правительства
country_event = {
	id = NWgeneric.42
	title = NWgeneric.42.t
	desc = NWgeneric.42.desc
	picture = GFX_report_event_communist_leader
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.42" }
	
	option = {
		name = NWgeneric.42.a
		add_political_power = -50
		add_stability = -0.05
		add_popularity = {
			ideology = anarchism
			popularity = 0.4
		}
		set_politics = {
			ruling_party = anarchism
			elections_allowed = no
		}
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = first_anarchist_spawn_peace } }
				set_global_flag = first_anarchist_spawn_peace
				news_event = { id = trworldnews.134 hours = 3 }
			}
		}
	}
}

#Вооружённое восстание
country_event = {
	id = NWgeneric.43
	title = NWgeneric.43.t
	desc = NWgeneric.43.desc
	picture = GFX_report_event_spr_spanish_civil_war
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.43" }
	immediate = {
		hidden_effect = {
			random_character = {
				limit = { has_ideology_group = fascism }
				save_event_target_as = fascism_character
			}
			random_character = {
				limit = { has_ideology_group = communism }
				save_event_target_as = communism_character
			}
			random_character = {
				limit = { has_ideology_group = trozkism }
				save_event_target_as = trozkism_character
			}
			random_character = {
				limit = { has_ideology_group = democratic }
				save_event_target_as = democratic_character
			}
			random_character = {
				limit = { has_ideology_group = technocracy }
				save_event_target_as = technocracy_character
			}
			random_character = {
				limit = { has_ideology_group = neutrality }
				save_event_target_as = neutrality_character
			}
			random_character = {
				limit = { has_ideology_group = monarchy }
				save_event_target_as = monarchy_character
			}
			random_character = {
				limit = { has_ideology_group = anarchism }
				save_event_target_as = anarchism_character
			}
		}
	}
	
	option = {
		name = NWgeneric.43.a
		add_political_power = -50
		add_stability = -0.05
		if = {
			limit = {
				check_variable = { num_owned_states > 2 }
				OR = {
					AND = {
						has_government = fascism
						OR = {
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = communism
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = trozkism
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = democratic
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = technocracy
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = neutrality
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = monarchy
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
						}
					}
				}
			}
			if = {
				limit = { has_government = fascism }
				set_country_flag = will_be_fascism
			}
			if = {
				limit = { has_government = communism }
				set_country_flag = will_be_communism
			}
			if = {
				limit = { has_government = trozkism }
				set_country_flag = will_be_trozkism
			}
			if = {
				limit = { has_government = democratic }
				set_country_flag = will_be_democratic
			}
			if = {
				limit = { has_government = technocracy }
				set_country_flag = will_be_technocracy
			}
			if = {
				limit = { has_government = neutrality }
				set_country_flag = will_be_neutrality
			}
			if = {
				limit = { has_government = monarchy }
				set_country_flag = will_be_monarchy
			}
			if = {
				limit = { focus_progress = { focus = nationalism_focus progress > 0 } }
				set_politics = {
					ruling_party = fascism
					elections_allowed = no
				}
				add_popularity = { ideology = fascism popularity = 0.35 }
			}
			if = {
				limit = { focus_progress = { focus = internationalism_focus progress > 0 } }
				set_politics = {
					ruling_party = communism
					elections_allowed = no
				}
				add_popularity = { ideology = communism popularity = 0.35 }
			}
			if = {
				limit = { focus_progress = { focus = revolution_focus progress > 0 } }
				set_politics = {
					ruling_party = trozkism
					elections_allowed = yes
				}
				add_popularity = { ideology = trozkism popularity = 0.35 }
			}
			if = {
				limit = { focus_progress = { focus = democratic_focus progress > 0 } }
				set_politics = {
					ruling_party = democratic
					elections_allowed = yes
				}
				add_popularity = { ideology = democratic popularity = 0.35 }
			}
			if = {
				limit = { focus_progress = { focus = technocracy_focus progress > 0 } }
				set_politics = {
					ruling_party = technocracy
					elections_allowed = yes
				}
				add_popularity = { ideology = technocracy popularity = 0.35 }
			}
			if = {
				limit = { focus_progress = { focus = neutrality_focus progress > 0 } }
				set_politics = {
					ruling_party = neutrality
					elections_allowed = no
				}
				add_popularity = { ideology = neutrality popularity = 0.35 }
			}
			if = {
				limit = { focus_progress = { focus = monarchism_focus progress > 0 } }
				set_politics = {
					ruling_party = monarchy
					elections_allowed = no
				}
				add_popularity = { ideology = monarchy popularity = 0.35 }
			}
			hidden_effect = {
				if = {
					limit = { has_global_flag = generic_all_set_anarchism_flag }
					start_civil_war = {
						ideology = anarchism
						size = 0.5
						states_filter = {
							owner = { original_tag = ROOT }
						}
						
						ROOT = {
							event_target:anarchism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
				}
				else = {
					start_civil_war = {
						ideology = anarchism
						size = 0.3
						states_filter = {
							owner = { original_tag = ROOT }
						}
						
						ROOT = {
							event_target:anarchism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
				}
				event_target:fascism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:communism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:trozkism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:democratic_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:technocracy_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:neutrality_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:monarchy_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				
				
				create_dynamic_country = {
					original_tag = ROOT
					copy_tag = ROOT
					add_ideas = generic_civil_war
					every_state = {
						limit = { is_core_of = ROOT }
						add_core_of = PREV
					}
					random_state = {
						limit = {
							is_core_of = ROOT
							is_owned_and_controlled_by = ROOT
						}
						PREV = { transfer_state = PREV }
					}
					set_rule = { 
						can_join_factions = no 
						can_create_factions = no
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_fascism } }
						set_politics = { ruling_party = fascism elections_allowed = no }
						add_popularity = { ideology = fascism popularity = 1 }
						ROOT = {
							event_target:fascism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_communism } }
						set_politics = { ruling_party = communism elections_allowed = no }
						add_popularity = { ideology = communism popularity = 1 }
						ROOT = {
							event_target:communism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_trozkism } }
						set_politics = { ruling_party = trozkism elections_allowed = yes }
						add_popularity = { ideology = trozkism popularity = 1 }
						ROOT = {
							event_target:trozkism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_democratic } }
						set_politics = { ruling_party = democratic elections_allowed = yes }
						add_popularity = { ideology = democratic popularity = 1 }
						ROOT = {
							event_target:democratic_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_technocracy } }
						set_politics = { ruling_party = technocracy elections_allowed = yes }
						add_popularity = { ideology = technocracy popularity = 1 }
						ROOT = {
							event_target:technocracy_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_neutrality } }
						set_politics = { ruling_party = neutrality elections_allowed = no }
						add_popularity = { ideology = neutrality popularity = 1 }
						ROOT = {
							event_target:neutrality_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_monarchy } }
						set_politics = { ruling_party = monarchy elections_allowed = no }
						add_popularity = { ideology = monarchy popularity = 1 }
						ROOT = {
							event_target:monarchy_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					ROOT = {
						transfer_units_fraction = {
							target = PREV
							size = 0.5
							stockpile_ratio = 0.5
							army_ratio = 0.5
							navy_ratio = 0.3
							air_ratio = 0.3
						}
						declare_war_on = {
							target = PREV
							type = civil_war
						}
						add_civil_war_target = PREV
					}
					random_other_country = {
						limit = {
							original_tag = ROOT
							has_government = anarchism
						}
						declare_war_on = {
							target = PREV
							type = civil_war
						}
						add_civil_war_target = PREV
						PREV = { add_civil_war_target = PREV }
					}
					add_civil_war_target = ROOT
				}
				clr_country_flag = will_be_fascism
				clr_country_flag = will_be_communism
				clr_country_flag = will_be_trozkism
				clr_country_flag = will_be_democratic
				clr_country_flag = will_be_technocracy
				clr_country_flag = will_be_neutrality
				clr_country_flag = will_be_monarchy
			}
			custom_effect_tooltip = NWgeneric_43_a_tt
		}
		else = {
			if = {
				limit = { has_global_flag = generic_all_set_anarchism_flag }
				start_civil_war = {
					ideology = anarchism
					size = 0.65
					states_filter = {
						owner = { original_tag = ROOT }
					}
				}
			}
			else = {
				start_civil_war = {
					ideology = anarchism
					size = 0.5
					states_filter = {
						owner = { original_tag = ROOT }
					}
				}
			}
		}
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = first_anarchist_spawn_war } }
				set_global_flag = first_anarchist_spawn_war
				news_event = { id = trworldnews.135 hours = 3 }
			}
			add_ideas = generic_civil_war
		}
	}
	
	option = {
		name = NWgeneric.43.b
		trigger = { is_ai = no }
		add_political_power = -50
		add_stability = -0.05
		if = {
			limit = {
				check_variable = { num_owned_states > 2 }
				OR = {
					AND = {
						has_government = fascism
						OR = {
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = communism
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = trozkism
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = democratic
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = technocracy
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = neutrality
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
							focus_progress = { focus = monarchism_focus progress > 0 }
						}
					}
					AND = {
						has_government = monarchy
						OR = {
							focus_progress = { focus = nationalism_focus progress > 0 }
							focus_progress = { focus = internationalism_focus progress > 0 }
							focus_progress = { focus = revolution_focus progress > 0 }
							focus_progress = { focus = democratic_focus progress > 0 }
							focus_progress = { focus = neutrality_focus progress > 0 }
							focus_progress = { focus = technocracy_focus progress > 0 }
						}
					}
				}
			}
			hidden_effect = {
				if = {
					limit = { has_government = fascism }
					set_country_flag = will_be_fascism
				}
				if = {
					limit = { has_government = communism }
					set_country_flag = will_be_communism
				}
				if = {
					limit = { has_government = trozkism }
					set_country_flag = will_be_trozkism
				}
				if = {
					limit = { has_government = democratic }
					set_country_flag = will_be_democratic
				}
				if = {
					limit = { has_government = technocracy }
					set_country_flag = will_be_technocracy
				}
				if = {
					limit = { has_government = neutrality }
					set_country_flag = will_be_neutrality
				}
				if = {
					limit = { has_government = monarchy }
					set_country_flag = will_be_monarchy
				}
				if = {
					limit = { focus_progress = { focus = nationalism_focus progress > 0 } }
					set_politics = {
						ruling_party = fascism
						elections_allowed = no
					}
					add_popularity = { ideology = fascism popularity = 0.35 }
				}
				if = {
					limit = { focus_progress = { focus = internationalism_focus progress > 0 } }
					set_politics = {
						ruling_party = communism
						elections_allowed = no
					}
					add_popularity = { ideology = communism popularity = 0.35 }
				}
				if = {
					limit = { focus_progress = { focus = revolution_focus progress > 0 } }
					set_politics = {
						ruling_party = trozkism
						elections_allowed = yes
					}
					add_popularity = { ideology = trozkism popularity = 0.35 }
				}
				if = {
					limit = { focus_progress = { focus = democratic_focus progress > 0 } }
					set_politics = {
						ruling_party = democratic
						elections_allowed = yes
					}
					add_popularity = { ideology = democratic popularity = 0.35 }
				}
				if = {
					limit = { focus_progress = { focus = technocracy_focus progress > 0 } }
					set_politics = {
						ruling_party = technocracy
						elections_allowed = yes
					}
					add_popularity = { ideology = technocracy popularity = 0.35 }
				}
				if = {
					limit = { focus_progress = { focus = neutrality_focus progress > 0 } }
					set_politics = {
						ruling_party = neutrality
						elections_allowed = no
					}
					add_popularity = { ideology = neutrality popularity = 0.35 }
				}
				if = {
					limit = { focus_progress = { focus = monarchism_focus progress > 0 } }
					set_politics = {
						ruling_party = monarchy
						elections_allowed = no
					}
					add_popularity = { ideology = monarchy popularity = 0.35 }
				}
				if = {
					limit = { has_global_flag = generic_all_set_anarchism_flag }
					start_civil_war = {
						ruling_party = anarchism
						ideology = ROOT
						size = 0.1
						states_filter = {
							owner = { original_tag = ROOT }
						}
					}
				}
				else = {
					start_civil_war = {
						ruling_party = anarchism
						ideology = ROOT
						size = 0.3
						states_filter = {
							owner = { original_tag = ROOT }
						}
					}
				}
				add_popularity = { ideology = anarchism popularity = 0.4 }
				
				event_target:fascism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:communism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:trozkism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:democratic_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:technocracy_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:neutrality_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:monarchy_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				event_target:anarchism_character = {
					set_nationality = ROOT
					promote_character = yes
				}
				
				random_other_country = {
					limit = {
						original_tag = ROOT
					}
					if = {
						limit = { has_government = fascism }
						ROOT = {
							event_target:fascism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					else_if = {
						limit = { has_government = communism }
						ROOT = {
							event_target:communism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					else_if = {
						limit = { has_government = trozkism }
						ROOT = {
							event_target:trozkism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					else_if = {
						limit = { has_government = democratic }
						ROOT = {
							event_target:democratic_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					else_if = {
						limit = { has_government = technocracy }
						ROOT = {
							event_target:technocracy_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					else_if = {
						limit = { has_government = neutrality }
						ROOT = {
							event_target:neutrality_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					else_if = {
						limit = { has_government = monarchy }
						ROOT = {
							event_target:monarchy_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
				}
				
				create_dynamic_country = {
					original_tag = ROOT
					copy_tag = ROOT
					every_state = {
						limit = { is_core_of = ROOT }
						add_core_of = PREV
					}
					random_state = {
						limit = {
							is_core_of = ROOT
							is_owned_and_controlled_by = ROOT
						}
						PREV = { transfer_state = PREV }
					}
					set_rule = { 
						can_join_factions = no 
						can_create_factions = no
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_fascism } }
						set_politics = { ruling_party = fascism elections_allowed = no }
						add_popularity = { ideology = fascism popularity = 1 }
						ROOT = {
							event_target:fascism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_communism } }
						set_politics = { ruling_party = communism elections_allowed = no }
						add_popularity = { ideology = communism popularity = 1 }
						ROOT = {
							event_target:communism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_trozkism } }
						set_politics = { ruling_party = trozkism elections_allowed = yes }
						add_popularity = { ideology = trozkism popularity = 1 }
						ROOT = {
							event_target:trozkism_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_democratic } }
						set_politics = { ruling_party = democratic elections_allowed = yes }
						add_popularity = { ideology = democratic popularity = 1 }
						ROOT = {
							event_target:democratic_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_technocracy } }
						set_politics = { ruling_party = technocracy elections_allowed = yes }
						add_popularity = { ideology = technocracy popularity = 1 }
						ROOT = {
							event_target:technocracy_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_neutrality } }
						set_politics = { ruling_party = neutrality elections_allowed = no }
						add_popularity = { ideology = neutrality popularity = 1 }
						ROOT = {
							event_target:neutrality_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					if = {
						limit = { ROOT = { has_country_flag = will_be_monarchy } }
						set_politics = { ruling_party = monarchy elections_allowed = no }
						add_popularity = { ideology = monarchy popularity = 1 }
						ROOT = {
							event_target:monarchy_character = {
								log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): ПЕРСОНАЖ [This.GetName] УБЕЖАЛ В [Prev.Prev.GetName] ([Prev.Prev.GetTag])"
								set_nationality = PREV.PREV
								promote_character = yes
							}
						}
					}
					ROOT = {
						transfer_units_fraction = {
							target = PREV
							size = 0.5
							stockpile_ratio = 0.5
							army_ratio = 0.5
							navy_ratio = 0.3
							air_ratio = 0.3
						}
						declare_war_on = {
							target = PREV
							type = civil_war
						}
						add_civil_war_target = PREV
					}
					random_other_country = {
						limit = {
							original_tag = ROOT
							NOT = { tag = ROOT }
						}
						declare_war_on = {
							target = PREV
							type = civil_war
						}
						add_civil_war_target = PREV
						PREV = { add_civil_war_target = PREV }
					}
					add_civil_war_target = ROOT
					if = {
						limit = { NOT = { has_global_flag = first_anarchist_spawn_war } }
						set_global_flag = first_anarchist_spawn_war
						news_event = { id = trworldnews.135 hours = 3 }
					}
				}
				clr_country_flag = will_be_fascism
				clr_country_flag = will_be_communism
				clr_country_flag = will_be_trozkism
				clr_country_flag = will_be_democratic
				clr_country_flag = will_be_technocracy
				clr_country_flag = will_be_neutrality
				clr_country_flag = will_be_monarchy
			}
			custom_effect_tooltip = NWgeneric_43_b_tt
		}
		else = {
			if = {
				limit = { has_global_flag = generic_all_set_anarchism_flag }
				start_civil_war = {
					ruling_party = anarchism
					ideology = ROOT
					size = 0.35
					states_filter = {
						owner = { original_tag = ROOT }
					}
				}
			}
			else = {
				start_civil_war = {
					ruling_party = anarchism
					ideology = ROOT
					size = 0.5
					states_filter = {
						owner = { original_tag = ROOT }
					}
				}
			}
			add_popularity = { ideology = anarchism popularity = 0.4 }
			hidden_effect = {
				if = {
					limit = { NOT = { has_global_flag = first_anarchist_spawn_war } }
					set_global_flag = first_anarchist_spawn_war
					random_other_country = {
						limit = {
							original_tag = ROOT
							NOT = { has_government = anarchism }
						}
						news_event = { id = trworldnews.135 hours = 3 }
					}
				}
			}
		}
		hidden_effect = {
			add_ideas = generic_civil_war
		}
	}
}




### АНАРХОГЕНЕРИК ###

#Революция свершилась
country_event = {
	id = NWgeneric.100
	title = NWgeneric.100.t
	desc = NWgeneric.100.desc
	picture = GFX_report_event_american_hunger_march
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.100" }
	
	option = {
		name = NWgeneric.100.a
		activate_mission = generic_development_concept_anarchism
	}
}

#Какая мораль должна господствовать в обществе
country_event = {
	id = NWgeneric.101
	title = NWgeneric.101.t
	desc = NWgeneric.101.desc
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.101" }
	immediate = {
		hidden_effect = {
			set_country_flag = generic_anarchism_flag_1
			if = {
				limit = {
					has_country_flag = generic_anarchism_flag_1
					has_country_flag = generic_anarchism_flag_2
					has_country_flag = generic_anarchism_flag_3
					has_country_flag = generic_anarchism_flag_4
					has_country_flag = generic_anarchism_flag_5
				}
				country_event = { id = NWgeneric.106 hours = 3 }
			}
			set_temp_variable = { king_t = party_popularity@monarchy }
			set_temp_variable = { fash_t = party_popularity@fascism }
			set_temp_variable = { tech_t = party_popularity@technocracy }
			set_temp_variable = { fash_mona = king_t }
			add_to_temp_variable = { fash_mona = fash_t }
		}
	}
	
	option = {
		name = NWgeneric.101.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_collectivism = 1 }
	}
	
	option = {
		name = NWgeneric.101.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_individualism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
	
	option = {
		name = NWgeneric.101.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			check_variable = { var = fash_mona value = 0.2 compare = greater_than_or_equals }
		}
		add_to_variable = { anarcho_monarchism = 1 }
		add_to_variable = { anarcho_nationalism = 1 }
	}
	
	option = {
		name = NWgeneric.101.d
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			OR = {
				amount_research_slots > 3
				AND = {
					amount_research_slots > 2
					amount_research_slots < 4
					num_of_factories > 14
				}
				check_variable = { var = tech_t value = 0.2 compare = greater_than_or_equals }
			}
		}
		add_to_variable = { anarcho_transgumanism = 1 }
	}
}

#Каков должен быть статус частной собственности
country_event = {
	id = NWgeneric.102
	title = NWgeneric.102.t
	desc = NWgeneric.102.desc
	picture = GFX_report_event_french_resistance_02
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.102" }
	immediate = {
		hidden_effect = {
			set_country_flag = generic_anarchism_flag_2
			if = {
				limit = {
					has_country_flag = generic_anarchism_flag_1
					has_country_flag = generic_anarchism_flag_2
					has_country_flag = generic_anarchism_flag_3
					has_country_flag = generic_anarchism_flag_4
					has_country_flag = generic_anarchism_flag_5
				}
				country_event = { id = NWgeneric.106 hours = 3 }
			}
			set_temp_variable = { king_t = party_popularity@monarchy }
			set_temp_variable = { fash_t = party_popularity@fascism }
			set_temp_variable = { tech_t = party_popularity@technocracy }
			set_temp_variable = { fash_tech = fash_t }
			add_to_temp_variable = { fash_tech = tech_t }
		}
	}
	
	option = {
		name = NWgeneric.102.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_collectivism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
	
	option = {
		name = NWgeneric.102.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_individualism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
	
	option = {
		name = NWgeneric.102.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			OR = {
				check_variable = { var = king_t value = 0.2 compare = greater_than_or_equals }
				AND = {
					check_variable = { var = king_t value = 0.1 compare = greater_than_or_equals }
					has_political_power > 99.9
				}
			}
		}
		add_to_variable = { anarcho_monarchism = 1 }
	}
	
	option = {
		name = NWgeneric.102.d
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			OR = {
				check_variable = { var = fash_tech value = 0.2 compare = greater_than_or_equals }
				AND = {
					check_variable = { var = fash_tech value = 0.1 compare = greater_than_or_equals }
					amount_research_slots > 3
				}
			}
		}
		add_to_variable = { anarcho_nationalism = 1 }
		add_to_variable = { anarcho_transgumanism = 1 }
	}
}

#Какое право должно господствовать в обществе
country_event = {
	id = NWgeneric.103
	title = NWgeneric.103.t
	desc = NWgeneric.103.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.103" }
	immediate = {
		hidden_effect = {
			set_country_flag = generic_anarchism_flag_3
			if = {
				limit = {
					has_country_flag = generic_anarchism_flag_1
					has_country_flag = generic_anarchism_flag_2
					has_country_flag = generic_anarchism_flag_3
					has_country_flag = generic_anarchism_flag_4
					has_country_flag = generic_anarchism_flag_5
				}
				country_event = { id = NWgeneric.106 hours = 3 }
			}
		}
	}
	
	option = {
		name = NWgeneric.103.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_individualism = 1 }
	}
	
	option = {
		name = NWgeneric.103.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_collectivism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
	
	option = {
		name = NWgeneric.103.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
		}
		add_to_variable = { anarcho_monarchism = 1 }
	}
	
	option = {
		name = NWgeneric.103.d
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
		}
		add_to_variable = { anarcho_nationalism = 1 }
		add_to_variable = { anarcho_transgumanism = 1 }
	}
}

#Свободна ли личность в новом обществе
country_event = {
	id = NWgeneric.104
	title = NWgeneric.104.t
	desc = NWgeneric.104.desc
	picture = GFX_report_event_communist_leader
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.104" }
	immediate = {
		hidden_effect = {
			set_country_flag = generic_anarchism_flag_4
			if = {
				limit = {
					has_country_flag = generic_anarchism_flag_1
					has_country_flag = generic_anarchism_flag_2
					has_country_flag = generic_anarchism_flag_3
					has_country_flag = generic_anarchism_flag_4
					has_country_flag = generic_anarchism_flag_5
				}
				country_event = { id = NWgeneric.106 hours = 3 }
			}
		}
	}
	
	option = {
		name = NWgeneric.104.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_individualism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
	
	option = {
		name = NWgeneric.104.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_collectivism = 1 }
	}
	
	option = {
		name = NWgeneric.104.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
		}
		add_to_variable = { anarcho_monarchism = 1 }
		add_to_variable = { anarcho_nationalism = 1 }
		add_to_variable = { anarcho_transgumanism = 1 }
	}
}

#Какова судьба общественных организаций
country_event = {
	id = NWgeneric.105
	title = NWgeneric.105.t
	desc = NWgeneric.105.desc
	picture = GFX_report_event_generic_strike
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.105" }
	immediate = {
		hidden_effect = {
			set_country_flag = generic_anarchism_flag_5
			if = {
				limit = {
					has_country_flag = generic_anarchism_flag_1
					has_country_flag = generic_anarchism_flag_2
					has_country_flag = generic_anarchism_flag_3
					has_country_flag = generic_anarchism_flag_4
					has_country_flag = generic_anarchism_flag_5
				}
				country_event = { id = NWgeneric.106 hours = 3 }
			}
		}
	}
	
	option = {
		name = NWgeneric.105.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_individualism = 1 }
	}
	
	option = {
		name = NWgeneric.105.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_collectivism = 1 }
	}
	
	option = {
		name = NWgeneric.105.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
		}
		add_to_variable = { anarcho_monarchism = 1 }
		add_to_variable = { anarcho_nationalism = 1 }
	}
	
	option = {
		name = NWgeneric.105.d
		ai_chance = {
			factor = 50
		}
		#add_to_variable = { anarcho_transgumanism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
}

#Способ распространения идеи о новом обществе
country_event = {
	id = NWgeneric.106
	title = NWgeneric.106.t
	desc = NWgeneric.106.desc
	picture = GFX_report_event_worker_protests
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.106" }
	
	option = {
		name = NWgeneric.106.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_individualism = 1 }
	}
	
	option = {
		name = NWgeneric.106.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { anarcho_collectivism = 1 }
		#add_to_variable = { anarcho_nationalism = 1 }
		#add_to_variable = { anarcho_monarchism = 1 }
	}
	
	option = {
		name = NWgeneric.106.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
		}
		add_to_variable = { anarcho_monarchism = 1 }
	}
	
	#option = {
	#	name = NWgeneric.106.d
	#	ai_chance = {
	#		factor = 50
	#	}
	#	trigger = {
	#		always = no
	#	}
	#	add_to_variable = { anarcho_nationalism = 1 }
	#}
	
	option = {
		name = NWgeneric.106.e
		ai_chance = {
			factor = 50
		}
		#add_to_variable = { anarcho_transgumanism = 1 }
		#add_to_variable = { anarcho_nationalism = 1 }
		add_to_variable = { anarchism_group = 1 }
	}
}

#And the winner is...
country_event = {
	id = NWgeneric.107
	title = NWgeneric.107.t
	desc = {
		text = NWgeneric.107.desc1
		trigger = {
			check_variable = { var = anarcho_collectivism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarcho_nationalism compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarcho_transgumanism compare = greater_than }
		}
	}
	desc = {
		text = NWgeneric.107.desc2
		trigger = {
			check_variable = { var = anarcho_individualism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarcho_nationalism compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarcho_transgumanism compare = greater_than }
		}
	}
	desc = {
		text = NWgeneric.107.desc3
		trigger = {
			OR = {
				AND = {
					check_variable = { var = anarchism_group value = anarcho_collectivism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_individualism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_monarchism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_nationalism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_transgumanism compare = greater_than_or_equals }
				}
				check_variable = { anarcho_collectivism = anarcho_individualism }
			}
		}
	}
	desc = {
		text = NWgeneric.107.desc4
		trigger = {
			check_variable = { var = anarcho_monarchism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarcho_nationalism compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarcho_transgumanism compare = greater_than }
		}
	}
	desc = {
		text = NWgeneric.107.desc5
		trigger = {
			check_variable = { var = anarcho_nationalism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarcho_transgumanism compare = greater_than }
		}
	}
	desc = {
		text = NWgeneric.107.desc6
		trigger = {
			check_variable = { var = anarcho_transgumanism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarcho_nationalism compare = greater_than }
		}
	}
	picture = GFX_report_event_generic_rally
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.107" }
	immediate = { set_country_flag = NWgeneric107_flag }

	option = {
		name = NWgeneric.107.a
		ai_chance = {
			factor = 50
		}
		trigger = {
			check_variable = { var = anarcho_collectivism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarcho_nationalism compare = greater_than }
			check_variable = { var = anarcho_collectivism value = anarcho_transgumanism compare = greater_than }
		}
		set_country_flag = anarchism_left_flag
		effect_tooltip = { unlock_national_focus = social_anarchism_focus }
		if = {
			limit = {
				NOT = {
					has_idea = peoples_squads
					has_idea = peoples_police
					has_idea = peoples_militia
					has_active_mission = generic_anarchism_manpower_decision
				}
			}
			activate_mission = generic_anarchism_manpower_decision
		}
	}
	option = {
		name = NWgeneric.107.b
		ai_chance = {
			factor = 50
		}
		trigger = {
			check_variable = { var = anarcho_individualism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarcho_nationalism compare = greater_than }
			check_variable = { var = anarcho_individualism value = anarcho_transgumanism compare = greater_than }
		}
		set_country_flag = anarchism_right_flag
		effect_tooltip = { unlock_national_focus = anarcho_individualism_focus }
		if = {
			limit = {
				NOT = {
					has_idea = mercenary_soldiers
					has_idea = monopolized_private_armies
					has_idea = thriving_private_army_market
					has_active_mission = generic_anarchism_manpower_decision
				}
			}
			activate_mission = generic_anarchism_manpower_decision
		}
	}
	option = {
		name = NWgeneric.107.c
		ai_chance = {
			factor = 50
		}
		trigger = {
			OR = {
				AND = {
					check_variable = { var = anarchism_group value = anarcho_collectivism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_individualism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_monarchism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_nationalism compare = greater_than_or_equals }
					check_variable = { var = anarchism_group value = anarcho_transgumanism compare = greater_than_or_equals }
				}
				check_variable = { anarcho_collectivism = anarcho_individualism }
			}
		}
		set_country_flag = anarchism_neutrality_flag
		effect_tooltip = { unlock_national_focus = anarchism_without_adjectives_focus }
		if = {
			limit = {
				NOT = {
					has_idea = peoples_squads
					has_idea = peoples_police
					has_idea = peoples_militia
					has_idea = mercenary_soldiers
					has_idea = monopolized_private_armies
					has_idea = thriving_private_army_market
					has_active_mission = generic_anarchism_manpower_decision
				}
			}
			activate_mission = generic_anarchism_manpower_decision
		}
	}
	option = {
		name = NWgeneric.107.d
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			check_variable = { var = anarcho_monarchism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarcho_nationalism compare = greater_than }
			check_variable = { var = anarcho_monarchism value = anarcho_transgumanism compare = greater_than }
		}
		set_country_leader_ideology = anarcho_monarchism
		set_country_flag = anarchism_monarchism_flag
	}
	option = {
		name = NWgeneric.107.e
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			check_variable = { var = anarcho_nationalism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_nationalism value = anarcho_transgumanism compare = greater_than }
		}
		set_country_leader_ideology = anarcho_nationalism
		set_country_flag = anarchism_nationalism_flag
	}
	option = {
		name = NWgeneric.107.f
		ai_chance = {
			factor = 50
		}
		trigger = {
			always = no
			check_variable = { var = anarcho_transgumanism value = anarcho_collectivism compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarcho_individualism compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarchism_group compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarcho_monarchism compare = greater_than }
			check_variable = { var = anarcho_transgumanism value = anarcho_nationalism compare = greater_than }
		}
		set_country_leader_ideology = anarcho_transgumanism
		set_country_flag = anarchism_transgumanism_flag
	}
}

#Народ сам сформировал концепцию
country_event = {
	id = NWgeneric.108
	title = NWgeneric.108.t
	desc = NWgeneric.108.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.108" }
	immediate = {
		hidden_effect = {
			set_country_flag = NWgeneric107_flag
			unlock_national_focus = moral_question_focus
			unlock_national_focus = question_of_private_property_focus
			unlock_national_focus = question_of_law_focus
			unlock_national_focus = question_of_personality_focus
			unlock_national_focus = question_of_public_organizations_focus
		}
	}
	
	option = {
		name = NWgeneric.108.a
		random_list = {
			50 = {
				set_country_flag = anarchism_left_flag
				effect_tooltip = { unlock_national_focus = social_anarchism_focus }
				if = {
					limit = {
						NOT = {
							has_idea = peoples_squads
							has_idea = peoples_police
							has_idea = peoples_militia
							has_active_mission = generic_anarchism_manpower_decision
						}
					}
					activate_mission = generic_anarchism_manpower_decision
				}
			}
			50 = {
				set_country_flag = anarchism_right_flag
				effect_tooltip = { unlock_national_focus = anarcho_individualism_focus }
				if = {
					limit = {
						NOT = {
							has_idea = mercenary_soldiers
							has_idea = monopolized_private_armies
							has_idea = thriving_private_army_market
							has_active_mission = generic_anarchism_manpower_decision
						}
					}
					activate_mission = generic_anarchism_manpower_decision
				}
			}
			50 = {
				set_country_flag = anarchism_neutrality_flag
				effect_tooltip = { unlock_national_focus = anarchism_without_adjectives_focus }
				if = {
					limit = {
						NOT = {
							has_idea = peoples_squads
							has_idea = peoples_police
							has_idea = peoples_militia
							has_idea = mercenary_soldiers
							has_idea = monopolized_private_armies
							has_idea = thriving_private_army_market
							has_active_mission = generic_anarchism_manpower_decision
						}
					}
					activate_mission = generic_anarchism_manpower_decision
				}
			}
			#50 = {
			#	set_country_leader_ideology = anarcho_monarchism
			#	set_country_flag = anarchism_monarchism_flag
			#}
			#50 = {
			#	set_country_leader_ideology = anarcho_nationalism
			#	set_country_flag = anarchism_nationalism_flag
			#}
			#50 = {
			#	set_country_leader_ideology = anarcho_transgumanism
			#	set_country_flag = anarchism_transgumanism_flag
			#}
		}
	}
}

#СОБЫТИЯ ТИПОГРАФИИ
#Наём специалистов для типографии // пульсар
country_event = {
	id = NWgeneric.109
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.109" }
	
	option = {
		name = NWgeneric.109.a
		if = {
			limit = { has_government = anarchism }
			country_event = { id = NWgeneric.110 }
		}
	}
}

#Наём специалистов для типографии
country_event = {
	id = NWgeneric.110
	title = NWgeneric.110.t
	desc = NWgeneric.110.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.110" }
	
	option = {
		name = NWgeneric.110.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { youth_solution_var = 1 }
		set_country_flag = NWgeneric_110_a
		custom_effect_tooltip = NWgeneric_110_a_tt
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = { add_war_support = 0.05 }
		
		add_to_variable = { add_war_support_dec_var = 0.05 }
	}
	
	option = {
		name = NWgeneric.110.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { middle_solution_var = 1 }
		set_country_flag = NWgeneric_110_b
		custom_effect_tooltip = NWgeneric_110_b_tt
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = { add_to_variable = { anarchism_unity_var = 3 tooltip = anarchism_unity_add_effect } }
		
		add_to_variable = { anarchism_unity_add_dec_var = 3 }
	}
	
	option = {
		name = NWgeneric.110.c
		ai_chance = {
			factor = 50
		}
		add_to_variable = { ultimatum_solution_var = 1 }
		set_country_flag = NWgeneric_110_c
		set_temp_variable = { administrative_efficiency_temp_var = -0.25 }
		add_to_variable = { administrative_efficiency_var = administrative_efficiency_temp_var }
		clamp_variable = { var = administrative_efficiency_var min = 0 max = 2 }
		set_variable = { administrative_efficiency_var_total = administrative_efficiency_var }
		multiply_variable = { administrative_efficiency_var_total = 50 }
		custom_effect_tooltip = administrative_efficiency_effect
		
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = {
			add_to_variable = { anarchism_unity_var = 2 tooltip = anarchism_unity_add_effect }
			add_war_support = 0.03
		}
		
		add_to_variable = { anarchism_unity_add_dec_var = 2 }
		add_to_variable = { add_war_support_dec_var = 0.03 }
	}
}

#Определение фокусной группы
country_event = {
	id = NWgeneric.111
	title = NWgeneric.111.t
	desc = NWgeneric.111.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.111" }
	
	option = {
		name = NWgeneric.111.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { ultimatum_solution_var = 1 }
		set_country_flag = NWgeneric_111_a
		set_temp_variable = { administrative_efficiency_temp_var = -0.5 }
		add_to_variable = { administrative_efficiency_var = administrative_efficiency_temp_var }
		clamp_variable = { var = administrative_efficiency_var min = 0 max = 2 }
		set_variable = { administrative_efficiency_var_total = administrative_efficiency_var }
		multiply_variable = { administrative_efficiency_var_total = 50 }
		custom_effect_tooltip = administrative_efficiency_effect
		
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = {
			add_to_variable = { anarchism_unity_var = 3 tooltip = anarchism_unity_add_effect }
			add_war_support = 0.06
		}
		
		add_to_variable = { anarchism_unity_add_dec_var = 3 }
		add_to_variable = { add_war_support_dec_var = 0.06 }
	}
	
	option = {
		name = NWgeneric.111.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { middle_solution_var = 1 }
		set_country_flag = NWgeneric_111_b
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = { add_to_variable = { anarchism_unity_var = 4 tooltip = anarchism_unity_add_effect } }
		
		add_to_variable = { anarchism_unity_add_dec_var = 4 }
	}
	
	option = {
		name = NWgeneric.111.c
		ai_chance = {
			factor = 50
		}
		add_to_variable = { youth_solution_var = 1 }
		set_country_flag = NWgeneric_111_c
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = { add_war_support = 0.08 }
		
		add_to_variable = { add_war_support_dec_var = 0.08 }
	}
}

#Определение основного содержания периодической литературы
country_event = {
	id = NWgeneric.112
	title = NWgeneric.112.t
	desc = NWgeneric.112.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.112" }
	
	option = {
		name = NWgeneric.112.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { youth_solution_var = 1 }
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = { add_war_support = 0.1 }
		
		add_to_variable = { add_war_support_dec_var = 0.1 }
	}
	
	option = {
		name = NWgeneric.112.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { middle_solution_var = 1 }
		set_country_flag = NWgeneric_112_b
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = { add_to_variable = { anarchism_unity_var = 5 tooltip = anarchism_unity_add_effect } }
		
		add_to_variable = { anarchism_unity_add_dec_var = 5 }
	}
	
	option = {
		name = NWgeneric.112.c
		ai_chance = {
			factor = 50
		}
		add_to_variable = { ultimatum_solution_var = 1 }
		set_country_flag = NWgeneric_112_c
		set_temp_variable = { administrative_efficiency_temp_var = -0.3 }
		add_to_variable = { administrative_efficiency_var = administrative_efficiency_temp_var }
		clamp_variable = { var = administrative_efficiency_var min = 0 max = 2 }
		set_variable = { administrative_efficiency_var_total = administrative_efficiency_var }
		multiply_variable = { administrative_efficiency_var_total = 50 }
		custom_effect_tooltip = administrative_efficiency_effect
		
		custom_effect_tooltip = changing_intended_effect_tt
		effect_tooltip = {
			add_to_variable = { anarchism_unity_var = 3 tooltip = anarchism_unity_add_effect }
			add_war_support = 0.05
		}
		
		add_to_variable = { anarchism_unity_add_dec_var = 3 }
		add_to_variable = { add_war_support_dec_var = 0.05 }
	}
}

#Блистательный успех, Должный успех, Посредственная работа // пульсар
country_event = {
	id = NWgeneric.113
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.113" }
	
	option = {
		name = NWgeneric.113.a
		if = {
			limit = {
				has_government = anarchism
				has_country_flag = generic_attracting_public_attention_to_our_company_flag
			}
			if = {
				limit = {
					OR = {
						OR = {
							check_variable = { youth_solution_var = 3 }
							check_variable = { middle_solution_var = 3 }
							check_variable = { ultimatum_solution_var = 3 }
						}
						AND = {
							OR = {
								check_variable = { youth_solution_var = 2 }
								check_variable = { middle_solution_var = 2 }
							}
							check_variable = { ultimatum_solution_var = 1 }
						}
					}
				}
				country_event = { id = NWgeneric.114 } #Блистательный успех
			}
			else_if = {
				limit = {
					check_variable = { youth_solution_var = 1 }
					check_variable = { middle_solution_var = 1 }
					check_variable = { ultimatum_solution_var = 1 }
				}
				country_event = { id = NWgeneric.115 } #Посредственная работа
			}
			else = {
				country_event = { id = NWgeneric.116 } #Должный успех
			}
		}
	}
}

#Блистательный успех
country_event = {
	id = NWgeneric.114
	title = NWgeneric.114.t
	desc = NWgeneric.114.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.114" }
	
	option = {
		name = NWgeneric.114.a
		set_temp_variable = { n_multiplier_temp = 2 }
		add_to_variable = { n_multiplier = n_multiplier_temp }
		custom_effect_tooltip = n_multiplier_tt
	}
}

#Посредственная работа
country_event = {
	id = NWgeneric.115
	title = NWgeneric.115.t
	desc = NWgeneric.115.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.115" }
	
	option = {
		name = NWgeneric.115.a
		set_temp_variable = { n_multiplier_temp = 0.1 }
		add_to_variable = { n_multiplier = n_multiplier_temp }
		custom_effect_tooltip = n_multiplier_tt
	}
}

#Должный успех
country_event = {
	id = NWgeneric.116
	title = NWgeneric.116.t
	desc = NWgeneric.116.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.116" }
	
	option = {
		name = NWgeneric.116.a
		set_temp_variable = { n_multiplier_temp = 1 }
		add_to_variable = { n_multiplier = n_multiplier_temp }
		custom_effect_tooltip = n_multiplier_tt
	}
}

#АНАРХО_ЭКОНОМИКА
country_event = {
	id = NWgeneric.117
	hidden = yes
	
	trigger = {
		OR = {
			has_idea = accelerated_industrialization
			has_idea = bet_on_open_factories
			has_idea = bet_on_military_industry
			has_idea = bet_on_foundation_of_settlements
		}
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.117" }
	immediate = {
		hidden_effect = {
			if = {
				limit = { has_idea = accelerated_industrialization }
				random_owned_controlled_state = {
					limit = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = no
						}
					}
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
					log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): accelerated_industrialization +1 industrial_complex в [This.GetName] / ID [This.GetID]"
				}
				random_owned_controlled_state = {
					limit = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = no
						}
					}
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
					log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): accelerated_industrialization +1 industrial_complex в [This.GetName] / ID [This.GetID]"
				}
			}
			if = {
				limit = { has_idea = bet_on_open_factories }
				random_list = {
					50 = {
						random_owned_controlled_state = {
							limit = {
								free_building_slots = {
									building = industrial_complex
									size > 0
									include_locked = no
								}
							}
							add_building_construction = {
								type = industrial_complex
								level = 1
								instant_build = yes
							}
							log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_open_factories +1 industrial_complex в [This.GetName] / ID [This.GetID]"
						}
					}
					50 = {
						random_owned_controlled_state = {
							limit = {
								free_building_slots = {
									building = arms_factory
									size > 0
									include_locked = no
								}
							}
							add_building_construction = {
								type = arms_factory
								level = 1
								instant_build = yes
							}
							log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_open_factories +1 arms_factory в [This.GetName] / ID [This.GetID]"
						}
					}
				}
			}
			if = {
				limit = { has_idea = bet_on_military_industry }
				random_owned_controlled_state = {
					limit = {
						free_building_slots = {
							building = arms_factory
							size > 0
							include_locked = no
						}
					}
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}
					log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_military_industry +1 arms_factory в [This.GetName] / ID [This.GetID]"
				}
			}
			if = {
				limit = { has_idea = bet_on_foundation_of_settlements }
				random_owned_controlled_state = {
					limit = {
						free_building_slots = {
							building = arms_factory
							size > 0
							include_locked = yes
						}
					}
					add_extra_state_shared_building_slots = 1
					log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_foundation_of_settlements +1 add_extra_state_shared_building_slots в [This.GetName] / ID [This.GetID]"
				}
			}
		}
	}
	mean_time_to_happen = { days = 90 }
}

country_event = {
	id = NWgeneric.118
	hidden = yes
	
	trigger = {
		has_idea = bet_on_development_of_urban_infrastructure
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.118" }
	immediate = {
		hidden_effect = {
			if = {
				limit = { has_idea = bet_on_development_of_urban_infrastructure }
				random_list = {
					50 = {
						random_owned_controlled_state = {
							limit = {
								free_building_slots = {
									building = industrial_complex
									size > 0
									include_locked = no
								}
							}
							add_building_construction = {
								type = industrial_complex
								level = 1
								instant_build = yes
							}
							log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_development_of_urban_infrastructure +1 industrial_complex в [This.GetName] / ID [This.GetID]"
						}
					}
					50 = {
						random_owned_controlled_state = {
							limit = {
								free_building_slots = {
									building = arms_factory
									size > 0
									include_locked = yes
								}
							}
							add_extra_state_shared_building_slots = 1
							log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_development_of_urban_infrastructure +1 add_extra_state_shared_building_slots в [This.GetName] / ID [This.GetID]"
						}
					}
					50 = {
						random_owned_controlled_state = {
							limit = {
								free_building_slots = {
									building = infrastructure
									size > 0
								}
							}
							add_building_construction = {
								type = infrastructure
								level = 1
								instant_build = yes
							}
							log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_development_of_urban_infrastructure +1 infrastructure в [This.GetName] / ID [This.GetID]"
						}
					}
				}
			}
		}
	}
	mean_time_to_happen = { days = 30 }
}

country_event = {
	id = NWgeneric.119
	hidden = yes
	
	trigger = {
		has_idea = bet_on_development_of_agriculture
	}
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.119" }
	immediate = {
		hidden_effect = {
			if = {
				limit = { has_idea = bet_on_development_of_agriculture }
				random_owned_controlled_state = {
					limit = {
						free_building_slots = {
							building = arms_factory
							size > 0
							include_locked = yes
						}
					}
					add_extra_state_shared_building_slots = 1
					log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): bet_on_development_of_agriculture +1 add_extra_state_shared_building_slots в [This.GetName] / ID [This.GetID]"
				}
			}
		}
	}
	mean_time_to_happen = { days = 60 }
}

#Вопрос сохранения института государства
country_event = {
	id = NWgeneric.120
	title = NWgeneric.120.t
	desc = NWgeneric.120.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.120" }
	
	option = {
		name = NWgeneric.120.a
	}
}

#Первые дебаты
country_event = {
	id = NWgeneric.121
	title = NWgeneric.121.t
	desc = NWgeneric.121.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.121" }
	
	option = {
		name = NWgeneric.121.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { minarchism_score_var = 1 }
		custom_effect_tooltip = anarcho_minarchism_score_tt
	}
	
	option = {
		name = NWgeneric.121.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { libertarian_score_var = 1 }
		custom_effect_tooltip = ancap_score_tt
	}
}

#Вторые дебаты
country_event = {
	id = NWgeneric.122
	title = NWgeneric.122.t
	desc = NWgeneric.122.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.122" }
	
	option = {
		name = NWgeneric.122.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { minarchism_score_var = 1 }
		custom_effect_tooltip = anarcho_minarchism_score_tt
	}
	
	option = {
		name = NWgeneric.122.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { libertarian_score_var = 1 }
		custom_effect_tooltip = ancap_score_tt
	}
}

#Третьи дебаты
country_event = {
	id = NWgeneric.123
	title = NWgeneric.123.t
	desc = NWgeneric.123.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.123" }
	
	option = {
		name = NWgeneric.123.a
		ai_chance = {
			factor = 50
		}
		add_to_variable = { libertarian_score_var = 1 }
		custom_effect_tooltip = ancap_score_tt
	}
	
	option = {
		name = NWgeneric.123.b
		ai_chance = {
			factor = 50
		}
		add_to_variable = { minarchism_score_var = 1 }
		custom_effect_tooltip = anarcho_minarchism_score_tt
	}
}

#Итог. Доминирование минархистов/анархо-капиталистов
country_event = {
	id = NWgeneric.124
	title = {
		text = NWgeneric.124.t1
		trigger = {
			check_variable = { minarchism_score_var > libertarian_score_var }
		}
	}
	title = {
		text = NWgeneric.124.t2
		trigger = {
			check_variable = { libertarian_score_var > minarchism_score_var }
		}
	}
	title = {
		text = NWgeneric.124.t3
		trigger = {
			check_variable = { minarchism_score_var = 0 }
			check_variable = { libertarian_score_var = 0 }
		}
	}
	desc = {
		text = NWgeneric.124.desc1
		trigger = {
			check_variable = { minarchism_score_var > libertarian_score_var }
		}
	}
	desc = {
		text = NWgeneric.124.desc2
		trigger = {
			check_variable = { libertarian_score_var > minarchism_score_var }
		}
	}
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.124" }
	
	option = {
		name = NWgeneric.124.a
		trigger = {
			check_variable = { minarchism_score_var > libertarian_score_var }
		}
		set_country_flag = minarchism_focus_flag
		effect_tooltip = { unlock_national_focus = minarchism_focus }
	}
	
	option = {
		name = NWgeneric.124.a
		trigger = {
			check_variable = { libertarian_score_var > minarchism_score_var }
		}
		set_country_flag = libertarian_focus_flag
		effect_tooltip = { unlock_national_focus = anarcho_capitalism_focus }
	}
}

#Трагедия общих ресурсов
country_event = {
	id = NWgeneric.125
	title = NWgeneric.125.t
	desc = NWgeneric.125.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.125" }
	
	option = {
		name = NWgeneric.125.a
		ai_chance = {
			factor = 50
		}
		add_ideas = exploitation_resources
	}
	
	option = {
		name = NWgeneric.125.b
		ai_chance = {
			factor = 50
		}
		add_ideas = saving_resources
	}
}

#Успешное судебное дело // анкап
country_event = {
	id = NWgeneric.126
	title = NWgeneric.126.t
	desc = NWgeneric.126.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.126" }
	
	option = {
		name = NWgeneric.126.a
		create_wargoal = {
			type = annex_everything
			target = event_target:fabricate_goal_against_target_@ROOT
		}
		hidden_effect = {
			clear_global_event_target = fabricate_goal_against_target_@ROOT
			random_neighbor_country = {
				limit = {
					NOT = { has_war_with = ROOT }
					NOT = {
						ROOT = {
							has_wargoal_against = PREV
						}
					}
				}
				save_global_event_target_as = fabricate_goal_against_target_@ROOT
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): Новая цель судов [Root.GetName] ([Root.GetTag])"
			}
			add_ai_strategy = {
				type = antagonize
				id = event_target:fabricate_goal_against_target_@ROOT
				value = 100
			}
			add_ai_strategy = {
				type = prepare_for_war
				id = event_target:fabricate_goal_against_target_@ROOT
				value = 75
			}
			add_ai_strategy = {
				type = declare_war
				id = event_target:fabricate_goal_against_target_@ROOT
				value = 75
			}
		}
	}
}

#Успешное судебное дело против нас // цель
country_event = {
	id = NWgeneric.127
	title = NWgeneric.127.t
	desc = NWgeneric.127.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.127" }
	
	option = {
		name = NWgeneric.127.a
		effect_tooltip = {
			FROM = {
				create_wargoal = {
					type = annex_everything
					target = ROOT
				}
			}
		}
		add_ai_strategy = {
			type = antagonize
			id = FROM
			value = 100
		}
		add_ai_strategy = {
			type = prepare_for_war
			id = FROM
			value = 75
		}
	}
}

#Провал судебного дела // анкап
country_event = {
	id = NWgeneric.128
	title = NWgeneric.128.t
	desc = NWgeneric.128.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.128" }
	
	option = {
		name = NWgeneric.128.a
		add_political_power = -25
		hidden_effect = {
			clear_global_event_target = fabricate_goal_against_target_@ROOT
			random_neighbor_country = {
				limit = {
					NOT = { has_war_with = ROOT }
					NOT = {
						ROOT = {
							has_wargoal_against = PREV
						}
					}
				}
				save_global_event_target_as = fabricate_goal_against_target_@ROOT
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): Новая цель судов [Root.GetName] ([Root.GetTag])"
			}
		}
	}
}

#Суды присвоили победу противнику! // анкап
country_event = {
	id = NWgeneric.129
	title = NWgeneric.129.t
	desc = NWgeneric.129.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.129" }
	
	option = {
		name = NWgeneric.129.a
		add_political_power = -50
		effect_tooltip = {
			event_target:fabricate_goal_against_target_@ROOT = {
				create_wargoal = {
					type = annex_everything
					target = ROOT
				}
			}
		}
		hidden_effect = {
			clear_global_event_target = fabricate_goal_against_target_@ROOT
			random_neighbor_country = {
				limit = {
					NOT = { has_war_with = ROOT }
					NOT = {
						ROOT = {
							has_wargoal_against = PREV
						}
					}
				}
				save_global_event_target_as = fabricate_goal_against_target_@ROOT
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): Новая цель судов [Root.GetName] ([Root.GetTag])"
			}
		}
	}
}

#Странная ситуация // цель
country_event = {
	id = NWgeneric.130
	title = NWgeneric.130.t
	desc = NWgeneric.130.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.130" }
	
	option = {
		name = NWgeneric.130.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				OR = {
					has_government = fascism
					has_government = trozkism
					has_government = communism
					has_government = anarchism
				}
			}
			modifier = {
				factor = 2
				has_government = anarchism
				has_government = technocracy
			}
		}
		create_wargoal = {
			type = annex_everything
			target = FROM
		}
		add_ai_strategy = {
			type = antagonize
			id = FROM
			value = 100
		}
		add_ai_strategy = {
			type = prepare_for_war
			id = FROM
			value = 75
		}
		add_ai_strategy = {
			type = declare_war
			id = ROOT
			value = 75
		}
		hidden_effect = {
			FROM = {
				add_ai_strategy = {
					type = antagonize
					id = ROOT
					value = 100
				}
				add_ai_strategy = {
					type = prepare_for_war
					id = ROOT
					value = 75
				}
			}
		}
	}
	
	option = {
		name = NWgeneric.130.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				has_government = democratic
			}
		}
		add_political_power = 50
		add_stability = 0.05
	}
}

#Ускорение реформирования армии
country_event = {
	id = NWgeneric.131
	title = NWgeneric.131.t
	desc = NWgeneric.131.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.131" }
	
	option = {
		name = NWgeneric.131.a
		modify_timed_idea = { idea = changing_principles_of_army_organization days = -30 }
	}
}

#Провал реформирования армии
country_event = {
	id = NWgeneric.132
	title = NWgeneric.132.t
	desc = NWgeneric.132.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.132" }
	
	option = {
		name = NWgeneric.132.a
		modify_timed_idea = { idea = changing_principles_of_army_organization days = 20 }
	}
}

### МОНАРХОГЕНЕРИК ###

#Пульсар ивентов у монархистов // PER
country_event = {
	id = NWgeneric.300
	hidden = yes
	
	trigger = {
		has_government = monarchy
		has_completed_focus = popular_representation
		NOT = { has_country_flag = generic_dissolve_parliament_flag }
	}
	
	mean_time_to_happen = { days = 75 }
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.300" }
	immediate = {
		hidden_effect = {
			random_list = {
				50 = {
					country_event = { id = NWgeneric.301 }
				}
				50 = {
					modifier = {
						factor = 0.5
						has_country_flag = { flag = NWpersian_302_flag value > 0 }
					}
					modifier = {
						factor = 0
						has_country_flag = { flag = NWpersian_302_flag value > 1 }
					}
					country_event = { id = NWpersian.302 }
				}
				50 = {
					country_event = { id = NWgeneric.303 }
				}
				50 = {
					modifier = {
						factor = 0
						has_offensive_war = no
					}
					country_event = { id = NWgeneric.304 }
				}
				50 = {
					modifier = {
						factor = 0
						surrender_progress > 0.04
					}
					country_event = { id = NWgeneric.305 }
				}
				50 = {
					country_event = { id = NWgeneric.306 }
				}
				50 = {
					country_event = { id = NWgeneric.307 }
				}
				50 = {
					country_event = { id = NWgeneric.308 }
				}
			}
		}
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.301
	title = NWgeneric.301.t
	desc = NWgeneric.301.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.301" }
	
	option = {
		name = NWgeneric.301.a
		ai_chance = {
			factor = 50
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.301.b
		ai_chance = {
			factor = 50
		}
		if = {
			limit = { num_of_controlled_states > 7 }
			random_controlled_state = {
				limit = {
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = no
					}
				}
				hidden_effect = { add_state_modifier = { modifier = { local_building_slots = -1 } } }
				effect_tooltip = { add_extra_state_shared_building_slots = -1 }
			}
			random_controlled_state = {
				limit = {
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = no
					}
				}
				hidden_effect = { add_state_modifier = { modifier = { local_building_slots = -1 } } }
				effect_tooltip = { add_extra_state_shared_building_slots = -1 }
			}
			random_controlled_state = {
				limit = {
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = no
					}
				}
				hidden_effect = { add_state_modifier = { modifier = { local_building_slots = -1 } } }
				effect_tooltip = { add_extra_state_shared_building_slots = -1 }
			}
			random_controlled_state = {
				limit = {
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = no
					}
				}
				hidden_effect = { add_state_modifier = { modifier = { local_building_slots = -1 } } }
				effect_tooltip = { add_extra_state_shared_building_slots = -1 }
			}
		}
		else = {
			random_controlled_state = {
				limit = {
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = no
					}
				}
				remove_building = {
					type = industrial_complex
					level = 1
				}
			}
		}
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.302
	title = NWgeneric.301.t
	desc = NWgeneric.302.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.302" }
	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = NWpersian_302_flag } }
				set_country_flag = { flag = NWpersian_302_flag value = 1 }
			}
			else = { modify_country_flag = { flag = NWpersian_302_flag value = 1 } }
		}
	}
	
	option = {
		name = NWgeneric.302.a
		ai_chance = {
			factor = 30
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.302.b
		ai_chance = {
			factor = 70
		}
		if = {
			limit = { communism > 0 }
			add_popularity = {
				ideology = communism
				popularity = 0.05
			}
		}
		if = {
			limit = { democratic > 0 }
			add_popularity = {
				ideology = democratic
				popularity = 0.05
			}
		}
		if = {
			limit = {
				OR = {
					NOT = { communism > 0 }
					NOT = { democratic > 0 }
				}
			}
			add_popularity = {
				ideology = neutrality
				popularity = 0.05
			}
		}
	}
}

#Подвешенный парламент
country_event = {
	id = NWgeneric.303
	title = NWgeneric.303.t
	desc = NWgeneric.303.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.303" }
	
	option = {
		name = NWgeneric.303.a
		ai_chance = {
			factor = 30
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.303.b
		ai_chance = {
			factor = 70
		}
		add_stability = -0.05
		add_timed_idea = { idea = generic_hung_parliament days = 70 }
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.304
	title = NWgeneric.301.t
	desc = NWgeneric.304.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.304" }
	
	option = {
		name = NWgeneric.304.a
		ai_chance = {
			factor = 30
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.304.b
		ai_chance = {
			factor = 70
		}
		add_war_support = -0.07
		add_political_power = -40
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.305
	title = NWgeneric.301.t
	desc = NWgeneric.305.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.305" }
	
	option = {
		name = NWgeneric.305.a
		ai_chance = {
			factor = 25
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.305.b
		ai_chance = {
			factor = 75
		}
		add_timed_idea = { idea = generic_improving_living_conditions_of_military days = 70 }
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.306
	title = NWgeneric.301.t
	desc = NWgeneric.306.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.306" }
	
	option = {
		name = NWgeneric.306.a
		ai_chance = {
			factor = 30
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.306.b
		ai_chance = {
			factor = 70
		}
		add_timed_idea = { idea = generic_concessions_in_social_sphere days = 70 }
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.307
	title = NWgeneric.301.t
	desc = NWgeneric.307.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.307" }
	
	option = {
		name = NWgeneric.307.a
		ai_chance = {
			factor = 70
		}
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.307.b
		ai_chance = {
			factor = 30
		}
		add_political_power = -80
	}
}

#Действия парламента
country_event = {
	id = NWgeneric.308
	title = NWgeneric.301.t
	desc = NWgeneric.308.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.308" }
	
	option = {
		name = NWgeneric.308.a
		ai_chance = {
			factor = 30
		}
		add_political_power = -20
		activate_decision = generic_dissolve_parliament
	}
	
	option = {
		name = NWgeneric.308.b
		ai_chance = {
			factor = 70
		}
		add_political_power = -20
		add_command_power = -60
	}
}




#3й сценарий // агрессия
country_event = {
	id = NWgeneric.9997
	title = NWgeneric.9997.t
	desc = NWgeneric.9997.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.9997" }

	option = {	#Незначительное повышение агрессии
		name = NWgeneric.9997.a
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			set_global_flag = AI_AGGRESSION_MORE_FLAG
			every_country = {
				set_rule = {
					can_declare_war_on_same_ideology = yes
					can_only_justify_war_on_threat_country = no
				}
			}
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9997a"
	}
	
	option = {	#Повысить агрессию сейчас
		name = NWgeneric.9997.b
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9997b"
			set_global_flag = AI_AGGRESSION_ULTRA_FLAG
			every_country = {
				set_rule = {
					can_declare_war_on_same_ideology = yes
					can_only_justify_war_on_threat_country = no
				}
			}
		}
	}
	
	option = {	#Повысить агрессию через год
		name = NWgeneric.9997.c
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9997c"
			country_event = { id = NWgeneric.99970 days = 730 }
			random_country = {
				limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_list = {
				50 = {
					random_country = {
						limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
						set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
						log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
					}
				}
				50 = { }
			}
			random_list = {
				50 = {
					random_country = {
						limit = { NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG } }
						set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
						log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
					}
				}
				50 = { }
			}
		}
	}
	
	option = {	#Динамичная система
		name = NWgeneric.9997.d
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9997d"
			country_event = { id = NWgeneric.99971 days = 365 } #анархи+тро
			country_event = { id = NWgeneric.99972 days = 730 } #фаш+ком+тех
			country_event = { id = NWgeneric.99973 days = 1095 } #нейтралы+мон
			country_event = { id = NWgeneric.99970 days = 1275 } #все
			random_country = {
				limit = { has_government = democratic }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = communism }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = fascism }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = neutrality }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = technocracy }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = trozkism }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = monarchy }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
			random_country = {
				limit = { has_government = anarchism }
				set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
				log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
			}
		}
	}
}

#3й сценарий // отложенная агрессия
country_event = {
	id = NWgeneric.99970
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.99970" }
	immediate = {
		set_global_flag = AI_AGGRESSION_ULTRA_FLAG
		every_country = {
			set_rule = {
				can_declare_war_on_same_ideology = yes
				can_only_justify_war_on_threat_country = no
			}
		}
	}
}

#3й сценарий // отложенная агрессия тро+анарх
country_event = {
	id = NWgeneric.99971
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.99971" }
	immediate = {
		every_country = {
			limit = {
				NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG }
				OR = {
					has_government = trozkism
					has_government = anarchism
				}
			}
			set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
			log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
		}
	}
}

#3й сценарий // отложенная агрессия фаш+ком+тех
country_event = {
	id = NWgeneric.99972
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.99972" }
	immediate = {
		every_country = {
			limit = {
				NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG }
				OR = {
					has_government = trozkism
					has_government = anarchism
					has_government = fascism
					has_government = communism
					has_government = technocracy
				}
			}
			set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
			log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
		}
	}
}

#3й сценарий // отложенная агрессия нейт+мон
country_event = {
	id = NWgeneric.99973
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.99973" }
	immediate = {
		every_country = {
			limit = {
				NOT = { has_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG }
				OR = {
					has_government = trozkism
					has_government = anarchism
					has_government = fascism
					has_government = communism
					has_government = technocracy
					has_government = neutrality
					has_government = monarchy
				}
			}
			set_country_flag = AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG
			log = "[GetDateText]: [This.GetName] ([This.GetTag]): has AI_AGGRESSION_ULTRA_CHOOSEN_ONE_FLAG"
		}
	}
}

#3й сценарий // альянсы
country_event = {
	id = NWgeneric.9998
	title = NWgeneric.9998.t
	desc = NWgeneric.9998.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.9998" }
	immediate = {
		hidden_effect = {
			#Скриптовые армии
			every_country = {	#4
				limit = {
					OR = {
						tag = TEX
						tag = CLF
						tag = USA
						tag = MDA
						tag = ABK
						tag = GEO
					}
				}
				random_owned_state = {
					create_unit = {
						division = "division_template = \"National Guards\"	start_experience_factor = 0	start_equipment_factor = 1"
						owner = PREV
						allow_spawning_on_enemy_provs = yes
						count = 4
					}
				}
			}
			SOV = {
				random_owned_state = {
					create_unit = {
						division = "division_template = \"National Guards\"	start_experience_factor = 0	start_equipment_factor = 1"
						owner = PREV
						allow_spawning_on_enemy_provs = yes
						count = 10
					}
				}
			}
			every_country = {	#2
				limit = {
					OR = {
						tag = CRO
						tag = BOS
						tag = ENG
						has_civil_war = yes
					}
				}
				random_owned_state = {
					create_unit = {
						division = "division_template = \"National Guards\"	start_experience_factor = 0	start_equipment_factor = 1"
						owner = PREV
						allow_spawning_on_enemy_provs = yes
						count = 2
					}
				}
			}
			HOL = {		#2
				random_controlled_state = {
					limit = { is_core_of = ENG }
					create_unit = {
						division = "division_template = \"National Guards\"	start_experience_factor = 0	start_equipment_factor = 1"
						owner = PREV
						allow_spawning_on_enemy_provs = yes
						count = 2
					}
				}
			}
		}
	}

	option = {
		name = NWgeneric.9998.a
		ai_chance = {
			factor = 50
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9998a"
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = AI_AGGRESSION_ULTRA_FLAG } }
				country_event = { id = NWgeneric.9997 hours = 8 }
			}
		}
	}
	
	option = {
		name = NWgeneric.9998.b
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9998b"
			every_country = {
				set_rule = { can_create_factions = yes }
			}
			if = {
				limit = { NOT = { has_global_flag = AI_AGGRESSION_ULTRA_FLAG } }
				country_event = { id = NWgeneric.9997 hours = 8 }
			}
		}
	}
	
	option = {
		name = NWgeneric.9998.c
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9998c"
			every_country = {
				set_rule = { can_create_factions = no }
			}
			set_global_flag = NO_ALLY_FLAG
			if = {
				limit = { NOT = { has_global_flag = AI_AGGRESSION_ULTRA_FLAG } }
				country_event = { id = NWgeneric.9997 hours = 8 }
			}
		}
	}
}

#3й сценарий // армия+снаряга
country_event = {
	id = NWgeneric.9999
	title = NWgeneric.9999.t
	desc = NWgeneric.9999.desc
	picture = GFX_report_event_generic_rally2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.9999" }

	option = {
		name = NWgeneric.9999.a
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9999a"
			every_country = {
				limit = { num_divisions < 15 }
				capital_scope = {
					create_unit = {
						division = "division_template = \"National Guards\"	start_experience_factor = 0	start_equipment_factor = 1"
						owner = ROOT
						allow_spawning_on_enemy_provs = yes
						count = 4
					}
				}
			}
			country_event = { id = NWgeneric.9998 hours = 8 }
		}
	}
	
	option = {
		name = NWgeneric.9999.b
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9999b"
			every_country = {
				destroy_ships = {
					type = ship_hull_light
					count = all
				}
				destroy_ships = {
					type = ship_hull_cruiser
					count = all
				}
				destroy_ships = {
					type = ship_hull_heavy
					count = all
				}
				destroy_ships = {
					type = ship_hull_carrier 
					count = all
				}
				destroy_ships = {
					type = ship_hull_submarine
					count = all
				}
				every_state = {
					PREV = {
						delete_unit = { state = PREV disband = yes }
					}
				}
				transfer_units_fraction = {
					target = SAI
					size = 0.0
					stockpile_ratio = 0.0
					army_ratio = 0.0
					navy_ratio = 0.0
					air_ratio = 1.0
				}
			}
			country_event = { id = NWgeneric.9998 hours = 8 }
		}
	}
	
	option = {
		name = NWgeneric.9999.c
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9999c"
			every_country = {
				destroy_ships = {
					type = ship_hull_light
					count = all
				}
				destroy_ships = {
					type = ship_hull_cruiser
					count = all
				}
				destroy_ships = {
					type = ship_hull_heavy
					count = all
				}
				destroy_ships = {
					type = ship_hull_carrier 
					count = all
				}
				destroy_ships = {
					type = ship_hull_submarine
					count = all
				}
				every_state = {
					PREV = {
						delete_unit = { state = PREV disband = no }
					}
				}
				transfer_units_fraction = {
					target = SAI
					size = 0.0
					stockpile_ratio = 0.0
					army_ratio = 0.0
					navy_ratio = 0.0
					air_ratio = 1.0
				}
			}
			country_event = { id = NWgeneric.9998 hours = 8 }
		}
	}
	
	option = {
		name = NWgeneric.9999.d
		ai_chance = {
			factor = 50
		}
		hidden_effect = {
			log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): chosen NWgeneric.9999d"
			every_country = {
				destroy_ships = {
					type = ship_hull_light
					count = all
				}
				destroy_ships = {
					type = ship_hull_cruiser
					count = all
				}
				destroy_ships = {
					type = ship_hull_heavy
					count = all
				}
				destroy_ships = {
					type = ship_hull_carrier 
					count = all
				}
				destroy_ships = {
					type = ship_hull_submarine
					count = all
				}
				every_state = {
					PREV = {
						delete_unit = { state = PREV disband = no }
					}
				}
				transfer_units_fraction = {
					target = SAI
					size = 0.0
					stockpile_ratio = 0.0
					army_ratio = 0.0
					navy_ratio = 0.0
					air_ratio = 1.0
				}
				capital_scope = {
					create_unit = {
						division = "division_template = \"National Guards\"	start_experience_factor = 0	start_equipment_factor = 1"
						owner = PREV
						allow_spawning_on_enemy_provs = no
						count = 4
					}
				}
			}
			country_event = { id = NWgeneric.9998 hours = 8 }
		}
	}
}

#3й сценарий // аннекс SAI // Так безопаснее для скрипта, когда это происходит в два действия // пока ан юз
country_event = {
	id = NWgeneric.99991
	hidden = yes
	is_triggered_only = yes
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.99991" }
	option = {
		clr_country_flag = NWgeneric_9999_flag
		every_state = {
			limit = { is_owned_by = SAI }
			ROOT = { transfer_state = PREV }
		}
	}
	option = {
		every_country = {
			set_variable = { abort_reform = 3 }
			hidden_effect = {
				if = {
					limit = { check_variable = { abort_reform = 3 } }
					country_event = { id = NWgeneric.41 days = 1 }
				}
			}
			clear_variable = abort_reform
		}
	}
}



###########################
# Условный generic stories
###########################


#Пульсар. Землетрясения // SOV 19 апреля 1938 года 
country_event = {
	id = NWgeneric_stories.1
	is_triggered_only = yes
	hidden = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.1" }
	
	option = {
		name = NWgeneric_stories.1.a
		if = {
			limit = {
				date > 1938.04.18
				date < 1938.04.22
			}
			348 = { controller = { country_event = { id = NWgeneric_stories.2 } } }		#Кыршехирское землетрясение
			country_event = { id = NWgeneric_stories.1 days = 521 }
		}
		if = {
			limit = {
				date > 1938.09.20
				date < 1938.09.24
			}
			339 = { controller = { country_event = { id = NWgeneric_stories.3 } } }		#Землетрясение в Дикили
			country_event = { id = NWgeneric_stories.1 days = 96 }
		}
		if = {
			limit = {
				date > 1939.12.25
				date < 1939.12.29
			}
			353 = { controller = { country_event = { id = NWgeneric_stories.4 } } }		#Землетрясение в Эрзиджане
			country_event = { id = NWgeneric_stories.1 days = 624 }
		}
		if = {
			limit = {
				date > 1941.09.09
				date < 1941.09.13
			}
			352 = { controller = { country_event = { id = NWgeneric_stories.5 } } }		#Землетрясение в Ван-Эрджище
			country_event = { id = NWgeneric_stories.1 days = 186 }
		}
		if = {
			limit = {
				date > 1942.03.14
				date < 1942.03.18
			}
			country_event = { id = NWgeneric_stories.1 days = 279 }
			if = {
				limit = {
					ENG = {
						is_subject = no
						NOT = {
							has_war_with = TUR
							is_in_faction_with = TUR
						}
						OR = {
							has_deployed_air_force_size = { size > 0 type = tactical_bomber }
							has_deployed_air_force_size = { size > 0 type = strategic_bomber }
						}
					}
					TUR = { has_full_control_of_state = 1167 }
				}
				ENG = { country_event = { id = NWgeneric_stories.10 } }					#Ошибочный обстрел Миласа
			}
		}
		if = {
			limit = {
				date > 1942.12.18
				date < 1942.12.22
			}
			355 = { controller = { country_event = { id = NWgeneric_stories.6 } } }		#Землетрясение в Никсар-Эрбаа
			country_event = { id = NWgeneric_stories.1 days = 182 }
		}
		if = {
			limit = {
				date > 1943.06.18
				date < 1943.06.22
			}
			347 = { controller = { country_event = { id = NWgeneric_stories.7 } } }		#Землетрясение в Адапазары-Хендеке
			country_event = { id = NWgeneric_stories.1 days = 82 }
		}
		if = {
			limit = {
				date > 1943.09.08
				date < 1943.09.12
			}
			341 = { controller = { country_event = { id = NWgeneric_stories.8 } } }		#Пожар на Большом базаре
			country_event = { id = NWgeneric_stories.1 days = 78 }
		}
		if = {
			limit = {
				date > 1943.11.25
				date < 1943.11.29
			}
			347 = { controller = { country_event = { id = NWgeneric_stories.9 } } }		#Землетрясение в Тосья-Лядик
		}
	}
}

#Кыршехирское землетрясение // controller 348 / 19 апреля 1938 года 
country_event = {
	id = NWgeneric_stories.2
	title = NWgeneric_stories.2.t
	desc = NWgeneric_stories.2.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.2" }

	option = {
		name = NWgeneric_stories.2.a
		348 = { add_manpower = -224 }
	}
}


#Землетрясение в Дикили // controller 339 / 19 апреля 1938 года 
country_event = {
	id = NWgeneric_stories.3
	title = NWgeneric_stories.3.t
	desc = NWgeneric_stories.3.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.3" }

	option = {
		name = NWgeneric_stories.3.a
		339 = { add_manpower = -46 }
	}
}

#Землетрясение в Эрзиджане // controller 353 / 27 декабря 1939 года
country_event = {
	id = NWgeneric_stories.4
	title = NWgeneric_stories.4.t
	desc = NWgeneric_stories.4.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.4" }

	option = {
		name = NWgeneric_stories.4.a
		353 = {
			add_manpower = -32700
			damage_building = {
				type = infrastructure
				damage = 1
			}
		}
	}
}

#Землетрясение в Ван-Эрджище // controller 352 / 11 сентября 1941 года
country_event = {
	id = NWgeneric_stories.5
	title = NWgeneric_stories.5.t
	desc = NWgeneric_stories.5.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.5" }

	option = {
		name = NWgeneric_stories.5.a
		352 = {
			add_manpower = -192
		}
	}
}

#Землетрясение в Никсар-Эрбаа // controller 355 / 20 декабря 1942
country_event = {
	id = NWgeneric_stories.6
	title = NWgeneric_stories.6.t
	desc = NWgeneric_stories.6.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.6" }

	option = {
		name = NWgeneric_stories.6.a
		355 = {
			add_manpower = -3000
		}
	}
}

#Землетрясение в Никсар-Эрбаа // controller 347 / 20 июня 1943 года
country_event = {
	id = NWgeneric_stories.7
	title = NWgeneric_stories.7.t
	desc = NWgeneric_stories.7.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.7" }

	option = {
		name = NWgeneric_stories.7.a
		347 = {
			add_manpower = -336
		}
	}
}

#Пожар на Большом базаре // controller 341 / 10 сентября 1943 года
country_event = {
	id = NWgeneric_stories.8
	title = NWgeneric_stories.8.t
	desc = NWgeneric_stories.8.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.8" }

	option = {
		name = NWgeneric_stories.8.a
		add_political_power = -5
	}
}

#Землетрясение в Тосья-Лядик // controller 347 / 27 ноября 1943 года
country_event = {
	id = NWgeneric_stories.9
	title = NWgeneric_stories.9.t
	desc = NWgeneric_stories.9.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.9" }

	option = {
		name = NWgeneric_stories.9.a
		347 = {
			add_manpower = -5000
		}
	}
}

#Ошибочный обстрел Миласа // ENG / 16 марта 1942 года
country_event = {
	id = NWgeneric_stories.10
	title = NWgeneric_stories.10.t
	desc = NWgeneric_stories.10.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.10" }

	option = {
		name = NWgeneric_stories.10.a
		TUR = { country_event = { id = NWgeneric_stories.11 } }
	}
}

#Ошибочный обстрел Миласа // TUR
country_event = {
	id = NWgeneric_stories.11
	title = NWgeneric_stories.11.t
	desc = NWgeneric_stories.11.desc
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric_stories.11" }

	option = {
		name = NWgeneric_stories.11.a
		ai_chance = {
			factor = 15
			modifier = {
				factor = 0
				is_historical_focus_on = yes
			}
			modifier = {
				factor = 0
				OR = {
					has_government = neutrality
					has_government = democratic
					has_war = yes
				}
				is_historical_focus_on = no
			}
		}
		declare_war_on = {
			target = ENG
			type = topple_government
		}
	}
	
	option = {
		name = NWgeneric_stories.11.b
		ai_chance = {
			factor = 85
		}
	}
}



#TEST
country_event = {
	id = NWgeneric.999
	title = TEST
	desc = TEST
	picture = GFX_report_event_generic_rally_3
	is_triggered_only = yes
	
	option = {
		name = "5 factions"
		random_country = {
			limit = { is_left_anarchist = yes }
			set_rule = { can_create_factions = yes }
			create_faction = "Анархический Левый Интернационал"
			set_country_flag = anarchism_left_leader_flag
			every_other_country = {
				limit = { is_left_anarchist = yes }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { is_right_anarchist = yes }
			set_rule = { can_create_factions = yes }
			create_faction = "Правая Анархическая Коалиция"
			set_country_flag = anarchism_right_leader_flag
			every_other_country = {
				limit = { is_right_anarchist = yes }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { is_neutrality_anarchist = yes }
			set_rule = { can_create_factions = yes }
			create_faction = "Анархический Синтез"
			set_country_flag = anarchism_neutrality_leader_flag
			every_other_country = {
				limit = { is_neutrality_anarchist = yes }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_monarchism_flag }
			set_rule = { can_create_factions = yes }
			create_faction = "Конкордат либертарных монархов"
			set_country_flag = anarchism_monarchism_leader_flag
			every_other_country = {
				limit = { has_country_flag = anarchism_monarchism_flag }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_nationalism_flag }
			set_rule = { can_create_factions = yes }
			create_faction = "Союз Свободных Наций"
			set_country_flag = anarchism_nationalism_leader_flag
			every_other_country = {
				limit = { has_country_flag = anarchism_nationalism_flag }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_transgumanism_flag }
			set_rule = { can_create_factions = yes }
			create_faction = "Технологический Альянс"
			set_country_flag = anarchism_transgumanism_leader_flag
			every_other_country = {
				limit = { has_country_flag = anarchism_transgumanism_flag }
				PREV = { add_to_faction = PREV }
			}
		}
	}
	
	option = {
		name = "3 factions"
		random_country = {
			limit = { is_left_anarchist = yes }
			set_rule = { can_create_factions = yes }
			create_faction = "Анархический Левый Интернационал"
			set_country_flag = anarchism_left_leader_flag
			every_other_country = {
				limit = { is_left_anarchist = yes }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { is_right_anarchist = yes }
			set_rule = { can_create_factions = yes }
			create_faction = "Правая Анархическая Коалиция"
			set_country_flag = anarchism_right_leader_flag
			every_other_country = {
				limit = { is_right_anarchist = yes }
				PREV = { add_to_faction = PREV }
			}
		}
		random_country = {
			limit = { is_neutrality_anarchist = yes }
			set_rule = { can_create_factions = yes }
			create_faction = "Анархический Синтез"
			set_country_flag = anarchism_neutrality_leader_flag
			every_other_country = {
				limit = {
					OR = {
						is_neutrality_anarchist = yes
						has_country_flag = anarchism_monarchism_flag
						has_country_flag = anarchism_nationalism_flag
						has_country_flag = anarchism_transgumanism_flag
					}
				}
				PREV = { add_to_faction = PREV }
			}
		}
	}
	
	option = {
		name = "TOTAL WAR"
		random_country = {
			limit = { has_country_flag = anarchism_left_leader_flag }
			every_other_country = {
				limit = {
					OR = {
						has_country_flag = anarchism_right_leader_flag
						has_country_flag = anarchism_neutrality_leader_flag
						has_country_flag = anarchism_monarchism_leader_flag
						has_country_flag = anarchism_nationalism_leader_flag
						has_country_flag = anarchism_transgumanism_leader_flag
					}
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_right_leader_flag }
			every_other_country = {
				limit = {
					OR = {
						has_country_flag = anarchism_neutrality_leader_flag
						has_country_flag = anarchism_monarchism_leader_flag
						has_country_flag = anarchism_nationalism_leader_flag
						has_country_flag = anarchism_transgumanism_leader_flag
					}
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_neutrality_leader_flag }
			every_other_country = {
				limit = {
					OR = {
						has_country_flag = anarchism_monarchism_leader_flag
						has_country_flag = anarchism_nationalism_leader_flag
						has_country_flag = anarchism_transgumanism_leader_flag
					}
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_monarchism_leader_flag }
			every_other_country = {
				limit = {
					OR = {
						has_country_flag = anarchism_nationalism_leader_flag
						has_country_flag = anarchism_transgumanism_leader_flag
					}
				}
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
		random_country = {
			limit = { has_country_flag = anarchism_nationalism_leader_flag }
			every_other_country = {
				limit = { has_country_flag = anarchism_transgumanism_leader_flag }
				declare_war_on = {
					target = PREV
					type = annex_everything
				}
			}
		}
	}
	
	option = {
		every_country = {
			limit = {
				any_enemy_country = {
					has_offensive_war_with = PREV
				}
			}
			every_enemy_country = {
				limit = { has_offensive_war_with = PREV }
				PREV = {
					set_country_flag = is_war_target_of_@PREV
					log = "[GetDateText]: [This.GetName] ([This.GetTag]): is war target of [Prev.GetName] ([Prev.GetTag])"
				}
			}
		}
	}
	option = {
		HOL = { set_country_flag = is_war_target_of_@BEL }
	}
}

#MORE TEST
country_event = {
	id = NWgeneric.9099
	title = NWgeneric.9099.t
	desc = NWgeneric.9099.desc
	picture = GFX_report_event_saf_soldiers_2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.9099" }
	
	option = {
		name = NWgeneric.9099.a
		every_owned_state = {
			limit = {
				is_core_of = ROOT
				NOT = { has_dynamic_modifier = { modifier = private_state_dyn } }
			}
			set_state_var_for_private_state_dyn = yes
			add_dynamic_modifier = { modifier = private_state_dyn }
		}
	}
	
	option = {
		name = NWgeneric.9099.b
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_core_states:  [?ROOT.num_core_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_owned_controlled_states:  [?ROOT.num_owned_controlled_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_owned_states:  [?ROOT.num_owned_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_controlled_states:  [?ROOT.num_controlled_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_of_controlled_states:  [?ROOT.num_of_controlled_states]"
	}
	
	option = {
		name = NWgeneric.9099.c
		every_country = {
			limit = { has_government = anarchism }
			set_rule = { can_create_factions = yes }
		}
	}
	option = {
		name = NWgeneric.9099.d
		set_country_leader_ideology = anarcho_communism
		remove_ideas = {
			collapse_of_state_apparatus
			legislative_anarchy
			economic_degradation
			generic_social_crisis
			closed_economy
		}
	}
	option = {
		name = NWgeneric.9099.e
		clear_anarchism_flag = yes
		random_list = {
			50 = {
				set_country_flag = anarchism_left_flag
				if = {
					limit = {
						NOT = {
							has_idea = peoples_squads
							has_idea = peoples_police
							has_idea = peoples_militia
							has_active_mission = generic_anarchism_manpower_decision
						}
					}
					activate_mission = generic_anarchism_manpower_decision
				}
			}
			50 = {
				set_country_flag = anarchism_right_flag
				if = {
					limit = {
						NOT = {
							has_idea = mercenary_soldiers
							has_idea = monopolized_private_armies
							has_idea = thriving_private_army_market
							has_active_mission = generic_anarchism_manpower_decision
						}
					}
					activate_mission = generic_anarchism_manpower_decision
				}
			}
			50 = {
				set_country_flag = anarchism_neutrality_flag
				if = {
					limit = {
						NOT = {
							has_idea = peoples_squads
							has_idea = peoples_police
							has_idea = peoples_militia
							has_idea = mercenary_soldiers
							has_idea = monopolized_private_armies
							has_idea = thriving_private_army_market
							has_active_mission = generic_anarchism_manpower_decision
						}
					}
					activate_mission = generic_anarchism_manpower_decision
				}
			}
		}
	}
}

#MORE TEST
country_event = {
	id = NWgeneric.90910
	title = NWgeneric.90910.t
	desc = NWgeneric.90910.desc
	picture = GFX_report_event_saf_soldiers_2
	is_triggered_only = yes
	
	immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWgeneric.90910" }
	
	option = {
		name = LOG
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_core_states:  [?ROOT.num_core_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_owned_controlled_states:  [?ROOT.num_owned_controlled_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_owned_states:  [?ROOT.num_owned_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_controlled_states:  [?ROOT.num_controlled_states]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_of_controlled_states:  [?ROOT.num_of_controlled_states]"
	}
	
	option = {
		name = STATE
		every_state = {
			limit = { is_on_continent = europe }
			add_to_variable = { ROOT.europe_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): europe_var:  [?ROOT.europe_var]"
		every_state = {
			limit = { is_on_continent = north_america }
			add_to_variable = { ROOT.north_america_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): north_america_var:  [?ROOT.north_america_var]"
		every_state = {
			limit = { is_on_continent = south_america }
			add_to_variable = { ROOT.south_america_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): south_america_var:  [?ROOT.south_america_var]"
		every_state = {
			limit = { is_on_continent = australia }
			add_to_variable = { ROOT.australia_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): australia_var:  [?ROOT.australia_var]"
		every_state = {
			limit = { is_on_continent = africa }
			add_to_variable = { ROOT.africa_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): africa_var:  [?ROOT.africa_var]"
		every_state = {
			limit = { is_on_continent = asia }
			add_to_variable = { ROOT.asia_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): asia_var:  [?ROOT.asia_var]"
		every_state = {
			limit = { is_on_continent = middle_east }
			add_to_variable = { ROOT.middle_east_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): middle_east_var:  [?ROOT.middle_east_var]"
		every_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				is_fully_controlled_by = ROOT
				any_neighbor_state = { is_core_of = ROOT }
			}
			add_to_variable = { ROOT.is_neighbor_not_core_var = 1 }
		}
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): is_neighbor_not_core_var:  [?ROOT.is_neighbor_not_core_var]"
		clear_variable = europe_var
		clear_variable = north_america_var
		clear_variable = south_america_var
		clear_variable = australia_var
		clear_variable = africa_var
		clear_variable = asia_var
		clear_variable = middle_east_var
	}
	
	option = {
		name = LOG2
		set_country_flag = USE_accept_form
		every_other_country = {
			limit = {
				capital_scope = { is_on_continent = europe }
			}
			ROOT = {
				set_autonomy = {
					target = PREV
					autonomy_state = autonomy_habs_use_state
				}
			}
			set_cosmetic_HBBRG_use_subject = yes
		}
	}
	
	option = {
		name = LOG3
		set_temp_variable = { temp1 = 1 }
		set_temp_variable = { temp2 = 1 }
		set_temp_variable = { temp3 = 1 }
		set_temp_variable = { temp4 = 1 }
		randomize_temp_variable = { var = temp1 distribution = uniform min = 1 max = 3 }
		randomize_temp_variable = { var = temp2 distribution = uniform min = 1 max = 3 }
		randomize_temp_variable = { var = temp3 distribution = uniform min = 1 max = 3 }
		randomize_temp_variable = { var = temp4 distribution = uniform min = 1 max = 3 }
		set_temp_variable = { temp5 = 0 }
		add_to_temp_variable = { temp5 = temp1 }
		add_to_temp_variable = { temp5 = temp2 }
		add_to_temp_variable = { temp5 = temp3 }
		add_to_temp_variable = { temp5 = temp4 }
		divide_temp_variable = { temp5 = 4 }
		round_temp_variable = temp5
		clamp_temp_variable = { var = temp5 min = 1 max = 3 }
		meta_effect = {
			text = {
				create_corps_commander = {
					traits = { anarchist_trait anarchist_timed_trait }
					skill = [SKILL_VAR]
					attack_skill = [ATTACK_SKILL_VAR]
					defense_skill = [DEFENSE_SKILL_VAR]
					planning_skill = [PLANNING_SKILL_VAR]
					logistics_skill = [LOGISTICS_SKILL_VAR]
				}
			}
			SKILL_VAR = "[?temp5]"
			ATTACK_SKILL_VAR = "[?temp1]"
			DEFENSE_SKILL_VAR = "[?temp2]"
			PLANNING_SKILL_VAR = "[?temp3]"
			LOGISTICS_SKILL_VAR = "[?temp4]"
		}
		if = {
			limit = { has_country_flag = guerrilla_war_flag }
			random_army_leader = {
				limit = { has_trait = anarchist_timed_trait }
				remove_unit_leader_trait = guerrilla_war_trait
			}
		}
		if = {
			limit = { has_country_flag = national_war_flag }
			random_army_leader = {
				limit = { has_trait = anarchist_timed_trait }
				remove_unit_leader_trait = national_war_trait
			}
		}
		set_temp_variable = { temp6 = 1 }
		if = {
			limit = { check_variable = { temp5 > 1 } }
			random_list = {
				60 = {
					add_to_temp_variable = { temp6 = 1 }
				}
				40 = {
					modifier = { factor = 0 check_variable = { temp5 > 2 } }
				}
			}
		}
		
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): skill:  [?temp5]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): attack_skill:  [?temp1]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): defense_skill:  [?temp2]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): planning_skill:  [?temp3]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): logistics_skill:  [?temp4]"
		log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): num_of_traits:  [?temp6]"
		
		while_loop_effect = {
			limit = { check_variable = { temp6 > 0 } }
			random_army_leader = {
				limit = { has_trait = anarchist_timed_trait }
				random_list = {
					65 = {
						modifier = { factor = 0 check_variable = { temp6 > 1 } }
						modifier = { factor = 0.25 check_variable = { temp5 > 1 } }
					}
					10 = { add_unit_leader_trait = old_guard }
					10 = { add_unit_leader_trait = brilliant_strategist }
					10 = { add_unit_leader_trait = inflexible_strategist }
					10 = { add_unit_leader_trait = politically_connected }
					5 = { add_unit_leader_trait = war_hero }
					10 = { add_unit_leader_trait = career_officer }
					10 = { add_unit_leader_trait = trait_cautious  modifier = { factor = 0 has_trait = trait_reckless } }
					10 = { add_unit_leader_trait = trait_reckless  modifier = { factor = 0 has_trait = trait_cautious } }
					10 = { add_unit_leader_trait = media_personality }
					10 = { add_unit_leader_trait = harsh_leader }
					10 = { add_unit_leader_trait = art_leader }
					20 = { add_unit_leader_trait = infantry_officer }
					20 = { add_unit_leader_trait = cavalry_officer }
					20 = { add_unit_leader_trait = armor_officer }
					5 = { add_unit_leader_trait = resistance_leader }
				}
			}
			add_to_temp_variable = { temp6 = -1 }
		}
		random_army_leader = {
			limit = { has_trait = anarchist_timed_trait }
			remove_unit_leader_trait = anarchist_timed_trait
		}
	}
	
	option = {
		name = LOG5
	}
}










### LAND CRUISERS EVENT ###		TODO ВЕРНУТЬ

# # Применимость корабельных орудий
# country_event = {
	# id = NWland_cruiser.1
	# title = NWland_cruiser.1.t
	# desc = NWland_cruiser.1.desc
	# picture = GFX_report_event_generic_factory
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.1" }

	# option = {
		# name = NWland_cruiser.1.a
		# set_country_flag = land_cruiser_weapon_status_yellow
		# custom_effect_tooltip = land_cruiser_weapon_status_yellow_tt
		# unlock_decision_tooltip = land_cruiser_build_experimental_weapons
	# }
# }

# # Применимость тяжелого вооружения ж/д орудий
# country_event = {
	# id = NWland_cruiser.2
	# title = NWland_cruiser.2.t
	# desc = NWland_cruiser.2.desc
	# picture = GFX_report_event_generic_factory
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.2" }

	# option = {
		# name = NWland_cruiser.2.a
		# set_country_flag = land_cruiser_weapon_status_yellow
		# custom_effect_tooltip = land_cruiser_weapon_status_yellow_tt
		# unlock_decision_tooltip = land_cruiser_build_experimental_weapons_railway_guns
	# }
# }

# # Многобашенная схема компоновки
# country_event = {
	# id = NWland_cruiser.3
	# title = NWland_cruiser.3.t
	# desc = NWland_cruiser.3.desc
	# picture = GFX_report_event_generic_factory
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.3" }

	# option = {
		# name = NWland_cruiser.3.a
		# set_country_flag = land_cruiser_multi_layout_status_yellow
		# custom_effect_tooltip = land_cruiser_multi_layout_status_yellow_tt
		# unlock_decision_tooltip = land_cruiser_implement_tower_structures_in_metal_multi_tower_layout
	# }
# }

# # Одноствольная схема компоновки
# country_event = {
	# id = NWland_cruiser.4
	# title = NWland_cruiser.4.t
	# desc = NWland_cruiser.4.desc
	# picture = GFX_report_event_generic_factory
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.4" }

	# option = {
		# name = NWland_cruiser.3.a
		# set_country_flag = land_cruiser_single_layout_status_yellow
		# custom_effect_tooltip = land_cruiser_multi_layout_status_yellow_tt
		# unlock_decision_tooltip = land_cruiser_implement_tower_structures_in_metal_single_tower_layout
	# }
# }

# # Применимость корабельной брони
# country_event = {
	# id = NWland_cruiser.5
	# title = NWland_cruiser.5.t
	# desc = NWland_cruiser.5.desc
	# picture = GFX_report_event_generic_factory
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.5" }

	# option = {
		# name = NWland_cruiser.1.a
		# set_country_flag = land_cruiser_armor_status_yellow
		# custom_effect_tooltip = land_cruiser_armor_status_yellow_tt
		# unlock_decision_tooltip = land_cruiser_making_armor
	# }
# }

# # Результаты исследования ходовой части
# country_event = {
	# id = NWland_cruiser.6
	# title = NWland_cruiser.6.t
	# desc = NWland_cruiser.6.desc
	# picture = GFX_report_event_generic_factory
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.6" }

	# option = {
		# name = NWland_cruiser.2.a
		# set_country_flag = land_cruiser_chassis_status_yellow
		# unlock_decision_tooltip = land_cruiser_design_transmission
	# }
# }

# # Запилено
# country_event = {
	# id = NWland_cruiser.7
	# title = NWland_cruiser.7.t
	# desc = NWland_cruiser.7.desc
	# picture = GFX_report_event_france_tank_production
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.7" }

	# option = {
		# name = NWland_cruiser.7.a
		# ai_chance = {
			# factor = 50
			# modifier = {
				# factor = 10
				# original_tag = SOV
			# }
		# }
		# trigger = {
			# NOT = { has_country_flag = land_cruiser_chassis_tests_flag }
		# }
		# set_country_flag = land_cruiser_chassis_tests_flag
		# unlock_decision_tooltip = land_cruiser_chassis_tests_state
	# }
	# option = {
		# name = NWland_cruiser.7.b
		# ai_chance = {
			# factor = 10
		# }
		# set_country_flag = land_cruiser_complete_flag
		# set_technology = {
			# land_cruiser_complete_tech = 1
		# }
		# if = {
			# limit = {
				# has_country_flag = we_build_monster
			# }
			# hidden_effect = {
				# load_oob = "unlock_land_cruiser_artillery"
			# }
			# custom_effect_tooltip = UNLOCK_DIVISION_TEMPLATE
			# if = {
				# limit = { original_tag = GER }
				# create_equipment_variant = {
					# name = "P. 1500 Monster"
					# type = land_cruiser_tank_artillery_chassis_1
					# parent_version = 0
					# modules = {
						# land_cruiser_main_armament_slot = land_cruiser_super_heavy_cannon
						# layout_type_slot = land_cruiser_turretless_art_layout
						# special_type_slot_5 = tank_additional_ground_hooks
						# land_cruiser_suspension_type_slot = land_cruiser_torsion_bar_suspension
						# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_quad_track
						# land_cruiser_armor_type_slot = land_cruiser_armor_3
						# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_6500x2
						# special_type_slot_1 = tank_radio_1
					# }
				# }
				# else = {
					# create_equipment_variant = {
						# name = "Land Cruiser Artillery I"
						# type = land_cruiser_tank_artillery_chassis_1
						# parent_version = 0
						# modules = {
							# land_cruiser_main_armament_slot = land_cruiser_super_heavy_cannon
							# layout_type_slot = land_cruiser_turretless_art_layout
							# special_type_slot_5 = tank_additional_ground_hooks
							# land_cruiser_suspension_type_slot = land_cruiser_torsion_bar_suspension
							# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_quad_track
							# land_cruiser_armor_type_slot = land_cruiser_armor_3
							# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_6500x2
							# special_type_slot_1 = tank_radio_1
						# }
					# }
				# }
			# }
		# }
		# else = {
			# hidden_effect = {
				# load_oob = "unlock_land_cruiser"
			# }
			# custom_effect_tooltip = UNLOCK_DIVISION_TEMPLATE
			# if = {
				# limit = { original_tag = SOV }
				# create_equipment_variant = {
					# name = "TG-5"
					# type = land_cruiser_tank_chassis_1
					# parent_version = 0
					# modules = {
						# land_cruiser_main_armament_slot = land_cruiser_double_heavy_cannon
						# layout_type_slot = land_cruiser_multi_turret_layout
						# special_type_slot_5 = tank_repair_kit
						# land_cruiser_suspension_type_slot = land_cruiser_christie_suspension
						# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_triple_track
						# land_cruiser_armor_type_slot = land_cruiser_armor_2
						# land_cruiser_engine_type_slot = land_cruiser_double_turbo_toothed_engine_24000x2
						# special_type_slot_1 = land_cruiser_double_light_cannon
						# special_type_slot_2 = land_cruiser_double_light_cannon
						# special_type_slot_3 = land_cruiser_double_anti_air_cannon_76
						# special_type_slot_4 = tank_radio_1
					# }
				# }
				# else_if = {
					# limit = { original_tag = GER }
					# create_equipment_variant = {
						# name = "P. 1000 Ratte"
						# type = land_cruiser_tank_chassis_1
						# parent_version = 0
						# modules = {
							# land_cruiser_main_armament_slot = land_cruiser_double_medium_cannon
							# layout_type_slot = land_cruiser_front_single_turret_layout
							# special_type_slot_5 = sloped_armor
							# land_cruiser_suspension_type_slot = land_cruiser_interleaved_suspension
							# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_triple_track
							# land_cruiser_armor_type_slot = land_cruiser_armor_1
							# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_8400x2
							# special_type_slot_1 = land_cruiser_light_cannon
							# special_type_slot_2 = land_cruiser_double_anti_air_cannon_128
							# special_type_slot_3 = land_cruiser_double_anti_air_cannon_128
							# special_type_slot_4 = tank_radio_1
						# }
					# }
				# }
				# else = {
					# create_equipment_variant = {
						# name = "Land Cruiser I"
						# type = land_cruiser_tank_chassis_1
						# parent_version = 0
						# modules = {
							# land_cruiser_main_armament_slot = land_cruiser_double_medium_cannon
							# layout_type_slot = land_cruiser_front_single_turret_layout
							# special_type_slot_5 = sloped_armor
							# land_cruiser_suspension_type_slot = land_cruiser_interleaved_suspension
							# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_triple_track
							# land_cruiser_armor_type_slot = land_cruiser_armor_1
							# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_6500x2
							# special_type_slot_1 = land_cruiser_double_anti_air_cannon_76
							# special_type_slot_2 = tank_radio_1
						# }
					# }
				# }
			# }
		# }
	# }
	# option = {
		# name = NWland_cruiser.7.c
		# ai_chance = {
			# factor = 5
			# modifier = {
				# factor = 100
				# original_tag = GER
			# }
		# }
		# set_country_flag = land_cruiser_complete_flag
		# set_technology = {
			# land_cruiser_complete_tech = 1
		# }
		# if = {
			# limit = {
				# has_country_flag = we_build_monster
			# }
			# hidden_effect = {
				# load_oob = "unlock_land_cruiser_artillery"
			# }
			# custom_effect_tooltip = UNLOCK_DIVISION_TEMPLATE
			# if = {
				# limit = { original_tag = GER }
				# create_equipment_variant = {
					# name = "P. 1500 Monster"
					# type = land_cruiser_tank_artillery_chassis_1
					# parent_version = 0
					# modules = {
						# land_cruiser_main_armament_slot = land_cruiser_super_heavy_cannon
						# layout_type_slot = land_cruiser_turretless_art_layout
						# special_type_slot_5 = tank_additional_ground_hooks
						# land_cruiser_suspension_type_slot = land_cruiser_torsion_bar_suspension
						# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_quad_track
						# land_cruiser_armor_type_slot = land_cruiser_armor_3
						# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_6500x2
						# special_type_slot_1 = tank_radio_1
					# }
				# }
			# }
			# else = {
				# create_equipment_variant = {
					# name = "Land Cruiser Artillery I"
					# type = land_cruiser_tank_artillery_chassis_1
					# parent_version = 0
					# modules = {
						# land_cruiser_main_armament_slot = land_cruiser_super_heavy_cannon
						# layout_type_slot = land_cruiser_turretless_art_layout
						# special_type_slot_5 = tank_additional_ground_hooks
						# land_cruiser_suspension_type_slot = land_cruiser_torsion_bar_suspension
						# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_quad_track
						# land_cruiser_armor_type_slot = land_cruiser_armor_3
						# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_6500x2
						# special_type_slot_1 = tank_radio_1
					# }
				# }
			# }
		# }
		# else = {
			# hidden_effect = {
				# load_oob = "unlock_land_cruiser"
			# }
			# custom_effect_tooltip = UNLOCK_DIVISION_TEMPLATE
			# if = {
				# limit = { original_tag = SOV }
				# create_equipment_variant = {
					# name = "TG-5"
					# type = land_cruiser_tank_chassis_1
					# parent_version = 0
					# modules = {
						# land_cruiser_main_armament_slot = land_cruiser_double_heavy_cannon
						# layout_type_slot = land_cruiser_multi_turret_layout
						# special_type_slot_5 = tank_repair_kit
						# land_cruiser_suspension_type_slot = land_cruiser_christie_suspension
						# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_triple_track
						# land_cruiser_armor_type_slot = land_cruiser_armor_2
						# land_cruiser_engine_type_slot = land_cruiser_double_turbo_toothed_engine_24000x2
						# special_type_slot_1 = land_cruiser_double_light_cannon
						# special_type_slot_2 = land_cruiser_double_light_cannon
						# special_type_slot_3 = land_cruiser_double_anti_air_cannon_76
						# special_type_slot_4 = tank_radio_1
					# }
				# }
				# else_if = {
					# limit = { original_tag = GER }
					# create_equipment_variant = {
						# name = "P. 1000 Ratte"
						# type = land_cruiser_tank_chassis_1
						# parent_version = 0
						# modules = {
							# land_cruiser_main_armament_slot = land_cruiser_double_medium_cannon
							# layout_type_slot = land_cruiser_front_single_turret_layout
							# special_type_slot_5 = sloped_armor
							# land_cruiser_suspension_type_slot = land_cruiser_interleaved_suspension
							# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_triple_track
							# land_cruiser_armor_type_slot = land_cruiser_armor_1
							# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_8400x2
							# special_type_slot_1 = land_cruiser_light_cannon
							# special_type_slot_2 = land_cruiser_double_anti_air_cannon_128
							# special_type_slot_3 = land_cruiser_double_anti_air_cannon_128
							# special_type_slot_4 = tank_radio_1
						# }
					# }
				# }
				# else = {
					# create_equipment_variant = {
						# name = "Land Cruiser I"
						# type = land_cruiser_tank_chassis_1
						# parent_version = 0
						# modules = {
							# land_cruiser_main_armament_slot = land_cruiser_double_medium_cannon
							# layout_type_slot = land_cruiser_front_single_turret_layout
							# special_type_slot_5 = sloped_armor
							# land_cruiser_suspension_type_slot = land_cruiser_interleaved_suspension
							# land_cruiser_continuous_track_type_slot = land_cruiser_continuous_triple_track
							# land_cruiser_armor_type_slot = land_cruiser_armor_1
							# land_cruiser_engine_type_slot = land_cruiser_double_diesel_engine_6500x2
							# special_type_slot_1 = land_cruiser_double_anti_air_cannon_76
							# special_type_slot_2 = tank_radio_1
						# }
					# }
				# }
			# }
		# }
		# add_ideas = MEMES_stop_producing_food
	# }
# }

# # Начало испытаний
# country_event = {
	# id = NWland_cruiser.8
	# title = NWland_cruiser.8.t
	# desc = NWland_cruiser.8.desc
	# picture = GFX_report_event_NWland_cruiser_8
	# is_triggered_only = yes
	
	# immediate = { log = "[GetDateText]: [Root.GetName] ([Root.GetTag]): event NWland_cruiser.8" }

	# option = {
		# name = NWland_cruiser.2.a
		# set_entity_animation = { id = ROOT.entity_id_var	animation = "defend" }
		# set_entity_rotation = {	 id = ROOT.entity_id_var	rotation = -0.8 }
		
		# set_entity_animation = { id = ROOT.entity_2_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_2_id_var	rotation = 4.0 }
		
		# set_entity_animation = { id = ROOT.entity_3_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_3_id_var	rotation = 0.8 }
		
		# set_entity_animation = { id = ROOT.entity_4_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_4_id_var	rotation = 1.3 }
		
		# set_entity_animation = { id = ROOT.entity_5_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_5_id_var	rotation = 2.3 }
		
		# set_entity_animation = { id = ROOT.entity_6_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_6_id_var	rotation = 3 }
		
		# set_entity_animation = { id = ROOT.entity_7_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_7_id_var	rotation = -0.5 }
		
		# set_entity_animation = { id = ROOT.entity_8_id_var	animation = "attack" }
		# set_entity_rotation = {	 id = ROOT.entity_8_id_var	rotation = -1 }
		# hidden_effect = {
			# random_controlled_state = {
				# limit = { has_state_flag = land_cruiser_chassis_tests_flag }
				# ROOT = { goto_state = PREV }
			# }
		# }
	# }
# }